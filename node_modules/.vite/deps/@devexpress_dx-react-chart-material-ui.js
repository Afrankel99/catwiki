import {
  createChainedFunction_default,
  init_createChainedFunction,
  init_requirePropFactory,
  init_useId,
  init_utils,
  requirePropFactory_default,
  useId_default
} from "./chunk-TF75MDLM.js";
import "./chunk-TRABKLG3.js";
import "./chunk-COBJW7F7.js";
import "./chunk-VTOEE3HU.js";
import {
  Typography_default
} from "./chunk-PHA2IUM7.js";
import {
  ImageListContext_default
} from "./chunk-T4VB4XL5.js";
import {
  ButtonGroupContext_default
} from "./chunk-B5IB54P5.js";
import {
  Close_default,
  IconButton_default,
  Popper_default,
  getUnit,
  toUnitless
} from "./chunk-CLD7G7UQ.js";
import {
  init_unsupportedProp,
  unsupportedProp_default
} from "./chunk-QXUC73C2.js";
import {
  ButtonBase_default
} from "./chunk-UEXLZF5J.js";
import {
  init_useEventCallback,
  init_useIsFocusVisible,
  useEventCallback_default,
  useIsFocusVisible_default
} from "./chunk-AEFHAPPU.js";
import {
  Backdrop_default,
  Fade_default,
  Grow_default,
  Input_default,
  ListContext_default,
  List_default,
  Modal_default,
  NativeSelectInput_default,
  Select_default,
  getNativeSelectUtilityClasses,
  getTransitionProps,
  reflow,
  require_react_is
} from "./chunk-32CIRLR6.js";
import {
  debounce_default,
  init_debounce,
  init_isMuiElement,
  init_ownerDocument,
  init_ownerWindow,
  init_useControlled,
  isMuiElement_default,
  ownerDocument_default,
  ownerWindow_default,
  useControlled_default
} from "./chunk-J2K7HOVU.js";
import {
  ArrowDropDown_default,
  FormControlContext_default,
  GlobalStyles_default,
  InputBase_default,
  formControlState,
  useFormControl
} from "./chunk-ANF4UCPN.js";
import {
  SvgIcon_default,
  createSvgIcon,
  init_SvgIcon,
  init_createSvgIcon,
  init_useEnhancedEffect,
  useEnhancedEffect_default
} from "./chunk-GFLPNOAA.js";
import {
  Paper_default,
  useTheme
} from "./chunk-KGILOSMZ.js";
import {
  init_useForkRef,
  useForkRef_default
} from "./chunk-N34FWFCF.js";
import {
  capitalize_default,
  init_capitalize
} from "./chunk-SUL7EDVW.js";
import {
  BadgeUnstyled_default,
  ClassNameGenerator_default,
  ClickAwayListener_default,
  HTMLElementType,
  NoSsr_default,
  alpha,
  appendOwnerState,
  chainPropTypes,
  clsx_m_default,
  composeClasses,
  createBox,
  createContainer,
  createGrid,
  createTheme_default,
  createUnarySpacing,
  css,
  darken,
  deepmerge,
  detectScrollType,
  duration,
  elementAcceptingRef_default,
  elementTypeAcceptingRef_default,
  emphasize,
  exactProp,
  extendSxProp,
  generateUtilityClass,
  generateUtilityClasses,
  getDisplayName,
  getNormalizedScrollLeft,
  getPath,
  getThemeProps,
  getValue,
  handleBreakpoints,
  init_AutocompleteUnstyled,
  init_BadgeUnstyled,
  init_ClickAwayListener,
  init_FocusTrap,
  init_NoSsr,
  init_Portal,
  init_SliderUnstyled,
  init_TextareaAutosize,
  init_Unstable_Grid,
  init_base,
  init_blue,
  init_clsx_m,
  init_common,
  init_composeClasses,
  init_createTransitions,
  init_esm,
  init_esm2,
  init_generateUtilityClass,
  init_green,
  init_grey,
  init_lightBlue,
  init_orange,
  init_purple,
  init_red,
  init_styled,
  init_useThemeProps,
  integerPropType_default,
  isHostComponent_default,
  keyframes,
  lighten,
  mergeBreakpointsInOrder,
  refType_default,
  resolveBreakpointValues,
  rootShouldForwardProp,
  slotShouldForwardProp,
  styled_default,
  useControlled,
  useId,
  usePreviousProps_default,
  useSlider,
  useSlotProps,
  useThemeProps,
  useThemeProps2,
  useThemeWithoutDefault_default,
  visuallyHidden_default
} from "./chunk-QSOXLUW5.js";
import {
  require_jsx_runtime
} from "./chunk-YGKJRGOW.js";
import {
  Transition_default
} from "./chunk-PTQIFGUB.js";
import {
  _extends,
  _objectWithoutPropertiesLoose,
  init_extends,
  init_objectWithoutPropertiesLoose,
  require_prop_types
} from "./chunk-RA6K65OC.js";
import {
  require_react_dom
} from "./chunk-JZ3YVIXN.js";
import {
  require_react
} from "./chunk-6CE3F7YD.js";
import {
  __toESM
} from "./chunk-TFWDKVI3.js";

// node_modules/@devexpress/dx-react-chart-material-ui/dist/dx-react-chart-material-ui.es.js
var import_react5 = __toESM(require_react());
var import_prop_types104 = __toESM(require_prop_types());

// node_modules/@devexpress/dx-react-core/dist/dx-react-core.es.js
var import_react = __toESM(require_react());

// node_modules/@devexpress/dx-core/dist/dx-core.es.js
function __read(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error) {
    e = { error };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
}
function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || from);
}
var compare = function(a2, b) {
  var aPosition = a2.position();
  var bPosition = b.position();
  for (var i = 0; i < Math.min(aPosition.length, bPosition.length); i += 1) {
    if (aPosition[i] < bPosition[i])
      return -1;
    if (aPosition[i] > bPosition[i])
      return 1;
  }
  return aPosition.length - bPosition.length;
};
var insertPlugin = function(array2, newItem) {
  var result = array2.slice();
  var nextItemIndex = array2.findIndex(function(item) {
    return compare(newItem, item) <= 0;
  });
  var targetIndex = nextItemIndex < 0 ? array2.length : nextItemIndex;
  var alreadyExists = targetIndex >= 0 && targetIndex < array2.length && compare(newItem, array2[targetIndex]) === 0;
  var deletedItems = 0;
  if (alreadyExists) {
    deletedItems = 1;
    var targetItemPosition = result[targetIndex].position();
    if (targetItemPosition.length > 1) {
      for (var i = targetIndex + 1; i < result.length; i += 1) {
        var itemPosition = result[i].position();
        if (targetItemPosition.length === itemPosition.length && targetItemPosition[targetItemPosition.length - 2] === itemPosition[itemPosition.length - 2]) {
          deletedItems += 1;
        } else {
          break;
        }
      }
    }
  }
  result.splice(targetIndex, deletedItems, newItem);
  return result;
};
var removePlugin = function(array2, item) {
  var itemIndex = array2.indexOf(item);
  return itemIndex >= 0 ? __spreadArray(__spreadArray([], __read(array2.slice(0, itemIndex)), false), __read(array2.slice(itemIndex + 1)), false) : array2;
};
var hasWindow = function() {
  return typeof window !== "undefined";
};
var getDependencyError = function(pluginName, dependencyName) {
  return new Error("The '".concat(pluginName, "' plugin requires '").concat(dependencyName, "' to be defined before it."));
};
var PluginHost = function() {
  function PluginHost3() {
    this.gettersCache = {};
    this.knownKeysCache = {};
    this.validationRequired = true;
    this.plugins = [];
    this.subscriptions = /* @__PURE__ */ new Set();
  }
  PluginHost3.prototype.ensureDependencies = function() {
    var defined = /* @__PURE__ */ new Set();
    var knownOptionals = /* @__PURE__ */ new Map();
    this.plugins.filter(function(plugin) {
      return plugin.container;
    }).forEach(function(plugin) {
      var pluginName = plugin.name || "";
      if (knownOptionals.has(pluginName)) {
        throw getDependencyError(knownOptionals.get(pluginName), pluginName);
      }
      (plugin.dependencies || []).forEach(function(dependency) {
        if (defined.has(dependency.name))
          return;
        if (dependency.optional) {
          if (!knownOptionals.has(dependency.name)) {
            knownOptionals.set(dependency.name, pluginName);
          }
          return;
        }
        throw getDependencyError(pluginName, dependency.name);
      });
      defined.add(pluginName);
    });
  };
  PluginHost3.prototype.registerPlugin = function(plugin) {
    this.plugins = insertPlugin(this.plugins, plugin);
    this.cleanPluginsCache();
  };
  PluginHost3.prototype.unregisterPlugin = function(plugin) {
    this.plugins = removePlugin(this.plugins, plugin);
    this.cleanPluginsCache();
  };
  PluginHost3.prototype.knownKeys = function(postfix) {
    if (!this.knownKeysCache[postfix]) {
      this.knownKeysCache[postfix] = Array.from(this.plugins.map(function(plugin) {
        return Object.keys(plugin);
      }).map(function(keys) {
        return keys.filter(function(key) {
          return key.endsWith(postfix);
        })[0];
      }).filter(function(key) {
        return !!key;
      }).reduce(function(acc, key) {
        return acc.add(key);
      }, /* @__PURE__ */ new Set())).map(function(key) {
        return key.replace(postfix, "");
      });
    }
    return this.knownKeysCache[postfix];
  };
  PluginHost3.prototype.collect = function(key, upTo) {
    if (this.validationRequired) {
      this.ensureDependencies();
      this.validationRequired = false;
    }
    var res = this.gettersCache[key];
    if (!res) {
      var indexCache = this.plugins.map(function(plugin, index2) {
        return { key: plugin[key], index: index2 };
      }).filter(function(plugin) {
        return !!plugin.key;
      });
      this.gettersCache["".concat(key, "_i")] = indexCache;
      res = indexCache.map(function(item) {
        return item.key;
      });
      this.gettersCache[key] = res;
    }
    if (!upTo)
      return res;
    var upToIndex = this.plugins.indexOf(upTo);
    var upToIndexKey = key + upToIndex;
    var upToRes = this.gettersCache[upToIndexKey];
    if (!upToRes) {
      var indexCache_1 = this.gettersCache["".concat(key, "_i")];
      upToRes = this.gettersCache[key].filter(function(getter, index2) {
        return indexCache_1[index2].index < upToIndex;
      });
      this.gettersCache[upToIndexKey] = upToRes;
    }
    return upToRes;
  };
  PluginHost3.prototype.get = function(key, upTo) {
    var plugins = this.collect(key, upTo);
    if (!plugins.length)
      return void 0;
    var result;
    plugins.forEach(function(plugin) {
      result = plugin(result);
    });
    return result;
  };
  PluginHost3.prototype.registerSubscription = function(subscription) {
    this.subscriptions.add(subscription);
  };
  PluginHost3.prototype.unregisterSubscription = function(subscription) {
    this.subscriptions.delete(subscription);
  };
  PluginHost3.prototype.broadcast = function(event, message) {
    this.subscriptions.forEach(function(subscription) {
      return subscription[event] && subscription[event](message);
    });
  };
  PluginHost3.prototype.cleanPluginsCache = function() {
    this.validationRequired = true;
    this.gettersCache = {};
    this.knownKeysCache = {};
  };
  return PluginHost3;
}();
var EventEmitter = function() {
  function EventEmitter2() {
    this.handlers = [];
  }
  EventEmitter2.prototype.emit = function(e) {
    this.handlers.forEach(function(handler) {
      return handler(e);
    });
  };
  EventEmitter2.prototype.subscribe = function(handler) {
    this.handlers.push(handler);
  };
  EventEmitter2.prototype.unsubscribe = function(handler) {
    this.handlers.splice(this.handlers.indexOf(handler), 1);
  };
  return EventEmitter2;
}();
var shallowEqual = function(objA, objB) {
  if (objA === objB) {
    return true;
  }
  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);
  if (keysA.length !== keysB.length) {
    return false;
  }
  var hasOwn = Object.prototype.hasOwnProperty;
  for (var i = 0; i < keysA.length; i += 1) {
    if (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
      return false;
    }
    var valA = objA[keysA[i]];
    var valB = objB[keysA[i]];
    if (valA !== valB) {
      return false;
    }
  }
  return true;
};

// node_modules/@devexpress/dx-react-core/dist/dx-react-core.es.js
var import_react_dom = __toESM(require_react_dom());
var import_prop_types = __toESM(require_prop_types());
var extendStatics = function(d, b) {
  extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
    d2.__proto__ = b2;
  } || function(d2, b2) {
    for (var p in b2)
      if (Object.prototype.hasOwnProperty.call(b2, p))
        d2[p] = b2[p];
  };
  return extendStatics(d, b);
};
function __extends(d, b) {
  if (typeof b !== "function" && b !== null)
    throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
  extendStatics(d, b);
  function __() {
    this.constructor = d;
  }
  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var __assign = function() {
  __assign = Object.assign || function __assign4(t) {
    for (var s2, i = 1, n = arguments.length; i < n; i++) {
      s2 = arguments[i];
      for (var p in s2)
        if (Object.prototype.hasOwnProperty.call(s2, p))
          t[p] = s2[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
function __rest(s2, e) {
  var t = {};
  for (var p in s2)
    if (Object.prototype.hasOwnProperty.call(s2, p) && e.indexOf(p) < 0)
      t[p] = s2[p];
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s2); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i]))
        t[p[i]] = s2[p[i]];
    }
  return t;
}
function __read2(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error) {
    e = { error };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
}
function __spreadArray2(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || from);
}
var PluginHostContext = (0, import_react.createContext)(null);
var PositionContext = (0, import_react.createContext)(function() {
  return [];
});
var TemplateHostContext = (0, import_react.createContext)(null);
var PluginIndexer = function(_super) {
  __extends(PluginIndexer2, _super);
  function PluginIndexer2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.indexes = {};
    _this.memoize = function(index2, positionContext) {
      if (_this.indexes[index2])
        return _this.indexes[index2];
      var fn = function() {
        var calculatedPosition = positionContext();
        return __spreadArray2(__spreadArray2([], __read2(calculatedPosition), false), [index2], false);
      };
      _this.indexes[index2] = fn;
      return fn;
    };
    return _this;
  }
  PluginIndexer2.prototype.render = function() {
    var _this = this;
    var children = this.props.children;
    return (0, import_react.createElement)(PositionContext.Consumer, null, function(positionContext) {
      return import_react.Children.map(children, function(child, index2) {
        if (!child || !child.type)
          return child;
        var childPosition = _this.memoize(index2, positionContext);
        return (0, import_react.createElement)(PositionContext.Provider, { key: String(index2), value: childPosition }, child);
      });
    });
  };
  return PluginIndexer2;
}(import_react.PureComponent);
var PLUGIN_HOST_CONTEXT = "dxcore_pluginHost_context";
var POSITION_CONTEXT = "dxcore_position_context";
var TEMPLATE_HOST_CONTEXT = "dxcore_templateHost_context";
var RERENDER_TEMPLATE_EVENT = Symbol("rerenderTemplate");
var RERENDER_TEMPLATE_SCOPE_EVENT = Symbol("rerenderTemplateScope");
var UPDATE_CONNECTION_EVENT = Symbol("updateConnection");
var withContext = function(Context, name) {
  return function(Component2) {
    return function(props) {
      return (0, import_react.createElement)(Context.Consumer, null, function(context) {
        var _a3;
        return (0, import_react.createElement)(Component2, __assign({}, props, (_a3 = {}, _a3[name] = context, _a3)));
      });
    };
  };
};
var withHostAndPosition = function(Component2) {
  return withContext(PluginHostContext, PLUGIN_HOST_CONTEXT)(withContext(PositionContext, POSITION_CONTEXT)(Component2));
};
var PluginBase = function(_super) {
  __extends(PluginBase2, _super);
  function PluginBase2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  PluginBase2.prototype.componentDidMount = function() {
    var _a3 = this.props, _b2 = PLUGIN_HOST_CONTEXT, pluginHost = _a3[_b2], _c = POSITION_CONTEXT, position = _a3[_c];
    var _d = this.props, name = _d.name, dependencies2 = _d.dependencies;
    this.plugin = {
      position,
      name,
      dependencies: dependencies2,
      container: true
    };
    pluginHost.registerPlugin(this.plugin);
    pluginHost.ensureDependencies();
  };
  PluginBase2.prototype.componentDidUpdate = function() {
    var _a3 = this.props, _b2 = PLUGIN_HOST_CONTEXT, pluginHost = _a3[_b2];
    pluginHost.ensureDependencies();
  };
  PluginBase2.prototype.componentWillUnmount = function() {
    var _a3 = this.props, _b2 = PLUGIN_HOST_CONTEXT, pluginHost = _a3[_b2];
    pluginHost.unregisterPlugin(this.plugin);
  };
  PluginBase2.prototype.render = function() {
    var children = this.props.children;
    return (0, import_react.createElement)(PluginIndexer, null, children);
  };
  return PluginBase2;
}(import_react.PureComponent);
var Plugin = withHostAndPosition(PluginBase);
var getRenderingData = function(props) {
  var name = props.name, params = props.params;
  if (name) {
    var _a3 = props, _b2 = PLUGIN_HOST_CONTEXT, pluginHost = _a3[_b2];
    return {
      params,
      templates: pluginHost.collect("".concat(name, "Template")).filter(function(template) {
        return template.predicate(params);
      }).reverse()
    };
  }
  var _c = props, _d = TEMPLATE_HOST_CONTEXT, templateHost = _c[_d];
  return {
    params: params || templateHost.params(),
    templates: templateHost.templates()
  };
};
var TemplatePlaceholderBase = function(_super) {
  __extends(TemplatePlaceholderBase2, _super);
  function TemplatePlaceholderBase2() {
    var _a3;
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.subscription = (_a3 = {}, _a3[RERENDER_TEMPLATE_EVENT] = function(id) {
      if (_this.template && _this.template.id === id) {
        _this.forceUpdate();
      }
    }, _a3[RERENDER_TEMPLATE_SCOPE_EVENT] = function(name) {
      var propsName = _this.props.name;
      if (propsName === name) {
        _this.forceUpdate();
      }
    }, _a3);
    _this.template = null;
    _this.params = {};
    return _this;
  }
  TemplatePlaceholderBase2.prototype.componentDidMount = function() {
    var _a3 = this.props, _b2 = PLUGIN_HOST_CONTEXT, pluginHost = _a3[_b2];
    pluginHost.registerSubscription(this.subscription);
  };
  TemplatePlaceholderBase2.prototype.shouldComponentUpdate = function(nextProps) {
    var _a3 = getRenderingData(nextProps), params = _a3.params, templates = _a3.templates;
    var _b2 = __read2(templates, 1), template = _b2[0];
    var children = this.props.children;
    return children !== nextProps.children || templates.length !== getRenderingData(this.props).templates.length || this.template !== template || !shallowEqual(this.params, params);
  };
  TemplatePlaceholderBase2.prototype.componentWillUnmount = function() {
    var _a3 = this.props, _b2 = PLUGIN_HOST_CONTEXT, pluginHost = _a3[_b2];
    pluginHost.unregisterSubscription(this.subscription);
  };
  TemplatePlaceholderBase2.prototype.render = function() {
    var _a3;
    var _this = this;
    var _b2 = getRenderingData(this.props), params = _b2.params, templates = _b2.templates;
    this.params = params;
    _a3 = __read2(templates, 1), this.template = _a3[0];
    var restTemplates = templates.slice(1);
    var content = null;
    if (this.template) {
      var templateContent = this.template.children;
      content = templateContent() || null;
      if (content && typeof content === "function") {
        content = content(params);
      }
    }
    var templatePlaceholder = this.props.children;
    return (0, import_react.createElement)(TemplateHostContext.Provider, { value: {
      templates: function() {
        return restTemplates;
      },
      params: function() {
        return _this.params;
      }
    } }, templatePlaceholder ? templatePlaceholder(content) : content);
  };
  return TemplatePlaceholderBase2;
}(import_react.Component);
var TemplatePlaceholder = withContext(PluginHostContext, PLUGIN_HOST_CONTEXT)(withContext(TemplateHostContext, TEMPLATE_HOST_CONTEXT)(TemplatePlaceholderBase));
var PluginHostBase = function(_super) {
  __extends(PluginHostBase2, _super);
  function PluginHostBase2(props) {
    var _this = _super.call(this, props) || this;
    _this.host = new PluginHost();
    return _this;
  }
  PluginHostBase2.prototype.render = function() {
    var children = this.props.children;
    return (0, import_react.createElement)(
      PluginHostContext.Provider,
      { value: this.host },
      (0, import_react.createElement)(PluginIndexer, null, children),
      (0, import_react.createElement)(TemplatePlaceholder, { name: "root" })
    );
  };
  return PluginHostBase2;
}(import_react.PureComponent);
var PluginHost2 = PluginHostBase;
var getAvailableGetters = function(pluginHost, getGetterValue) {
  if (getGetterValue === void 0) {
    getGetterValue = function(getterName) {
      return pluginHost.get("".concat(getterName, "Getter"));
    };
  }
  var trackedDependencies = {};
  var getters;
  if (typeof Proxy !== "undefined") {
    getters = new Proxy({}, {
      get: function(target, prop) {
        if (typeof prop !== "string")
          return void 0;
        var result = getGetterValue(prop);
        trackedDependencies[prop] = result;
        return result;
      },
      getOwnPropertyDescriptor: function(target, prop) {
        return {
          configurable: true,
          enumerable: true,
          value: this.get(target, prop, void 0)
        };
      },
      ownKeys: function() {
        return pluginHost.knownKeys("Getter");
      }
    });
  } else {
    getters = pluginHost.knownKeys("Getter").reduce(function(acc, getterName) {
      Object.defineProperty(acc, getterName, {
        get: function() {
          var result = getGetterValue(getterName);
          trackedDependencies[getterName] = result;
          return result;
        }
      });
      return acc;
    }, {});
  }
  return { getters, trackedDependencies };
};
var isTrackedDependenciesChanged = function(pluginHost, prevTrackedDependencies, getGetterValue) {
  if (getGetterValue === void 0) {
    getGetterValue = function(getterName) {
      return pluginHost.get("".concat(getterName, "Getter"));
    };
  }
  var trackedDependencies = Object.keys(prevTrackedDependencies).reduce(function(acc, getterName) {
    var _a3;
    return Object.assign(acc, (_a3 = {}, _a3[getterName] = getGetterValue(getterName), _a3));
  }, {});
  return !shallowEqual(prevTrackedDependencies, trackedDependencies);
};
var getAvailableActions = function(pluginHost, getAction) {
  if (getAction === void 0) {
    getAction = function(actionName) {
      return pluginHost.collect("".concat(actionName, "Action")).slice().reverse()[0];
    };
  }
  var actions;
  if (typeof Proxy !== "undefined") {
    actions = new Proxy({}, {
      get: function(target, prop) {
        if (typeof prop !== "string")
          return void 0;
        return getAction(prop);
      },
      getOwnPropertyDescriptor: function(target, prop) {
        return {
          configurable: true,
          enumerable: true,
          value: this.get(target, prop, void 0)
        };
      },
      ownKeys: function() {
        return pluginHost.knownKeys("Action");
      }
    });
  } else {
    actions = pluginHost.knownKeys("Action").reduce(function(acc, actionName) {
      Object.defineProperty(acc, actionName, {
        get: function() {
          return getAction(actionName);
        }
      });
      return acc;
    }, {});
  }
  return actions;
};
var ActionBase = function(_super) {
  __extends(ActionBase2, _super);
  function ActionBase2(props) {
    var _a3;
    var _this = _super.call(this, props) || this;
    var _b2 = props, _c = PLUGIN_HOST_CONTEXT, pluginHost = _b2[_c], _d = POSITION_CONTEXT, positionContext = _b2[_d];
    var name = props.name;
    _this.plugin = (_a3 = {
      position: function() {
        return positionContext();
      }
    }, _a3["".concat(name, "Action")] = function(params) {
      var action = _this.props.action;
      var getters = getAvailableGetters(pluginHost, function(getterName) {
        return pluginHost.get("".concat(getterName, "Getter"), _this.plugin);
      }).getters;
      var nextParams = params;
      var actions = getAvailableActions(pluginHost, function(actionName) {
        return actionName === name ? function(newParams) {
          nextParams = newParams;
        } : pluginHost.collect("".concat(actionName, "Action"), _this.plugin).slice().reverse()[0];
      });
      action(params, getters, actions);
      var nextAction = pluginHost.collect("".concat(name, "Action"), _this.plugin).slice().reverse()[0];
      if (nextAction) {
        nextAction(nextParams);
      }
    }, _a3);
    pluginHost.registerPlugin(_this.plugin);
    return _this;
  }
  ActionBase2.prototype.componentWillUnmount = function() {
    var _a3 = this.props, _b2 = PLUGIN_HOST_CONTEXT, pluginHost = _a3[_b2];
    pluginHost.unregisterPlugin(this.plugin);
  };
  ActionBase2.prototype.render = function() {
    return null;
  };
  return ActionBase2;
}(import_react.PureComponent);
var Action = withHostAndPosition(ActionBase);
var GetterBase = function(_super) {
  __extends(GetterBase2, _super);
  function GetterBase2(props) {
    var _a3;
    var _this = _super.call(this, props) || this;
    var _b2 = props, _c = PLUGIN_HOST_CONTEXT, pluginHost = _b2[_c], _d = POSITION_CONTEXT, positionContext = _b2[_d];
    var name = props.name;
    var lastComputed;
    var lastTrackedDependencies = {};
    var lastResult;
    _this.plugin = (_a3 = {
      position: function() {
        return positionContext();
      }
    }, _a3["".concat(name, "Getter")] = function(original) {
      var _a4 = _this.props, value = _a4.value, computed = _a4.computed;
      if (computed === void 0)
        return value;
      var getGetterValue = function(getterName) {
        return getterName === name ? original : pluginHost.get("".concat(getterName, "Getter"), _this.plugin);
      };
      if (computed === lastComputed && !isTrackedDependenciesChanged(pluginHost, lastTrackedDependencies, getGetterValue)) {
        return lastResult;
      }
      var _b3 = getAvailableGetters(pluginHost, getGetterValue), getters = _b3.getters, trackedDependencies = _b3.trackedDependencies;
      var actions = getAvailableActions(pluginHost);
      lastComputed = computed;
      lastTrackedDependencies = trackedDependencies;
      lastResult = computed(getters, actions);
      return lastResult;
    }, _a3);
    pluginHost.registerPlugin(_this.plugin);
    return _this;
  }
  GetterBase2.prototype.componentDidUpdate = function() {
    var _a3 = this.props, _b2 = PLUGIN_HOST_CONTEXT, pluginHost = _a3[_b2];
    pluginHost.broadcast(UPDATE_CONNECTION_EVENT);
  };
  GetterBase2.prototype.componentWillUnmount = function() {
    var _a3 = this.props, _b2 = PLUGIN_HOST_CONTEXT, pluginHost = _a3[_b2];
    pluginHost.unregisterPlugin(this.plugin);
  };
  GetterBase2.prototype.render = function() {
    return null;
  };
  return GetterBase2;
}(import_react.PureComponent);
var Getter = withHostAndPosition(GetterBase);
var globalTemplateId = 0;
var TemplateBase = function(_super) {
  __extends(TemplateBase2, _super);
  function TemplateBase2(props) {
    var _a3;
    var _this = _super.call(this, props) || this;
    _this.children = function() {
      return void 0;
    };
    globalTemplateId += 1;
    _this.id = globalTemplateId;
    var _b2 = props, _c = PLUGIN_HOST_CONTEXT, pluginHost = _b2[_c], _d = POSITION_CONTEXT, positionContext = _b2[_d];
    var name = props.name, predicate = props.predicate;
    _this.plugin = (_a3 = {
      position: function() {
        return positionContext();
      }
    }, _a3["".concat(name, "Template")] = {
      id: _this.id,
      predicate: function(params) {
        return predicate ? predicate(params) : true;
      },
      children: function() {
        var children = _this.props.children;
        return children;
      }
    }, _a3);
    pluginHost.registerPlugin(_this.plugin);
    pluginHost.broadcast(RERENDER_TEMPLATE_SCOPE_EVENT, name);
    return _this;
  }
  TemplateBase2.prototype.componentDidUpdate = function() {
    var _a3 = this.props, _b2 = PLUGIN_HOST_CONTEXT, pluginHost = _a3[_b2];
    pluginHost.broadcast(RERENDER_TEMPLATE_EVENT, this.id);
  };
  TemplateBase2.prototype.componentWillUnmount = function() {
    var _a3 = this.props, _b2 = PLUGIN_HOST_CONTEXT, pluginHost = _a3[_b2];
    var name = this.props.name;
    pluginHost.unregisterPlugin(this.plugin);
    pluginHost.broadcast(RERENDER_TEMPLATE_SCOPE_EVENT, name);
  };
  TemplateBase2.prototype.render = function() {
    return null;
  };
  return TemplateBase2;
}(import_react.PureComponent);
var Template = withHostAndPosition(TemplateBase);
var TemplateConnectorBase = function(_super) {
  __extends(TemplateConnectorBase2, _super);
  function TemplateConnectorBase2(props, context) {
    var _a3;
    var _this = _super.call(this, props, context) || this;
    _this.trackedDependencies = {};
    _this.subscription = (_a3 = {}, _a3[UPDATE_CONNECTION_EVENT] = function() {
      return _this.updateConnection();
    }, _a3);
    return _this;
  }
  TemplateConnectorBase2.prototype.componentDidMount = function() {
    var pluginHost = this.context;
    pluginHost.registerSubscription(this.subscription);
  };
  TemplateConnectorBase2.prototype.componentWillUnmount = function() {
    var pluginHost = this.context;
    pluginHost.unregisterSubscription(this.subscription);
  };
  TemplateConnectorBase2.prototype.updateConnection = function() {
    var pluginHost = this.context;
    if (isTrackedDependenciesChanged(pluginHost, this.trackedDependencies)) {
      this.forceUpdate();
    }
  };
  TemplateConnectorBase2.prototype.render = function() {
    var pluginHost = this.context;
    var children = this.props.children;
    var _a3 = getAvailableGetters(pluginHost), getters = _a3.getters, trackedDependencies = _a3.trackedDependencies;
    this.trackedDependencies = trackedDependencies;
    var actions = getAvailableActions(pluginHost);
    return children(getters, actions);
  };
  return TemplateConnectorBase2;
}(import_react.Component);
TemplateConnectorBase.contextType = PluginHostContext;
var TemplateConnector = TemplateConnectorBase;
var TIMEOUT = 180;
var TouchStrategy = function() {
  function TouchStrategy2(delegate) {
    this.delegate = delegate;
    this.touchStartTimeout = null;
    this.dragging = false;
  }
  TouchStrategy2.prototype.isDragging = function() {
    return this.dragging;
  };
  TouchStrategy2.prototype.isWaiting = function() {
    return !!this.touchStartTimeout;
  };
  TouchStrategy2.prototype.cancelWaiting = function() {
    clearTimeout(this.touchStartTimeout);
    this.touchStartTimeout = void 0;
  };
  TouchStrategy2.prototype.start = function(e) {
    var _this = this;
    var _a3 = e.touches[0], x2 = _a3.clientX, y2 = _a3.clientY;
    this.touchStartTimeout = setTimeout(function() {
      _this.delegate.onStart({ x: x2, y: y2 });
      _this.dragging = true;
    }, TIMEOUT);
  };
  TouchStrategy2.prototype.move = function(e) {
    this.cancelWaiting();
    if (this.dragging) {
      var _a3 = e.touches[0], clientX = _a3.clientX, clientY = _a3.clientY;
      e.preventDefault();
      this.delegate.onMove({ x: clientX, y: clientY });
    }
  };
  TouchStrategy2.prototype.end = function(e) {
    this.cancelWaiting();
    if (this.dragging) {
      var _a3 = e.changedTouches[0], clientX = _a3.clientX, clientY = _a3.clientY;
      this.delegate.onEnd({ x: clientX, y: clientY });
    }
    this.dragging = false;
  };
  return TouchStrategy2;
}();
var gestureCover;
var toggleGestureCover = function(toggle, cursor) {
  var style2 = {
    pointerEvents: toggle ? "all" : "none"
  };
  if (toggle && cursor) {
    style2 = __assign(__assign({}, style2), { cursor });
  }
  if (!gestureCover) {
    style2 = __assign(__assign({}, style2), { position: "fixed", top: 0, right: 0, left: 0, bottom: 0, opacity: 0, zIndex: 2147483647 });
    gestureCover = document.createElement("div");
    document.body.appendChild(gestureCover);
  }
  Object.keys(style2).forEach(function(key) {
    gestureCover.style[key] = style2[key];
  });
};
var clear = function() {
  var selection = window.getSelection && window.getSelection();
  if (selection) {
    if (selection.empty) {
      selection.empty();
    } else if (selection.removeAllRanges) {
      selection.removeAllRanges();
    }
  }
};
var BOUNDARY = 10;
var clamp = function(value, min3, max3) {
  return Math.max(Math.min(value, max3), min3);
};
var isBoundExceeded = function(_a3, _b2) {
  var initialX = _a3.x, initialY = _a3.y;
  var x2 = _b2.x, y2 = _b2.y;
  return clamp(x2, initialX - BOUNDARY, initialX + BOUNDARY) !== x2 || clamp(y2, initialY - BOUNDARY, initialY + BOUNDARY) !== y2;
};
var MouseStrategy = function() {
  function MouseStrategy2(delegate) {
    this.delegate = delegate;
    this.mouseInitialOffset = null;
    this.dragging = false;
  }
  MouseStrategy2.prototype.isDragging = function() {
    return this.dragging;
  };
  MouseStrategy2.prototype.start = function(e) {
    var x2 = e.clientX, y2 = e.clientY;
    this.e = e;
    this.mouseInitialOffset = { x: x2, y: y2 };
  };
  MouseStrategy2.prototype.move = function(e) {
    var x2 = e.clientX, y2 = e.clientY;
    var dragStarted = false;
    if (!this.dragging && this.mouseInitialOffset) {
      if (isBoundExceeded(this.mouseInitialOffset, { x: x2, y: y2 })) {
        this.delegate.onStart(this.mouseInitialOffset);
        clear();
        dragStarted = true;
        this.dragging = true;
      }
    }
    if (this.dragging) {
      e.preventDefault();
      this.delegate.onMove({ x: x2, y: y2 });
    }
    if (dragStarted) {
      var element = document.elementFromPoint(x2, y2);
      var cursor = element ? window.getComputedStyle(element).cursor : null;
      toggleGestureCover(true, cursor);
    }
  };
  MouseStrategy2.prototype.end = function(e) {
    if (this.dragging) {
      var x2 = e.clientX, y2 = e.clientY;
      toggleGestureCover(false);
      this.delegate.onEnd({ x: x2, y: y2 });
    }
    this.mouseInitialOffset = null;
    this.dragging = false;
  };
  return MouseStrategy2;
}();
var eventEmitter;
var getSharedEventEmitter = function() {
  if (!eventEmitter) {
    eventEmitter = new EventEmitter();
    ["mousemove", "mouseup", "touchmove", "touchend", "touchcancel"].forEach(function(name) {
      return window.addEventListener(name, function(e) {
        return eventEmitter.emit([name, e]);
      }, { passive: false });
    });
  }
  return eventEmitter;
};
var RefHolder = (0, import_react.forwardRef)(function(_a3, ref) {
  var _b2;
  var children = _a3.children;
  return (0, import_react.isValidElement)(children) ? typeof children.type === "string" ? (0, import_react.cloneElement)(children, { ref }) : (0, import_react.cloneElement)(children, {
    forwardedRef: ((_b2 = children.props) === null || _b2 === void 0 ? void 0 : _b2.forwardedRef) ? function(node) {
      children.props.forwardedRef(node);
      if (typeof ref === "function") {
        ref(node);
      } else if (ref) {
        ref.current = node;
      }
    } : ref
  }) : (0, import_react.createElement)("div", { ref, style: { display: "contents" } }, children);
});
var draggingHandled = Symbol("draggingHandled");
var Draggable = function(_super) {
  __extends(Draggable2, _super);
  function Draggable2(props) {
    var _this = _super.call(this, props) || this;
    _this.eventParams = null;
    _this.detachNodeEvents = null;
    var delegate = {
      onStart: function(_a3) {
        var x2 = _a3.x, y2 = _a3.y;
        var onStart = _this.props.onStart;
        if (!onStart)
          return;
        (0, import_react_dom.unstable_batchedUpdates)(function() {
          onStart({ x: x2, y: y2 });
        });
      },
      onMove: function(_a3) {
        var x2 = _a3.x, y2 = _a3.y;
        var onUpdate = _this.props.onUpdate;
        if (!onUpdate)
          return;
        (0, import_react_dom.unstable_batchedUpdates)(function() {
          onUpdate({ x: x2, y: y2 });
        });
      },
      onEnd: function(_a3) {
        var x2 = _a3.x, y2 = _a3.y;
        var onEnd = _this.props.onEnd;
        if (!onEnd)
          return;
        (0, import_react_dom.unstable_batchedUpdates)(function() {
          onEnd({ x: x2, y: y2 });
        });
      }
    };
    _this.mouseStrategy = new MouseStrategy(delegate);
    _this.touchStrategy = new TouchStrategy(delegate);
    _this.elementRef = (0, import_react.createRef)();
    _this.mouseDownListener = _this.mouseDownListener.bind(_this);
    _this.touchStartListener = _this.touchStartListener.bind(_this);
    _this.globalListener = _this.globalListener.bind(_this);
    return _this;
  }
  Draggable2.prototype.componentDidMount = function() {
    getSharedEventEmitter().subscribe(this.globalListener);
    this.setupNodeSubscription();
  };
  Draggable2.prototype.componentDidUpdate = function() {
    this.setupNodeSubscription();
  };
  Draggable2.prototype.componentWillUnmount = function() {
    var _a3;
    if (this.eventParams) {
      var _b2 = this.eventParams, isMouseEvent = _b2.isMouseEvent, e = _b2.e;
      if (isMouseEvent) {
        this.mouseStrategy.end(e);
      } else {
        this.touchStrategy.end(e);
      }
      this.eventParams = null;
    }
    (_a3 = this.detachNodeEvents) === null || _a3 === void 0 ? void 0 : _a3.call(this);
    getSharedEventEmitter().unsubscribe(this.globalListener);
  };
  Draggable2.prototype.setupNodeSubscription = function() {
    var _this = this;
    var _a3;
    var node = this.elementRef.current;
    if (!node)
      return;
    (_a3 = this.detachNodeEvents) === null || _a3 === void 0 ? void 0 : _a3.call(this);
    node.addEventListener("mousedown", this.mouseDownListener);
    node.addEventListener("touchstart", this.touchStartListener, { passive: true });
    this.detachNodeEvents = function() {
      node.removeEventListener("mousedown", _this.mouseDownListener);
      node.removeEventListener("touchstart", _this.touchStartListener);
    };
  };
  Draggable2.prototype.mouseDownListener = function(e) {
    if (this.touchStrategy.isWaiting() || e[draggingHandled])
      return;
    e.preventDefault();
    this.mouseStrategy.start(e);
    e[draggingHandled] = true;
  };
  Draggable2.prototype.touchStartListener = function(e) {
    if (e[draggingHandled])
      return;
    this.touchStrategy.start(e);
    e[draggingHandled] = true;
  };
  Draggable2.prototype.saveEvent = function(e, isMouseEvent) {
    this.eventParams = {
      e,
      isMouseEvent
    };
  };
  Draggable2.prototype.globalListener = function(_a3) {
    var _b2 = __read2(_a3, 2), name = _b2[0], e = _b2[1];
    switch (name) {
      case "mousemove":
        this.saveEvent(e, true);
        this.mouseStrategy.move(e);
        break;
      case "mouseup":
        this.eventParams = null;
        this.mouseStrategy.end(e);
        break;
      case "touchmove": {
        this.saveEvent(e, false);
        this.touchStrategy.move(e);
        break;
      }
      case "touchend":
      case "touchcancel": {
        this.eventParams = null;
        this.touchStrategy.end(e);
        break;
      }
    }
    if (this.mouseStrategy.isDragging() || this.touchStrategy.isDragging()) {
      clear();
    }
  };
  Draggable2.prototype.render = function() {
    var _this = this;
    var _a3 = this.props, children = _a3.children, dragItem = _a3.dragItem;
    return (0, import_react.createElement)(RefHolder, { ref: function(node) {
      _this.elementRef.current = node;
      if (typeof dragItem === "function") {
        dragItem(node);
      } else if (dragItem) {
        dragItem.current = node;
      }
    } }, children);
  };
  return Draggable2;
}(import_react.PureComponent);
var DragDropContext = (0, import_react.createContext)(null);
var DragDropProviderCore = function() {
  function DragDropProviderCore2() {
    this.payload = null;
    this.dragEmitter = new EventEmitter();
  }
  DragDropProviderCore2.prototype.start = function(payload, clientOffset) {
    this.payload = payload;
    this.dragEmitter.emit({ clientOffset, payload: this.payload });
  };
  DragDropProviderCore2.prototype.update = function(clientOffset) {
    this.dragEmitter.emit({ clientOffset, payload: this.payload });
  };
  DragDropProviderCore2.prototype.end = function(clientOffset) {
    this.dragEmitter.emit({ clientOffset, payload: this.payload, end: true });
    this.payload = null;
  };
  return DragDropProviderCore2;
}();
var defaultProps = {
  onChange: function(_a3) {
    var payload = _a3.payload, clientOffset = _a3.clientOffset;
  }
};
var DragDropProvider = function(_super) {
  __extends(DragDropProvider2, _super);
  function DragDropProvider2(props) {
    var _this = _super.call(this, props) || this;
    var onChange = _this.props.onChange;
    _this.dragDropProvider = new DragDropProviderCore();
    _this.dragDropProvider.dragEmitter.subscribe(function(_a3) {
      var payload = _a3.payload, clientOffset = _a3.clientOffset, end = _a3.end;
      onChange({
        payload: end ? null : payload,
        clientOffset: end ? null : clientOffset
      });
    });
    return _this;
  }
  DragDropProvider2.prototype.shouldComponentUpdate = function(nextProps) {
    var children = this.props.children;
    return nextProps.children !== children;
  };
  DragDropProvider2.prototype.render = function() {
    var children = this.props.children;
    return (0, import_react.createElement)(DragDropContext.Provider, { value: this.dragDropProvider }, children);
  };
  DragDropProvider2.defaultProps = defaultProps;
  return DragDropProvider2;
}(import_react.Component);
var defaultProps$1 = {
  onStart: function(_a3) {
    var clientOffset = _a3.clientOffset;
  },
  onUpdate: function(_a3) {
    var clientOffset = _a3.clientOffset;
  },
  onEnd: function(_a3) {
    var clientOffset = _a3.clientOffset;
  }
};
var DragSource = (0, import_react.forwardRef)(function(_a3, ref) {
  var onStart = _a3.onStart, onUpdate = _a3.onUpdate, onEnd = _a3.onEnd, payload = _a3.payload, children = _a3.children;
  var context = (0, import_react.useContext)(DragDropContext);
  var dragDropProvider = context;
  return (0, import_react.createElement)(Draggable, { onStart: function(_a4) {
    var x2 = _a4.x, y2 = _a4.y;
    dragDropProvider === null || dragDropProvider === void 0 ? void 0 : dragDropProvider.start(payload, { x: x2, y: y2 });
    onStart === null || onStart === void 0 ? void 0 : onStart({ clientOffset: { x: x2, y: y2 } });
  }, onUpdate: function(_a4) {
    var x2 = _a4.x, y2 = _a4.y;
    dragDropProvider === null || dragDropProvider === void 0 ? void 0 : dragDropProvider.update({ x: x2, y: y2 });
    onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate({ clientOffset: { x: x2, y: y2 } });
  }, onEnd: function(_a4) {
    var x2 = _a4.x, y2 = _a4.y;
    dragDropProvider === null || dragDropProvider === void 0 ? void 0 : dragDropProvider.end({ x: x2, y: y2 });
    onEnd === null || onEnd === void 0 ? void 0 : onEnd({ clientOffset: { x: x2, y: y2 } });
  }, dragItem: ref }, children);
});
DragSource.defaultProps = defaultProps$1;
var clamp$1 = function(value, min3, max3) {
  return Math.max(Math.min(value, max3), min3);
};
var defaultProps$2 = {
  onEnter: function(args) {
  },
  onOver: function(args) {
  },
  onLeave: function(args) {
  },
  onDrop: function(args) {
  }
};
var DropTarget = function(_super) {
  __extends(DropTarget2, _super);
  function DropTarget2(props) {
    var _this = _super.call(this, props) || this;
    _this.isOver = false;
    _this.handleDrag = _this.handleDrag.bind(_this);
    _this.elementRef = (0, import_react.createRef)();
    return _this;
  }
  DropTarget2.prototype.componentDidMount = function() {
    var dragEmitter = this.context.dragEmitter;
    dragEmitter.subscribe(this.handleDrag);
  };
  DropTarget2.prototype.shouldComponentUpdate = function(nextProps) {
    var children = this.props.children;
    return nextProps.children !== children;
  };
  DropTarget2.prototype.componentWillUnmount = function() {
    var dragEmitter = this.context.dragEmitter;
    dragEmitter.unsubscribe(this.handleDrag);
  };
  DropTarget2.prototype.handleDrag = function(_a3) {
    var payload = _a3.payload, clientOffset = _a3.clientOffset, end = _a3.end;
    var _b2 = this.elementRef.current.getBoundingClientRect(), left = _b2.left, top = _b2.top, right = _b2.right, bottom = _b2.bottom;
    var _c = this.props, onDrop = _c.onDrop, onEnter = _c.onEnter, onLeave = _c.onLeave, onOver = _c.onOver;
    var isOver = clientOffset && clamp$1(clientOffset.x, left, right) === clientOffset.x && clamp$1(clientOffset.y, top, bottom) === clientOffset.y;
    if (!this.isOver && isOver)
      onEnter({ payload, clientOffset });
    if (this.isOver && isOver)
      onOver({ payload, clientOffset });
    if (this.isOver && !isOver)
      onLeave({ payload, clientOffset });
    if (isOver && end)
      onDrop({ payload, clientOffset });
    this.isOver = isOver && !end;
  };
  DropTarget2.prototype.render = function() {
    var children = this.props.children;
    return (0, import_react.createElement)(RefHolder, { ref: this.elementRef }, import_react.Children.only(children));
  };
  DropTarget2.defaultProps = defaultProps$2;
  return DropTarget2;
}(import_react.Component);
DropTarget.contextType = DragDropContext;
var SCROLL_OFFSET = 2;
var styles = {
  root: {
    position: "relative"
  },
  triggersRoot: {
    position: "absolute",
    top: 0,
    left: 0,
    height: "100%",
    width: "100%",
    overflow: "hidden",
    zIndex: -1,
    visibility: "hidden",
    opacity: 0
  },
  expandTrigger: {
    position: "absolute",
    top: 0,
    left: 0,
    height: "100%",
    width: "100%",
    overflow: "auto"
  },
  contractTrigger: {
    position: "absolute",
    top: 0,
    left: 0,
    height: "100%",
    width: "100%",
    overflow: "auto",
    minHeight: "1px",
    minWidth: "1px"
  },
  contractNotifier: {
    position: "absolute",
    top: 0,
    left: 0,
    width: "200%",
    height: "200%",
    minHeight: "2px",
    minWidth: "2px"
  }
};
var Sizer = function(_super) {
  __extends(Sizer2, _super);
  function Sizer2(props) {
    var _this = _super.call(this, props) || this;
    _this.getSize = function() {
      return {
        height: _this.rootNode.clientHeight,
        width: _this.rootNode.clientWidth
      };
    };
    _this.setupListeners = _this.setupListeners.bind(_this);
    _this.updateScrolling = _this.updateScrolling.bind(_this);
    _this.rootRef = (0, import_react.createRef)();
    return _this;
  }
  Sizer2.prototype.componentDidMount = function() {
    this.rootNode = this.rootRef.current;
    this.createListeners();
    this.expandTrigger.addEventListener("scroll", this.setupListeners);
    this.contractTrigger.addEventListener("scroll", this.setupListeners);
    this.setupListeners();
  };
  Sizer2.prototype.shouldComponentUpdate = function(prevProps) {
    if (prevProps.scrollTop !== this.props.scrollTop || prevProps.scrollLeft !== this.props.scrollLeft || prevProps.style && this.props.style && !shallowEqual(prevProps.style, this.props.style) || prevProps.style && !this.props.style || prevProps.children !== this.props.children) {
      return true;
    }
    return false;
  };
  Sizer2.prototype.componentDidUpdate = function() {
    var _a3 = this.props, scrollTop = _a3.scrollTop, scrollLeft = _a3.scrollLeft;
    if (scrollTop !== void 0 && scrollTop > -1) {
      this.rootNode.scrollTop = scrollTop;
    }
    if (scrollLeft !== void 0 && scrollLeft > -1) {
      this.rootNode.scrollLeft = scrollLeft;
    }
    this.updateScrolling(this.getSize());
  };
  Sizer2.prototype.componentWillUnmount = function() {
    this.expandTrigger.removeEventListener("scroll", this.setupListeners);
    this.contractTrigger.removeEventListener("scroll", this.setupListeners);
  };
  Sizer2.prototype.setupListeners = function() {
    var size = this.getSize();
    var width = size.width, height = size.height;
    this.expandNotifier.style.width = "".concat(width + SCROLL_OFFSET, "px");
    this.expandNotifier.style.height = "".concat(height + SCROLL_OFFSET, "px");
    this.updateScrolling(size);
    var onSizeChange = this.props.onSizeChange;
    onSizeChange(size);
  };
  Sizer2.prototype.createListeners = function() {
    this.triggersRoot = document.createElement("div");
    Object.assign(this.triggersRoot.style, styles.triggersRoot);
    this.rootNode.appendChild(this.triggersRoot);
    this.expandTrigger = document.createElement("div");
    Object.assign(this.expandTrigger.style, styles.expandTrigger);
    this.expandTrigger.addEventListener("scroll", this.setupListeners);
    this.triggersRoot.appendChild(this.expandTrigger);
    this.expandNotifier = document.createElement("div");
    this.expandTrigger.appendChild(this.expandNotifier);
    this.contractTrigger = document.createElement("div");
    Object.assign(this.contractTrigger.style, styles.contractTrigger);
    this.contractTrigger.addEventListener("scroll", this.setupListeners);
    this.triggersRoot.appendChild(this.contractTrigger);
    this.contractNotifier = document.createElement("div");
    Object.assign(this.contractNotifier.style, styles.contractNotifier);
    this.contractTrigger.appendChild(this.contractNotifier);
  };
  Sizer2.prototype.updateScrolling = function(size) {
    var width = size.width, height = size.height;
    this.contractTrigger.scrollTop = height;
    this.contractTrigger.scrollLeft = width;
    this.expandTrigger.scrollTop = SCROLL_OFFSET;
    this.expandTrigger.scrollLeft = SCROLL_OFFSET;
  };
  Sizer2.prototype.render = function() {
    var _a3 = this.props, onSizeChange = _a3.onSizeChange, Container2 = _a3.containerComponent, style2 = _a3.style, scrollTop = _a3.scrollTop, scrollLeft = _a3.scrollLeft, restProps = __rest(_a3, ["onSizeChange", "containerComponent", "style", "scrollTop", "scrollLeft"]);
    return (0, import_react.createElement)(
      Container2,
      __assign({ forwardedRef: this.rootRef, style: style2 ? __assign(__assign({}, styles.root), style2) : styles.root }, restProps)
    );
  };
  Sizer2.defaultProps = {
    containerComponent: "div"
  };
  return Sizer2;
}(import_react.Component);
var createStateHelper = function(component, controlledStateProperties) {
  if (controlledStateProperties === void 0) {
    controlledStateProperties = {};
  }
  var notifyStateChange = function(nextState, state) {
    Object.keys(controlledStateProperties).forEach(function(propertyName) {
      var changeEvent = controlledStateProperties[propertyName]();
      if (changeEvent && nextState[propertyName] !== state[propertyName]) {
        changeEvent(nextState[propertyName]);
      }
    });
  };
  var lastStateUpdater;
  var initialState = null;
  var lastInitialState = null;
  var newState = null;
  var shouldNotify = false;
  var applyReducer = function(reduce2, payload, callback) {
    var stateUpdater = function(prevState) {
      if (initialState === null) {
        initialState = prevState;
      }
      var stateChange = reduce2(__assign({}, prevState), payload);
      var state = __assign(__assign({}, prevState), stateChange);
      if (typeof callback === "function") {
        callback(state, prevState);
      }
      if (stateUpdater === lastStateUpdater) {
        if (lastInitialState !== initialState) {
          newState = state;
          if (!shouldNotify) {
            lastInitialState = initialState;
            shouldNotify = true;
          }
        }
        initialState = null;
      }
      return stateChange;
    };
    lastStateUpdater = stateUpdater;
    component.setState(stateUpdater, function() {
      if (shouldNotify) {
        notifyStateChange(newState, lastInitialState);
        shouldNotify = false;
      }
    });
  };
  var applyFieldReducer = function(field, reduce2, payload) {
    applyReducer(function(state) {
      var _a3;
      return _a3 = {}, _a3[field] = reduce2(state[field], payload), _a3;
    });
  };
  return {
    applyReducer,
    applyFieldReducer
  };
};
var makeBoundComponent = function(Target, components, exposed) {
  var Component2 = function(_super) {
    __extends(Component3, _super);
    function Component3() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Component3.prototype.render = function() {
      return (0, import_react.createElement)(Target, __assign({}, components, this.props));
    };
    return Component3;
  }(import_react.PureComponent);
  Component2.components = Target.components;
  Object.assign(Component2, exposed);
  return Component2;
};
var withComponents = function(components) {
  return function(Target) {
    var props = {};
    var exposed = {};
    var targetComponents = Target.components;
    Object.entries(targetComponents).forEach(function(_a3) {
      var _b2 = __read2(_a3, 2), fieldName = _b2[0], componentName = _b2[1];
      var component = components[componentName];
      if (component && component !== Target[componentName]) {
        props[fieldName] = component;
      }
      exposed[componentName] = component || Target[componentName];
    });
    return Object.keys(props).length > 0 ? makeBoundComponent(Target, props, exposed) : Target;
  };
};
var RefType = import_prop_types.default.shape({
  current: import_prop_types.default.instanceOf(typeof Element !== "undefined" ? Element : Object)
});

// node_modules/@devexpress/dx-react-chart/dist/dx-react-chart.es.js
var import_react2 = __toESM(require_react());

// node_modules/d3-array/src/ascending.js
function ascending_default(a2, b) {
  return a2 < b ? -1 : a2 > b ? 1 : a2 >= b ? 0 : NaN;
}

// node_modules/d3-array/src/bisector.js
function bisector_default(f) {
  let delta = f;
  let compare2 = f;
  if (f.length === 1) {
    delta = (d, x2) => f(d) - x2;
    compare2 = ascendingComparator(f);
  }
  function left(a2, x2, lo, hi) {
    if (lo == null)
      lo = 0;
    if (hi == null)
      hi = a2.length;
    while (lo < hi) {
      const mid = lo + hi >>> 1;
      if (compare2(a2[mid], x2) < 0)
        lo = mid + 1;
      else
        hi = mid;
    }
    return lo;
  }
  function right(a2, x2, lo, hi) {
    if (lo == null)
      lo = 0;
    if (hi == null)
      hi = a2.length;
    while (lo < hi) {
      const mid = lo + hi >>> 1;
      if (compare2(a2[mid], x2) > 0)
        hi = mid;
      else
        lo = mid + 1;
    }
    return lo;
  }
  function center(a2, x2, lo, hi) {
    if (lo == null)
      lo = 0;
    if (hi == null)
      hi = a2.length;
    const i = left(a2, x2, lo, hi - 1);
    return i > lo && delta(a2[i - 1], x2) > -delta(a2[i], x2) ? i - 1 : i;
  }
  return { left, center, right };
}
function ascendingComparator(f) {
  return (d, x2) => ascending_default(f(d), x2);
}

// node_modules/d3-array/src/number.js
function number_default(x2) {
  return x2 === null ? NaN : +x2;
}

// node_modules/d3-array/src/bisect.js
var ascendingBisect = bisector_default(ascending_default);
var bisectRight = ascendingBisect.right;
var bisectLeft = ascendingBisect.left;
var bisectCenter = bisector_default(number_default).center;
var bisect_default = bisectRight;

// node_modules/d3-array/src/extent.js
function extent_default(values, valueof) {
  let min3;
  let max3;
  if (valueof === void 0) {
    for (const value of values) {
      if (value != null) {
        if (min3 === void 0) {
          if (value >= value)
            min3 = max3 = value;
        } else {
          if (min3 > value)
            min3 = value;
          if (max3 < value)
            max3 = value;
        }
      }
    }
  } else {
    let index2 = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index2, values)) != null) {
        if (min3 === void 0) {
          if (value >= value)
            min3 = max3 = value;
        } else {
          if (min3 > value)
            min3 = value;
          if (max3 < value)
            max3 = value;
        }
      }
    }
  }
  return [min3, max3];
}

// node_modules/internmap/src/index.js
var InternMap = class extends Map {
  constructor(entries, key = keyof) {
    super();
    Object.defineProperties(this, { _intern: { value: /* @__PURE__ */ new Map() }, _key: { value: key } });
    if (entries != null)
      for (const [key2, value] of entries)
        this.set(key2, value);
  }
  get(key) {
    return super.get(intern_get(this, key));
  }
  has(key) {
    return super.has(intern_get(this, key));
  }
  set(key, value) {
    return super.set(intern_set(this, key), value);
  }
  delete(key) {
    return super.delete(intern_delete(this, key));
  }
};
function intern_get({ _intern, _key }, value) {
  const key = _key(value);
  return _intern.has(key) ? _intern.get(key) : value;
}
function intern_set({ _intern, _key }, value) {
  const key = _key(value);
  if (_intern.has(key))
    return _intern.get(key);
  _intern.set(key, value);
  return value;
}
function intern_delete({ _intern, _key }, value) {
  const key = _key(value);
  if (_intern.has(key)) {
    value = _intern.get(value);
    _intern.delete(key);
  }
  return value;
}
function keyof(value) {
  return value !== null && typeof value === "object" ? value.valueOf() : value;
}

// node_modules/d3-array/src/array.js
var array = Array.prototype;
var slice = array.slice;
var map = array.map;

// node_modules/d3-array/src/ticks.js
var e10 = Math.sqrt(50);
var e5 = Math.sqrt(10);
var e2 = Math.sqrt(2);
function ticks_default(start, stop, count2) {
  var reverse2, i = -1, n, ticks, step;
  stop = +stop, start = +start, count2 = +count2;
  if (start === stop && count2 > 0)
    return [start];
  if (reverse2 = stop < start)
    n = start, start = stop, stop = n;
  if ((step = tickIncrement(start, stop, count2)) === 0 || !isFinite(step))
    return [];
  if (step > 0) {
    let r0 = Math.round(start / step), r1 = Math.round(stop / step);
    if (r0 * step < start)
      ++r0;
    if (r1 * step > stop)
      --r1;
    ticks = new Array(n = r1 - r0 + 1);
    while (++i < n)
      ticks[i] = (r0 + i) * step;
  } else {
    step = -step;
    let r0 = Math.round(start * step), r1 = Math.round(stop * step);
    if (r0 / step < start)
      ++r0;
    if (r1 / step > stop)
      --r1;
    ticks = new Array(n = r1 - r0 + 1);
    while (++i < n)
      ticks[i] = (r0 + i) / step;
  }
  if (reverse2)
    ticks.reverse();
  return ticks;
}
function tickIncrement(start, stop, count2) {
  var step = (stop - start) / Math.max(0, count2), power = Math.floor(Math.log(step) / Math.LN10), error = step / Math.pow(10, power);
  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
}
function tickStep(start, stop, count2) {
  var step0 = Math.abs(stop - start) / Math.max(0, count2), step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)), error = step0 / step1;
  if (error >= e10)
    step1 *= 10;
  else if (error >= e5)
    step1 *= 5;
  else if (error >= e2)
    step1 *= 2;
  return stop < start ? -step1 : step1;
}

// node_modules/d3-array/src/range.js
function range_default(start, stop, step) {
  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;
  var i = -1, n = Math.max(0, Math.ceil((stop - start) / step)) | 0, range = new Array(n);
  while (++i < n) {
    range[i] = start + i * step;
  }
  return range;
}

// node_modules/d3-array/src/shuffle.js
var shuffle_default = shuffler(Math.random);
function shuffler(random) {
  return function shuffle(array2, i0 = 0, i1 = array2.length) {
    let m = i1 - (i0 = +i0);
    while (m) {
      const i = random() * m-- | 0, t = array2[m + i0];
      array2[m + i0] = array2[i + i0];
      array2[i + i0] = t;
    }
    return array2;
  };
}

// node_modules/d3-scale/src/init.js
function initRange(domain, range) {
  switch (arguments.length) {
    case 0:
      break;
    case 1:
      this.range(domain);
      break;
    default:
      this.range(range).domain(domain);
      break;
  }
  return this;
}

// node_modules/d3-scale/src/ordinal.js
var implicit = Symbol("implicit");
function ordinal() {
  var index2 = new InternMap(), domain = [], range = [], unknown = implicit;
  function scale(d) {
    let i = index2.get(d);
    if (i === void 0) {
      if (unknown !== implicit)
        return unknown;
      index2.set(d, i = domain.push(d) - 1);
    }
    return range[i % range.length];
  }
  scale.domain = function(_4) {
    if (!arguments.length)
      return domain.slice();
    domain = [], index2 = new InternMap();
    for (const value of _4) {
      if (index2.has(value))
        continue;
      index2.set(value, domain.push(value) - 1);
    }
    return scale;
  };
  scale.range = function(_4) {
    return arguments.length ? (range = Array.from(_4), scale) : range.slice();
  };
  scale.unknown = function(_4) {
    return arguments.length ? (unknown = _4, scale) : unknown;
  };
  scale.copy = function() {
    return ordinal(domain, range).unknown(unknown);
  };
  initRange.apply(scale, arguments);
  return scale;
}

// node_modules/d3-scale/src/band.js
function band() {
  var scale = ordinal().unknown(void 0), domain = scale.domain, ordinalRange = scale.range, r0 = 0, r1 = 1, step, bandwidth, round2 = false, paddingInner = 0, paddingOuter = 0, align = 0.5;
  delete scale.unknown;
  function rescale() {
    var n = domain().length, reverse2 = r1 < r0, start = reverse2 ? r1 : r0, stop = reverse2 ? r0 : r1;
    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
    if (round2)
      step = Math.floor(step);
    start += (stop - start - step * (n - paddingInner)) * align;
    bandwidth = step * (1 - paddingInner);
    if (round2)
      start = Math.round(start), bandwidth = Math.round(bandwidth);
    var values = range_default(n).map(function(i) {
      return start + step * i;
    });
    return ordinalRange(reverse2 ? values.reverse() : values);
  }
  scale.domain = function(_4) {
    return arguments.length ? (domain(_4), rescale()) : domain();
  };
  scale.range = function(_4) {
    return arguments.length ? ([r0, r1] = _4, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];
  };
  scale.rangeRound = function(_4) {
    return [r0, r1] = _4, r0 = +r0, r1 = +r1, round2 = true, rescale();
  };
  scale.bandwidth = function() {
    return bandwidth;
  };
  scale.step = function() {
    return step;
  };
  scale.round = function(_4) {
    return arguments.length ? (round2 = !!_4, rescale()) : round2;
  };
  scale.padding = function(_4) {
    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_4), rescale()) : paddingInner;
  };
  scale.paddingInner = function(_4) {
    return arguments.length ? (paddingInner = Math.min(1, _4), rescale()) : paddingInner;
  };
  scale.paddingOuter = function(_4) {
    return arguments.length ? (paddingOuter = +_4, rescale()) : paddingOuter;
  };
  scale.align = function(_4) {
    return arguments.length ? (align = Math.max(0, Math.min(1, _4)), rescale()) : align;
  };
  scale.copy = function() {
    return band(domain(), [r0, r1]).round(round2).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);
  };
  return initRange.apply(rescale(), arguments);
}

// node_modules/d3-color/src/define.js
function define_default(constructor, factory, prototype) {
  constructor.prototype = factory.prototype = prototype;
  prototype.constructor = constructor;
}
function extend(parent, definition) {
  var prototype = Object.create(parent.prototype);
  for (var key in definition)
    prototype[key] = definition[key];
  return prototype;
}

// node_modules/d3-color/src/color.js
function Color() {
}
var darker = 0.7;
var brighter = 1 / darker;
var reI = "\\s*([+-]?\\d+)\\s*";
var reN = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*";
var reP = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*";
var reHex = /^#([0-9a-f]{3,8})$/;
var reRgbInteger = new RegExp(`^rgb\\(${reI},${reI},${reI}\\)$`);
var reRgbPercent = new RegExp(`^rgb\\(${reP},${reP},${reP}\\)$`);
var reRgbaInteger = new RegExp(`^rgba\\(${reI},${reI},${reI},${reN}\\)$`);
var reRgbaPercent = new RegExp(`^rgba\\(${reP},${reP},${reP},${reN}\\)$`);
var reHslPercent = new RegExp(`^hsl\\(${reN},${reP},${reP}\\)$`);
var reHslaPercent = new RegExp(`^hsla\\(${reN},${reP},${reP},${reN}\\)$`);
var named = {
  aliceblue: 15792383,
  antiquewhite: 16444375,
  aqua: 65535,
  aquamarine: 8388564,
  azure: 15794175,
  beige: 16119260,
  bisque: 16770244,
  black: 0,
  blanchedalmond: 16772045,
  blue: 255,
  blueviolet: 9055202,
  brown: 10824234,
  burlywood: 14596231,
  cadetblue: 6266528,
  chartreuse: 8388352,
  chocolate: 13789470,
  coral: 16744272,
  cornflowerblue: 6591981,
  cornsilk: 16775388,
  crimson: 14423100,
  cyan: 65535,
  darkblue: 139,
  darkcyan: 35723,
  darkgoldenrod: 12092939,
  darkgray: 11119017,
  darkgreen: 25600,
  darkgrey: 11119017,
  darkkhaki: 12433259,
  darkmagenta: 9109643,
  darkolivegreen: 5597999,
  darkorange: 16747520,
  darkorchid: 10040012,
  darkred: 9109504,
  darksalmon: 15308410,
  darkseagreen: 9419919,
  darkslateblue: 4734347,
  darkslategray: 3100495,
  darkslategrey: 3100495,
  darkturquoise: 52945,
  darkviolet: 9699539,
  deeppink: 16716947,
  deepskyblue: 49151,
  dimgray: 6908265,
  dimgrey: 6908265,
  dodgerblue: 2003199,
  firebrick: 11674146,
  floralwhite: 16775920,
  forestgreen: 2263842,
  fuchsia: 16711935,
  gainsboro: 14474460,
  ghostwhite: 16316671,
  gold: 16766720,
  goldenrod: 14329120,
  gray: 8421504,
  green: 32768,
  greenyellow: 11403055,
  grey: 8421504,
  honeydew: 15794160,
  hotpink: 16738740,
  indianred: 13458524,
  indigo: 4915330,
  ivory: 16777200,
  khaki: 15787660,
  lavender: 15132410,
  lavenderblush: 16773365,
  lawngreen: 8190976,
  lemonchiffon: 16775885,
  lightblue: 11393254,
  lightcoral: 15761536,
  lightcyan: 14745599,
  lightgoldenrodyellow: 16448210,
  lightgray: 13882323,
  lightgreen: 9498256,
  lightgrey: 13882323,
  lightpink: 16758465,
  lightsalmon: 16752762,
  lightseagreen: 2142890,
  lightskyblue: 8900346,
  lightslategray: 7833753,
  lightslategrey: 7833753,
  lightsteelblue: 11584734,
  lightyellow: 16777184,
  lime: 65280,
  limegreen: 3329330,
  linen: 16445670,
  magenta: 16711935,
  maroon: 8388608,
  mediumaquamarine: 6737322,
  mediumblue: 205,
  mediumorchid: 12211667,
  mediumpurple: 9662683,
  mediumseagreen: 3978097,
  mediumslateblue: 8087790,
  mediumspringgreen: 64154,
  mediumturquoise: 4772300,
  mediumvioletred: 13047173,
  midnightblue: 1644912,
  mintcream: 16121850,
  mistyrose: 16770273,
  moccasin: 16770229,
  navajowhite: 16768685,
  navy: 128,
  oldlace: 16643558,
  olive: 8421376,
  olivedrab: 7048739,
  orange: 16753920,
  orangered: 16729344,
  orchid: 14315734,
  palegoldenrod: 15657130,
  palegreen: 10025880,
  paleturquoise: 11529966,
  palevioletred: 14381203,
  papayawhip: 16773077,
  peachpuff: 16767673,
  peru: 13468991,
  pink: 16761035,
  plum: 14524637,
  powderblue: 11591910,
  purple: 8388736,
  rebeccapurple: 6697881,
  red: 16711680,
  rosybrown: 12357519,
  royalblue: 4286945,
  saddlebrown: 9127187,
  salmon: 16416882,
  sandybrown: 16032864,
  seagreen: 3050327,
  seashell: 16774638,
  sienna: 10506797,
  silver: 12632256,
  skyblue: 8900331,
  slateblue: 6970061,
  slategray: 7372944,
  slategrey: 7372944,
  snow: 16775930,
  springgreen: 65407,
  steelblue: 4620980,
  tan: 13808780,
  teal: 32896,
  thistle: 14204888,
  tomato: 16737095,
  turquoise: 4251856,
  violet: 15631086,
  wheat: 16113331,
  white: 16777215,
  whitesmoke: 16119285,
  yellow: 16776960,
  yellowgreen: 10145074
};
define_default(Color, color, {
  copy(channels) {
    return Object.assign(new this.constructor(), this, channels);
  },
  displayable() {
    return this.rgb().displayable();
  },
  hex: color_formatHex,
  // Deprecated! Use color.formatHex.
  formatHex: color_formatHex,
  formatHex8: color_formatHex8,
  formatHsl: color_formatHsl,
  formatRgb: color_formatRgb,
  toString: color_formatRgb
});
function color_formatHex() {
  return this.rgb().formatHex();
}
function color_formatHex8() {
  return this.rgb().formatHex8();
}
function color_formatHsl() {
  return hslConvert(this).formatHsl();
}
function color_formatRgb() {
  return this.rgb().formatRgb();
}
function color(format2) {
  var m, l;
  format2 = (format2 + "").trim().toLowerCase();
  return (m = reHex.exec(format2)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) : l === 3 ? new Rgb(m >> 8 & 15 | m >> 4 & 240, m >> 4 & 15 | m & 240, (m & 15) << 4 | m & 15, 1) : l === 8 ? rgba(m >> 24 & 255, m >> 16 & 255, m >> 8 & 255, (m & 255) / 255) : l === 4 ? rgba(m >> 12 & 15 | m >> 8 & 240, m >> 8 & 15 | m >> 4 & 240, m >> 4 & 15 | m & 240, ((m & 15) << 4 | m & 15) / 255) : null) : (m = reRgbInteger.exec(format2)) ? new Rgb(m[1], m[2], m[3], 1) : (m = reRgbPercent.exec(format2)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) : (m = reRgbaInteger.exec(format2)) ? rgba(m[1], m[2], m[3], m[4]) : (m = reRgbaPercent.exec(format2)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) : (m = reHslPercent.exec(format2)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) : (m = reHslaPercent.exec(format2)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) : named.hasOwnProperty(format2) ? rgbn(named[format2]) : format2 === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
}
function rgbn(n) {
  return new Rgb(n >> 16 & 255, n >> 8 & 255, n & 255, 1);
}
function rgba(r, g, b, a2) {
  if (a2 <= 0)
    r = g = b = NaN;
  return new Rgb(r, g, b, a2);
}
function rgbConvert(o) {
  if (!(o instanceof Color))
    o = color(o);
  if (!o)
    return new Rgb();
  o = o.rgb();
  return new Rgb(o.r, o.g, o.b, o.opacity);
}
function rgb(r, g, b, opacity) {
  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
}
function Rgb(r, g, b, opacity) {
  this.r = +r;
  this.g = +g;
  this.b = +b;
  this.opacity = +opacity;
}
define_default(Rgb, rgb, extend(Color, {
  brighter(k2) {
    k2 = k2 == null ? brighter : Math.pow(brighter, k2);
    return new Rgb(this.r * k2, this.g * k2, this.b * k2, this.opacity);
  },
  darker(k2) {
    k2 = k2 == null ? darker : Math.pow(darker, k2);
    return new Rgb(this.r * k2, this.g * k2, this.b * k2, this.opacity);
  },
  rgb() {
    return this;
  },
  clamp() {
    return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));
  },
  displayable() {
    return -0.5 <= this.r && this.r < 255.5 && (-0.5 <= this.g && this.g < 255.5) && (-0.5 <= this.b && this.b < 255.5) && (0 <= this.opacity && this.opacity <= 1);
  },
  hex: rgb_formatHex,
  // Deprecated! Use color.formatHex.
  formatHex: rgb_formatHex,
  formatHex8: rgb_formatHex8,
  formatRgb: rgb_formatRgb,
  toString: rgb_formatRgb
}));
function rgb_formatHex() {
  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;
}
function rgb_formatHex8() {
  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;
}
function rgb_formatRgb() {
  const a2 = clampa(this.opacity);
  return `${a2 === 1 ? "rgb(" : "rgba("}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a2 === 1 ? ")" : `, ${a2})`}`;
}
function clampa(opacity) {
  return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));
}
function clampi(value) {
  return Math.max(0, Math.min(255, Math.round(value) || 0));
}
function hex(value) {
  value = clampi(value);
  return (value < 16 ? "0" : "") + value.toString(16);
}
function hsla(h, s2, l, a2) {
  if (a2 <= 0)
    h = s2 = l = NaN;
  else if (l <= 0 || l >= 1)
    h = s2 = NaN;
  else if (s2 <= 0)
    h = NaN;
  return new Hsl(h, s2, l, a2);
}
function hslConvert(o) {
  if (o instanceof Hsl)
    return new Hsl(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Color))
    o = color(o);
  if (!o)
    return new Hsl();
  if (o instanceof Hsl)
    return o;
  o = o.rgb();
  var r = o.r / 255, g = o.g / 255, b = o.b / 255, min3 = Math.min(r, g, b), max3 = Math.max(r, g, b), h = NaN, s2 = max3 - min3, l = (max3 + min3) / 2;
  if (s2) {
    if (r === max3)
      h = (g - b) / s2 + (g < b) * 6;
    else if (g === max3)
      h = (b - r) / s2 + 2;
    else
      h = (r - g) / s2 + 4;
    s2 /= l < 0.5 ? max3 + min3 : 2 - max3 - min3;
    h *= 60;
  } else {
    s2 = l > 0 && l < 1 ? 0 : h;
  }
  return new Hsl(h, s2, l, o.opacity);
}
function hsl(h, s2, l, opacity) {
  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s2, l, opacity == null ? 1 : opacity);
}
function Hsl(h, s2, l, opacity) {
  this.h = +h;
  this.s = +s2;
  this.l = +l;
  this.opacity = +opacity;
}
define_default(Hsl, hsl, extend(Color, {
  brighter(k2) {
    k2 = k2 == null ? brighter : Math.pow(brighter, k2);
    return new Hsl(this.h, this.s, this.l * k2, this.opacity);
  },
  darker(k2) {
    k2 = k2 == null ? darker : Math.pow(darker, k2);
    return new Hsl(this.h, this.s, this.l * k2, this.opacity);
  },
  rgb() {
    var h = this.h % 360 + (this.h < 0) * 360, s2 = isNaN(h) || isNaN(this.s) ? 0 : this.s, l = this.l, m2 = l + (l < 0.5 ? l : 1 - l) * s2, m1 = 2 * l - m2;
    return new Rgb(
      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),
      hsl2rgb(h, m1, m2),
      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),
      this.opacity
    );
  },
  clamp() {
    return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));
  },
  displayable() {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && (0 <= this.l && this.l <= 1) && (0 <= this.opacity && this.opacity <= 1);
  },
  formatHsl() {
    const a2 = clampa(this.opacity);
    return `${a2 === 1 ? "hsl(" : "hsla("}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a2 === 1 ? ")" : `, ${a2})`}`;
  }
}));
function clamph(value) {
  value = (value || 0) % 360;
  return value < 0 ? value + 360 : value;
}
function clampt(value) {
  return Math.max(0, Math.min(1, value || 0));
}
function hsl2rgb(h, m1, m2) {
  return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;
}

// node_modules/d3-color/src/math.js
var radians = Math.PI / 180;
var degrees = 180 / Math.PI;

// node_modules/d3-color/src/lab.js
var K = 18;
var Xn = 0.96422;
var Yn = 1;
var Zn = 0.82521;
var t0 = 4 / 29;
var t1 = 6 / 29;
var t2 = 3 * t1 * t1;
var t3 = t1 * t1 * t1;
function labConvert(o) {
  if (o instanceof Lab)
    return new Lab(o.l, o.a, o.b, o.opacity);
  if (o instanceof Hcl)
    return hcl2lab(o);
  if (!(o instanceof Rgb))
    o = rgbConvert(o);
  var r = rgb2lrgb(o.r), g = rgb2lrgb(o.g), b = rgb2lrgb(o.b), y2 = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x2, z;
  if (r === g && g === b)
    x2 = z = y2;
  else {
    x2 = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);
    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);
  }
  return new Lab(116 * y2 - 16, 500 * (x2 - y2), 200 * (y2 - z), o.opacity);
}
function lab(l, a2, b, opacity) {
  return arguments.length === 1 ? labConvert(l) : new Lab(l, a2, b, opacity == null ? 1 : opacity);
}
function Lab(l, a2, b, opacity) {
  this.l = +l;
  this.a = +a2;
  this.b = +b;
  this.opacity = +opacity;
}
define_default(Lab, lab, extend(Color, {
  brighter(k2) {
    return new Lab(this.l + K * (k2 == null ? 1 : k2), this.a, this.b, this.opacity);
  },
  darker(k2) {
    return new Lab(this.l - K * (k2 == null ? 1 : k2), this.a, this.b, this.opacity);
  },
  rgb() {
    var y2 = (this.l + 16) / 116, x2 = isNaN(this.a) ? y2 : y2 + this.a / 500, z = isNaN(this.b) ? y2 : y2 - this.b / 200;
    x2 = Xn * lab2xyz(x2);
    y2 = Yn * lab2xyz(y2);
    z = Zn * lab2xyz(z);
    return new Rgb(
      lrgb2rgb(3.1338561 * x2 - 1.6168667 * y2 - 0.4906146 * z),
      lrgb2rgb(-0.9787684 * x2 + 1.9161415 * y2 + 0.033454 * z),
      lrgb2rgb(0.0719453 * x2 - 0.2289914 * y2 + 1.4052427 * z),
      this.opacity
    );
  }
}));
function xyz2lab(t) {
  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
}
function lab2xyz(t) {
  return t > t1 ? t * t * t : t2 * (t - t0);
}
function lrgb2rgb(x2) {
  return 255 * (x2 <= 31308e-7 ? 12.92 * x2 : 1.055 * Math.pow(x2, 1 / 2.4) - 0.055);
}
function rgb2lrgb(x2) {
  return (x2 /= 255) <= 0.04045 ? x2 / 12.92 : Math.pow((x2 + 0.055) / 1.055, 2.4);
}
function hclConvert(o) {
  if (o instanceof Hcl)
    return new Hcl(o.h, o.c, o.l, o.opacity);
  if (!(o instanceof Lab))
    o = labConvert(o);
  if (o.a === 0 && o.b === 0)
    return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);
  var h = Math.atan2(o.b, o.a) * degrees;
  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
}
function hcl(h, c, l, opacity) {
  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}
function Hcl(h, c, l, opacity) {
  this.h = +h;
  this.c = +c;
  this.l = +l;
  this.opacity = +opacity;
}
function hcl2lab(o) {
  if (isNaN(o.h))
    return new Lab(o.l, 0, 0, o.opacity);
  var h = o.h * radians;
  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
}
define_default(Hcl, hcl, extend(Color, {
  brighter(k2) {
    return new Hcl(this.h, this.c, this.l + K * (k2 == null ? 1 : k2), this.opacity);
  },
  darker(k2) {
    return new Hcl(this.h, this.c, this.l - K * (k2 == null ? 1 : k2), this.opacity);
  },
  rgb() {
    return hcl2lab(this).rgb();
  }
}));

// node_modules/d3-color/src/cubehelix.js
var A = -0.14861;
var B = 1.78277;
var C = -0.29227;
var D = -0.90649;
var E = 1.97294;
var ED = E * D;
var EB = E * B;
var BC_DA = B * C - D * A;
function cubehelixConvert(o) {
  if (o instanceof Cubehelix)
    return new Cubehelix(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Rgb))
    o = rgbConvert(o);
  var r = o.r / 255, g = o.g / 255, b = o.b / 255, l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB), bl = b - l, k2 = (E * (g - l) - C * bl) / D, s2 = Math.sqrt(k2 * k2 + bl * bl) / (E * l * (1 - l)), h = s2 ? Math.atan2(k2, bl) * degrees - 120 : NaN;
  return new Cubehelix(h < 0 ? h + 360 : h, s2, l, o.opacity);
}
function cubehelix(h, s2, l, opacity) {
  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s2, l, opacity == null ? 1 : opacity);
}
function Cubehelix(h, s2, l, opacity) {
  this.h = +h;
  this.s = +s2;
  this.l = +l;
  this.opacity = +opacity;
}
define_default(Cubehelix, cubehelix, extend(Color, {
  brighter(k2) {
    k2 = k2 == null ? brighter : Math.pow(brighter, k2);
    return new Cubehelix(this.h, this.s, this.l * k2, this.opacity);
  },
  darker(k2) {
    k2 = k2 == null ? darker : Math.pow(darker, k2);
    return new Cubehelix(this.h, this.s, this.l * k2, this.opacity);
  },
  rgb() {
    var h = isNaN(this.h) ? 0 : (this.h + 120) * radians, l = +this.l, a2 = isNaN(this.s) ? 0 : this.s * l * (1 - l), cosh2 = Math.cos(h), sinh2 = Math.sin(h);
    return new Rgb(
      255 * (l + a2 * (A * cosh2 + B * sinh2)),
      255 * (l + a2 * (C * cosh2 + D * sinh2)),
      255 * (l + a2 * (E * cosh2)),
      this.opacity
    );
  }
}));

// node_modules/d3-interpolate/src/basis.js
function basis(t13, v0, v1, v2, v3) {
  var t22 = t13 * t13, t32 = t22 * t13;
  return ((1 - 3 * t13 + 3 * t22 - t32) * v0 + (4 - 6 * t22 + 3 * t32) * v1 + (1 + 3 * t13 + 3 * t22 - 3 * t32) * v2 + t32 * v3) / 6;
}
function basis_default(values) {
  var n = values.length - 1;
  return function(t) {
    var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n), v1 = values[i], v2 = values[i + 1], v0 = i > 0 ? values[i - 1] : 2 * v1 - v2, v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
    return basis((t - i / n) * n, v0, v1, v2, v3);
  };
}

// node_modules/d3-interpolate/src/basisClosed.js
function basisClosed_default(values) {
  var n = values.length;
  return function(t) {
    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n), v0 = values[(i + n - 1) % n], v1 = values[i % n], v2 = values[(i + 1) % n], v3 = values[(i + 2) % n];
    return basis((t - i / n) * n, v0, v1, v2, v3);
  };
}

// node_modules/d3-interpolate/src/constant.js
var constant_default2 = (x2) => () => x2;

// node_modules/d3-interpolate/src/color.js
function linear(a2, d) {
  return function(t) {
    return a2 + t * d;
  };
}
function exponential(a2, b, y2) {
  return a2 = Math.pow(a2, y2), b = Math.pow(b, y2) - a2, y2 = 1 / y2, function(t) {
    return Math.pow(a2 + t * b, y2);
  };
}
function hue(a2, b) {
  var d = b - a2;
  return d ? linear(a2, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant_default2(isNaN(a2) ? b : a2);
}
function gamma(y2) {
  return (y2 = +y2) === 1 ? nogamma : function(a2, b) {
    return b - a2 ? exponential(a2, b, y2) : constant_default2(isNaN(a2) ? b : a2);
  };
}
function nogamma(a2, b) {
  var d = b - a2;
  return d ? linear(a2, d) : constant_default2(isNaN(a2) ? b : a2);
}

// node_modules/d3-interpolate/src/rgb.js
var rgb_default = function rgbGamma(y2) {
  var color2 = gamma(y2);
  function rgb2(start, end) {
    var r = color2((start = rgb(start)).r, (end = rgb(end)).r), g = color2(start.g, end.g), b = color2(start.b, end.b), opacity = nogamma(start.opacity, end.opacity);
    return function(t) {
      start.r = r(t);
      start.g = g(t);
      start.b = b(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }
  rgb2.gamma = rgbGamma;
  return rgb2;
}(1);
function rgbSpline(spline) {
  return function(colors) {
    var n = colors.length, r = new Array(n), g = new Array(n), b = new Array(n), i, color2;
    for (i = 0; i < n; ++i) {
      color2 = rgb(colors[i]);
      r[i] = color2.r || 0;
      g[i] = color2.g || 0;
      b[i] = color2.b || 0;
    }
    r = spline(r);
    g = spline(g);
    b = spline(b);
    color2.opacity = 1;
    return function(t) {
      color2.r = r(t);
      color2.g = g(t);
      color2.b = b(t);
      return color2 + "";
    };
  };
}
var rgbBasis = rgbSpline(basis_default);
var rgbBasisClosed = rgbSpline(basisClosed_default);

// node_modules/d3-interpolate/src/numberArray.js
function numberArray_default(a2, b) {
  if (!b)
    b = [];
  var n = a2 ? Math.min(b.length, a2.length) : 0, c = b.slice(), i;
  return function(t) {
    for (i = 0; i < n; ++i)
      c[i] = a2[i] * (1 - t) + b[i] * t;
    return c;
  };
}
function isNumberArray(x2) {
  return ArrayBuffer.isView(x2) && !(x2 instanceof DataView);
}

// node_modules/d3-interpolate/src/array.js
function genericArray(a2, b) {
  var nb = b ? b.length : 0, na = a2 ? Math.min(nb, a2.length) : 0, x2 = new Array(na), c = new Array(nb), i;
  for (i = 0; i < na; ++i)
    x2[i] = value_default(a2[i], b[i]);
  for (; i < nb; ++i)
    c[i] = b[i];
  return function(t) {
    for (i = 0; i < na; ++i)
      c[i] = x2[i](t);
    return c;
  };
}

// node_modules/d3-interpolate/src/date.js
function date_default(a2, b) {
  var d = new Date();
  return a2 = +a2, b = +b, function(t) {
    return d.setTime(a2 * (1 - t) + b * t), d;
  };
}

// node_modules/d3-interpolate/src/number.js
function number_default2(a2, b) {
  return a2 = +a2, b = +b, function(t) {
    return a2 * (1 - t) + b * t;
  };
}

// node_modules/d3-interpolate/src/object.js
function object_default(a2, b) {
  var i = {}, c = {}, k2;
  if (a2 === null || typeof a2 !== "object")
    a2 = {};
  if (b === null || typeof b !== "object")
    b = {};
  for (k2 in b) {
    if (k2 in a2) {
      i[k2] = value_default(a2[k2], b[k2]);
    } else {
      c[k2] = b[k2];
    }
  }
  return function(t) {
    for (k2 in i)
      c[k2] = i[k2](t);
    return c;
  };
}

// node_modules/d3-interpolate/src/string.js
var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;
var reB = new RegExp(reA.source, "g");
function zero(b) {
  return function() {
    return b;
  };
}
function one(b) {
  return function(t) {
    return b(t) + "";
  };
}
function string_default(a2, b) {
  var bi = reA.lastIndex = reB.lastIndex = 0, am, bm, bs, i = -1, s2 = [], q = [];
  a2 = a2 + "", b = b + "";
  while ((am = reA.exec(a2)) && (bm = reB.exec(b))) {
    if ((bs = bm.index) > bi) {
      bs = b.slice(bi, bs);
      if (s2[i])
        s2[i] += bs;
      else
        s2[++i] = bs;
    }
    if ((am = am[0]) === (bm = bm[0])) {
      if (s2[i])
        s2[i] += bm;
      else
        s2[++i] = bm;
    } else {
      s2[++i] = null;
      q.push({ i, x: number_default2(am, bm) });
    }
    bi = reB.lastIndex;
  }
  if (bi < b.length) {
    bs = b.slice(bi);
    if (s2[i])
      s2[i] += bs;
    else
      s2[++i] = bs;
  }
  return s2.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function(t) {
    for (var i2 = 0, o; i2 < b; ++i2)
      s2[(o = q[i2]).i] = o.x(t);
    return s2.join("");
  });
}

// node_modules/d3-interpolate/src/value.js
function value_default(a2, b) {
  var t = typeof b, c;
  return b == null || t === "boolean" ? constant_default2(b) : (t === "number" ? number_default2 : t === "string" ? (c = color(b)) ? (b = c, rgb_default) : string_default : b instanceof color ? rgb_default : b instanceof Date ? date_default : isNumberArray(b) ? numberArray_default : Array.isArray(b) ? genericArray : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? object_default : number_default2)(a2, b);
}

// node_modules/d3-interpolate/src/round.js
function round_default(a2, b) {
  return a2 = +a2, b = +b, function(t) {
    return Math.round(a2 * (1 - t) + b * t);
  };
}

// node_modules/d3-interpolate/src/transform/decompose.js
var degrees2 = 180 / Math.PI;
var identity = {
  translateX: 0,
  translateY: 0,
  rotate: 0,
  skewX: 0,
  scaleX: 1,
  scaleY: 1
};
function decompose_default(a2, b, c, d, e, f) {
  var scaleX, scaleY, skewX;
  if (scaleX = Math.sqrt(a2 * a2 + b * b))
    a2 /= scaleX, b /= scaleX;
  if (skewX = a2 * c + b * d)
    c -= a2 * skewX, d -= b * skewX;
  if (scaleY = Math.sqrt(c * c + d * d))
    c /= scaleY, d /= scaleY, skewX /= scaleY;
  if (a2 * d < b * c)
    a2 = -a2, b = -b, skewX = -skewX, scaleX = -scaleX;
  return {
    translateX: e,
    translateY: f,
    rotate: Math.atan2(b, a2) * degrees2,
    skewX: Math.atan(skewX) * degrees2,
    scaleX,
    scaleY
  };
}

// node_modules/d3-interpolate/src/transform/parse.js
var svgNode;
function parseCss(value) {
  const m = new (typeof DOMMatrix === "function" ? DOMMatrix : WebKitCSSMatrix)(value + "");
  return m.isIdentity ? identity : decompose_default(m.a, m.b, m.c, m.d, m.e, m.f);
}
function parseSvg(value) {
  if (value == null)
    return identity;
  if (!svgNode)
    svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
  svgNode.setAttribute("transform", value);
  if (!(value = svgNode.transform.baseVal.consolidate()))
    return identity;
  value = value.matrix;
  return decompose_default(value.a, value.b, value.c, value.d, value.e, value.f);
}

// node_modules/d3-interpolate/src/transform/index.js
function interpolateTransform(parse, pxComma, pxParen, degParen) {
  function pop(s2) {
    return s2.length ? s2.pop() + " " : "";
  }
  function translate(xa, ya, xb, yb, s2, q) {
    if (xa !== xb || ya !== yb) {
      var i = s2.push("translate(", null, pxComma, null, pxParen);
      q.push({ i: i - 4, x: number_default2(xa, xb) }, { i: i - 2, x: number_default2(ya, yb) });
    } else if (xb || yb) {
      s2.push("translate(" + xb + pxComma + yb + pxParen);
    }
  }
  function rotate(a2, b, s2, q) {
    if (a2 !== b) {
      if (a2 - b > 180)
        b += 360;
      else if (b - a2 > 180)
        a2 += 360;
      q.push({ i: s2.push(pop(s2) + "rotate(", null, degParen) - 2, x: number_default2(a2, b) });
    } else if (b) {
      s2.push(pop(s2) + "rotate(" + b + degParen);
    }
  }
  function skewX(a2, b, s2, q) {
    if (a2 !== b) {
      q.push({ i: s2.push(pop(s2) + "skewX(", null, degParen) - 2, x: number_default2(a2, b) });
    } else if (b) {
      s2.push(pop(s2) + "skewX(" + b + degParen);
    }
  }
  function scale(xa, ya, xb, yb, s2, q) {
    if (xa !== xb || ya !== yb) {
      var i = s2.push(pop(s2) + "scale(", null, ",", null, ")");
      q.push({ i: i - 4, x: number_default2(xa, xb) }, { i: i - 2, x: number_default2(ya, yb) });
    } else if (xb !== 1 || yb !== 1) {
      s2.push(pop(s2) + "scale(" + xb + "," + yb + ")");
    }
  }
  return function(a2, b) {
    var s2 = [], q = [];
    a2 = parse(a2), b = parse(b);
    translate(a2.translateX, a2.translateY, b.translateX, b.translateY, s2, q);
    rotate(a2.rotate, b.rotate, s2, q);
    skewX(a2.skewX, b.skewX, s2, q);
    scale(a2.scaleX, a2.scaleY, b.scaleX, b.scaleY, s2, q);
    a2 = b = null;
    return function(t) {
      var i = -1, n = q.length, o;
      while (++i < n)
        s2[(o = q[i]).i] = o.x(t);
      return s2.join("");
    };
  };
}
var interpolateTransformCss = interpolateTransform(parseCss, "px, ", "px)", "deg)");
var interpolateTransformSvg = interpolateTransform(parseSvg, ", ", ")", ")");

// node_modules/d3-interpolate/src/zoom.js
var epsilon2 = 1e-12;
function cosh(x2) {
  return ((x2 = Math.exp(x2)) + 1 / x2) / 2;
}
function sinh(x2) {
  return ((x2 = Math.exp(x2)) - 1 / x2) / 2;
}
function tanh(x2) {
  return ((x2 = Math.exp(2 * x2)) - 1) / (x2 + 1);
}
var zoom_default = function zoomRho(rho, rho2, rho4) {
  function zoom(p0, p1) {
    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;
    if (d2 < epsilon2) {
      S = Math.log(w1 / w0) / rho;
      i = function(t) {
        return [
          ux0 + t * dx,
          uy0 + t * dy,
          w0 * Math.exp(rho * t * S)
        ];
      };
    } else {
      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1), b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
      S = (r1 - r0) / rho;
      i = function(t) {
        var s2 = t * S, coshr0 = cosh(r0), u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s2 + r0) - sinh(r0));
        return [
          ux0 + u * dx,
          uy0 + u * dy,
          w0 * coshr0 / cosh(rho * s2 + r0)
        ];
      };
    }
    i.duration = S * 1e3 * rho / Math.SQRT2;
    return i;
  }
  zoom.rho = function(_4) {
    var _1 = Math.max(1e-3, +_4), _22 = _1 * _1, _42 = _22 * _22;
    return zoomRho(_1, _22, _42);
  };
  return zoom;
}(Math.SQRT2, 2, 4);

// node_modules/d3-interpolate/src/hsl.js
function hsl2(hue2) {
  return function(start, end) {
    var h = hue2((start = hsl(start)).h, (end = hsl(end)).h), s2 = nogamma(start.s, end.s), l = nogamma(start.l, end.l), opacity = nogamma(start.opacity, end.opacity);
    return function(t) {
      start.h = h(t);
      start.s = s2(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  };
}
var hsl_default = hsl2(hue);
var hslLong = hsl2(nogamma);

// node_modules/d3-interpolate/src/hcl.js
function hcl2(hue2) {
  return function(start, end) {
    var h = hue2((start = hcl(start)).h, (end = hcl(end)).h), c = nogamma(start.c, end.c), l = nogamma(start.l, end.l), opacity = nogamma(start.opacity, end.opacity);
    return function(t) {
      start.h = h(t);
      start.c = c(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  };
}
var hcl_default = hcl2(hue);
var hclLong = hcl2(nogamma);

// node_modules/d3-interpolate/src/cubehelix.js
function cubehelix2(hue2) {
  return function cubehelixGamma(y2) {
    y2 = +y2;
    function cubehelix3(start, end) {
      var h = hue2((start = cubehelix(start)).h, (end = cubehelix(end)).h), s2 = nogamma(start.s, end.s), l = nogamma(start.l, end.l), opacity = nogamma(start.opacity, end.opacity);
      return function(t) {
        start.h = h(t);
        start.s = s2(t);
        start.l = l(Math.pow(t, y2));
        start.opacity = opacity(t);
        return start + "";
      };
    }
    cubehelix3.gamma = cubehelixGamma;
    return cubehelix3;
  }(1);
}
var cubehelix_default = cubehelix2(hue);
var cubehelixLong = cubehelix2(nogamma);

// node_modules/d3-scale/src/constant.js
function constants(x2) {
  return function() {
    return x2;
  };
}

// node_modules/d3-scale/src/number.js
function number(x2) {
  return +x2;
}

// node_modules/d3-scale/src/continuous.js
var unit = [0, 1];
function identity2(x2) {
  return x2;
}
function normalize(a2, b) {
  return (b -= a2 = +a2) ? function(x2) {
    return (x2 - a2) / b;
  } : constants(isNaN(b) ? NaN : 0.5);
}
function clamper(a2, b) {
  var t;
  if (a2 > b)
    t = a2, a2 = b, b = t;
  return function(x2) {
    return Math.max(a2, Math.min(b, x2));
  };
}
function bimap(domain, range, interpolate) {
  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];
  if (d1 < d0)
    d0 = normalize(d1, d0), r0 = interpolate(r1, r0);
  else
    d0 = normalize(d0, d1), r0 = interpolate(r0, r1);
  return function(x2) {
    return r0(d0(x2));
  };
}
function polymap(domain, range, interpolate) {
  var j = Math.min(domain.length, range.length) - 1, d = new Array(j), r = new Array(j), i = -1;
  if (domain[j] < domain[0]) {
    domain = domain.slice().reverse();
    range = range.slice().reverse();
  }
  while (++i < j) {
    d[i] = normalize(domain[i], domain[i + 1]);
    r[i] = interpolate(range[i], range[i + 1]);
  }
  return function(x2) {
    var i2 = bisect_default(domain, x2, 1, j) - 1;
    return r[i2](d[i2](x2));
  };
}
function copy(source, target) {
  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());
}
function transformer() {
  var domain = unit, range = unit, interpolate = value_default, transform, untransform, unknown, clamp4 = identity2, piecewise2, output, input;
  function rescale() {
    var n = Math.min(domain.length, range.length);
    if (clamp4 !== identity2)
      clamp4 = clamper(domain[0], domain[n - 1]);
    piecewise2 = n > 2 ? polymap : bimap;
    output = input = null;
    return scale;
  }
  function scale(x2) {
    return x2 == null || isNaN(x2 = +x2) ? unknown : (output || (output = piecewise2(domain.map(transform), range, interpolate)))(transform(clamp4(x2)));
  }
  scale.invert = function(y2) {
    return clamp4(untransform((input || (input = piecewise2(range, domain.map(transform), number_default2)))(y2)));
  };
  scale.domain = function(_4) {
    return arguments.length ? (domain = Array.from(_4, number), rescale()) : domain.slice();
  };
  scale.range = function(_4) {
    return arguments.length ? (range = Array.from(_4), rescale()) : range.slice();
  };
  scale.rangeRound = function(_4) {
    return range = Array.from(_4), interpolate = round_default, rescale();
  };
  scale.clamp = function(_4) {
    return arguments.length ? (clamp4 = _4 ? true : identity2, rescale()) : clamp4 !== identity2;
  };
  scale.interpolate = function(_4) {
    return arguments.length ? (interpolate = _4, rescale()) : interpolate;
  };
  scale.unknown = function(_4) {
    return arguments.length ? (unknown = _4, scale) : unknown;
  };
  return function(t, u) {
    transform = t, untransform = u;
    return rescale();
  };
}
function continuous() {
  return transformer()(identity2, identity2);
}

// node_modules/d3-format/src/formatDecimal.js
function formatDecimal_default(x2) {
  return Math.abs(x2 = Math.round(x2)) >= 1e21 ? x2.toLocaleString("en").replace(/,/g, "") : x2.toString(10);
}
function formatDecimalParts(x2, p) {
  if ((i = (x2 = p ? x2.toExponential(p - 1) : x2.toExponential()).indexOf("e")) < 0)
    return null;
  var i, coefficient = x2.slice(0, i);
  return [
    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
    +x2.slice(i + 1)
  ];
}

// node_modules/d3-format/src/exponent.js
function exponent_default(x2) {
  return x2 = formatDecimalParts(Math.abs(x2)), x2 ? x2[1] : NaN;
}

// node_modules/d3-format/src/formatGroup.js
function formatGroup_default(grouping, thousands) {
  return function(value, width) {
    var i = value.length, t = [], j = 0, g = grouping[0], length = 0;
    while (i > 0 && g > 0) {
      if (length + g + 1 > width)
        g = Math.max(1, width - length);
      t.push(value.substring(i -= g, i + g));
      if ((length += g + 1) > width)
        break;
      g = grouping[j = (j + 1) % grouping.length];
    }
    return t.reverse().join(thousands);
  };
}

// node_modules/d3-format/src/formatNumerals.js
function formatNumerals_default(numerals) {
  return function(value) {
    return value.replace(/[0-9]/g, function(i) {
      return numerals[+i];
    });
  };
}

// node_modules/d3-format/src/formatSpecifier.js
var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
function formatSpecifier(specifier) {
  if (!(match = re.exec(specifier)))
    throw new Error("invalid format: " + specifier);
  var match;
  return new FormatSpecifier({
    fill: match[1],
    align: match[2],
    sign: match[3],
    symbol: match[4],
    zero: match[5],
    width: match[6],
    comma: match[7],
    precision: match[8] && match[8].slice(1),
    trim: match[9],
    type: match[10]
  });
}
formatSpecifier.prototype = FormatSpecifier.prototype;
function FormatSpecifier(specifier) {
  this.fill = specifier.fill === void 0 ? " " : specifier.fill + "";
  this.align = specifier.align === void 0 ? ">" : specifier.align + "";
  this.sign = specifier.sign === void 0 ? "-" : specifier.sign + "";
  this.symbol = specifier.symbol === void 0 ? "" : specifier.symbol + "";
  this.zero = !!specifier.zero;
  this.width = specifier.width === void 0 ? void 0 : +specifier.width;
  this.comma = !!specifier.comma;
  this.precision = specifier.precision === void 0 ? void 0 : +specifier.precision;
  this.trim = !!specifier.trim;
  this.type = specifier.type === void 0 ? "" : specifier.type + "";
}
FormatSpecifier.prototype.toString = function() {
  return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === void 0 ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === void 0 ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
};

// node_modules/d3-format/src/formatTrim.js
function formatTrim_default(s2) {
  out:
    for (var n = s2.length, i = 1, i0 = -1, i1; i < n; ++i) {
      switch (s2[i]) {
        case ".":
          i0 = i1 = i;
          break;
        case "0":
          if (i0 === 0)
            i0 = i;
          i1 = i;
          break;
        default:
          if (!+s2[i])
            break out;
          if (i0 > 0)
            i0 = 0;
          break;
      }
    }
  return i0 > 0 ? s2.slice(0, i0) + s2.slice(i1 + 1) : s2;
}

// node_modules/d3-format/src/formatPrefixAuto.js
var prefixExponent;
function formatPrefixAuto_default(x2, p) {
  var d = formatDecimalParts(x2, p);
  if (!d)
    return x2 + "";
  var coefficient = d[0], exponent = d[1], i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1, n = coefficient.length;
  return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + formatDecimalParts(x2, Math.max(0, p + i - 1))[0];
}

// node_modules/d3-format/src/formatRounded.js
function formatRounded_default(x2, p) {
  var d = formatDecimalParts(x2, p);
  if (!d)
    return x2 + "";
  var coefficient = d[0], exponent = d[1];
  return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join("0");
}

// node_modules/d3-format/src/formatTypes.js
var formatTypes_default = {
  "%": (x2, p) => (x2 * 100).toFixed(p),
  "b": (x2) => Math.round(x2).toString(2),
  "c": (x2) => x2 + "",
  "d": formatDecimal_default,
  "e": (x2, p) => x2.toExponential(p),
  "f": (x2, p) => x2.toFixed(p),
  "g": (x2, p) => x2.toPrecision(p),
  "o": (x2) => Math.round(x2).toString(8),
  "p": (x2, p) => formatRounded_default(x2 * 100, p),
  "r": formatRounded_default,
  "s": formatPrefixAuto_default,
  "X": (x2) => Math.round(x2).toString(16).toUpperCase(),
  "x": (x2) => Math.round(x2).toString(16)
};

// node_modules/d3-format/src/identity.js
function identity_default2(x2) {
  return x2;
}

// node_modules/d3-format/src/locale.js
var map3 = Array.prototype.map;
var prefixes = ["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];
function locale_default(locale3) {
  var group2 = locale3.grouping === void 0 || locale3.thousands === void 0 ? identity_default2 : formatGroup_default(map3.call(locale3.grouping, Number), locale3.thousands + ""), currencyPrefix = locale3.currency === void 0 ? "" : locale3.currency[0] + "", currencySuffix = locale3.currency === void 0 ? "" : locale3.currency[1] + "", decimal = locale3.decimal === void 0 ? "." : locale3.decimal + "", numerals = locale3.numerals === void 0 ? identity_default2 : formatNumerals_default(map3.call(locale3.numerals, String)), percent = locale3.percent === void 0 ? "%" : locale3.percent + "", minus = locale3.minus === void 0 ? "−" : locale3.minus + "", nan = locale3.nan === void 0 ? "NaN" : locale3.nan + "";
  function newFormat(specifier) {
    specifier = formatSpecifier(specifier);
    var fill = specifier.fill, align = specifier.align, sign2 = specifier.sign, symbol = specifier.symbol, zero2 = specifier.zero, width = specifier.width, comma = specifier.comma, precision = specifier.precision, trim = specifier.trim, type = specifier.type;
    if (type === "n")
      comma = true, type = "g";
    else if (!formatTypes_default[type])
      precision === void 0 && (precision = 12), trim = true, type = "g";
    if (zero2 || fill === "0" && align === "=")
      zero2 = true, fill = "0", align = "=";
    var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "", suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type) ? percent : "";
    var formatType = formatTypes_default[type], maybeSuffix = /[defgprs%]/.test(type);
    precision = precision === void 0 ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));
    function format2(value) {
      var valuePrefix = prefix, valueSuffix = suffix, i, n, c;
      if (type === "c") {
        valueSuffix = formatType(value) + valueSuffix;
        value = "";
      } else {
        value = +value;
        var valueNegative = value < 0 || 1 / value < 0;
        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);
        if (trim)
          value = formatTrim_default(value);
        if (valueNegative && +value === 0 && sign2 !== "+")
          valueNegative = false;
        valuePrefix = (valueNegative ? sign2 === "(" ? sign2 : minus : sign2 === "-" || sign2 === "(" ? "" : sign2) + valuePrefix;
        valueSuffix = (type === "s" ? prefixes[8 + prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign2 === "(" ? ")" : "");
        if (maybeSuffix) {
          i = -1, n = value.length;
          while (++i < n) {
            if (c = value.charCodeAt(i), 48 > c || c > 57) {
              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
              value = value.slice(0, i);
              break;
            }
          }
        }
      }
      if (comma && !zero2)
        value = group2(value, Infinity);
      var length = valuePrefix.length + value.length + valueSuffix.length, padding = length < width ? new Array(width - length + 1).join(fill) : "";
      if (comma && zero2)
        value = group2(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";
      switch (align) {
        case "<":
          value = valuePrefix + value + valueSuffix + padding;
          break;
        case "=":
          value = valuePrefix + padding + value + valueSuffix;
          break;
        case "^":
          value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);
          break;
        default:
          value = padding + valuePrefix + value + valueSuffix;
          break;
      }
      return numerals(value);
    }
    format2.toString = function() {
      return specifier + "";
    };
    return format2;
  }
  function formatPrefix2(specifier, value) {
    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)), e = Math.max(-8, Math.min(8, Math.floor(exponent_default(value) / 3))) * 3, k2 = Math.pow(10, -e), prefix = prefixes[8 + e / 3];
    return function(value2) {
      return f(k2 * value2) + prefix;
    };
  }
  return {
    format: newFormat,
    formatPrefix: formatPrefix2
  };
}

// node_modules/d3-format/src/defaultLocale.js
var locale;
var format;
var formatPrefix;
defaultLocale({
  thousands: ",",
  grouping: [3],
  currency: ["$", ""]
});
function defaultLocale(definition) {
  locale = locale_default(definition);
  format = locale.format;
  formatPrefix = locale.formatPrefix;
  return locale;
}

// node_modules/d3-format/src/precisionFixed.js
function precisionFixed_default(step) {
  return Math.max(0, -exponent_default(Math.abs(step)));
}

// node_modules/d3-format/src/precisionPrefix.js
function precisionPrefix_default(step, value) {
  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent_default(value) / 3))) * 3 - exponent_default(Math.abs(step)));
}

// node_modules/d3-format/src/precisionRound.js
function precisionRound_default(step, max3) {
  step = Math.abs(step), max3 = Math.abs(max3) - step;
  return Math.max(0, exponent_default(max3) - exponent_default(step)) + 1;
}

// node_modules/d3-scale/src/tickFormat.js
function tickFormat(start, stop, count2, specifier) {
  var step = tickStep(start, stop, count2), precision;
  specifier = formatSpecifier(specifier == null ? ",f" : specifier);
  switch (specifier.type) {
    case "s": {
      var value = Math.max(Math.abs(start), Math.abs(stop));
      if (specifier.precision == null && !isNaN(precision = precisionPrefix_default(step, value)))
        specifier.precision = precision;
      return formatPrefix(specifier, value);
    }
    case "":
    case "e":
    case "g":
    case "p":
    case "r": {
      if (specifier.precision == null && !isNaN(precision = precisionRound_default(step, Math.max(Math.abs(start), Math.abs(stop)))))
        specifier.precision = precision - (specifier.type === "e");
      break;
    }
    case "f":
    case "%": {
      if (specifier.precision == null && !isNaN(precision = precisionFixed_default(step)))
        specifier.precision = precision - (specifier.type === "%") * 2;
      break;
    }
  }
  return format(specifier);
}

// node_modules/d3-scale/src/linear.js
function linearish(scale) {
  var domain = scale.domain;
  scale.ticks = function(count2) {
    var d = domain();
    return ticks_default(d[0], d[d.length - 1], count2 == null ? 10 : count2);
  };
  scale.tickFormat = function(count2, specifier) {
    var d = domain();
    return tickFormat(d[0], d[d.length - 1], count2 == null ? 10 : count2, specifier);
  };
  scale.nice = function(count2) {
    if (count2 == null)
      count2 = 10;
    var d = domain();
    var i0 = 0;
    var i1 = d.length - 1;
    var start = d[i0];
    var stop = d[i1];
    var prestep;
    var step;
    var maxIter = 10;
    if (stop < start) {
      step = start, start = stop, stop = step;
      step = i0, i0 = i1, i1 = step;
    }
    while (maxIter-- > 0) {
      step = tickIncrement(start, stop, count2);
      if (step === prestep) {
        d[i0] = start;
        d[i1] = stop;
        return domain(d);
      } else if (step > 0) {
        start = Math.floor(start / step) * step;
        stop = Math.ceil(stop / step) * step;
      } else if (step < 0) {
        start = Math.ceil(start * step) / step;
        stop = Math.floor(stop * step) / step;
      } else {
        break;
      }
      prestep = step;
    }
    return scale;
  };
  return scale;
}
function linear2() {
  var scale = continuous();
  scale.copy = function() {
    return copy(scale, linear2());
  };
  initRange.apply(scale, arguments);
  return linearish(scale);
}

// node_modules/d3-time/src/interval.js
var t02 = new Date();
var t12 = new Date();
function timeInterval(floori, offseti, count2, field) {
  function interval(date) {
    return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;
  }
  interval.floor = (date) => {
    return floori(date = new Date(+date)), date;
  };
  interval.ceil = (date) => {
    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
  };
  interval.round = (date) => {
    const d0 = interval(date), d1 = interval.ceil(date);
    return date - d0 < d1 - date ? d0 : d1;
  };
  interval.offset = (date, step) => {
    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;
  };
  interval.range = (start, stop, step) => {
    const range = [];
    start = interval.ceil(start);
    step = step == null ? 1 : Math.floor(step);
    if (!(start < stop) || !(step > 0))
      return range;
    let previous;
    do
      range.push(previous = new Date(+start)), offseti(start, step), floori(start);
    while (previous < start && start < stop);
    return range;
  };
  interval.filter = (test) => {
    return timeInterval((date) => {
      if (date >= date)
        while (floori(date), !test(date))
          date.setTime(date - 1);
    }, (date, step) => {
      if (date >= date) {
        if (step < 0)
          while (++step <= 0) {
            while (offseti(date, -1), !test(date)) {
            }
          }
        else
          while (--step >= 0) {
            while (offseti(date, 1), !test(date)) {
            }
          }
      }
    });
  };
  if (count2) {
    interval.count = (start, end) => {
      t02.setTime(+start), t12.setTime(+end);
      floori(t02), floori(t12);
      return Math.floor(count2(t02, t12));
    };
    interval.every = (step) => {
      step = Math.floor(step);
      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? (d) => field(d) % step === 0 : (d) => interval.count(0, d) % step === 0);
    };
  }
  return interval;
}

// node_modules/d3-time/src/millisecond.js
var millisecond = timeInterval(() => {
}, (date, step) => {
  date.setTime(+date + step);
}, (start, end) => {
  return end - start;
});
millisecond.every = (k2) => {
  k2 = Math.floor(k2);
  if (!isFinite(k2) || !(k2 > 0))
    return null;
  if (!(k2 > 1))
    return millisecond;
  return timeInterval((date) => {
    date.setTime(Math.floor(date / k2) * k2);
  }, (date, step) => {
    date.setTime(+date + step * k2);
  }, (start, end) => {
    return (end - start) / k2;
  });
};
var milliseconds = millisecond.range;

// node_modules/d3-time/src/duration.js
var durationSecond = 1e3;
var durationMinute = durationSecond * 60;
var durationHour = durationMinute * 60;
var durationDay = durationHour * 24;
var durationWeek = durationDay * 7;
var durationMonth = durationDay * 30;
var durationYear = durationDay * 365;

// node_modules/d3-time/src/second.js
var second = timeInterval((date) => {
  date.setTime(date - date.getMilliseconds());
}, (date, step) => {
  date.setTime(+date + step * durationSecond);
}, (start, end) => {
  return (end - start) / durationSecond;
}, (date) => {
  return date.getUTCSeconds();
});
var seconds = second.range;

// node_modules/d3-time/src/minute.js
var timeMinute = timeInterval((date) => {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);
}, (date, step) => {
  date.setTime(+date + step * durationMinute);
}, (start, end) => {
  return (end - start) / durationMinute;
}, (date) => {
  return date.getMinutes();
});
var timeMinutes = timeMinute.range;
var utcMinute = timeInterval((date) => {
  date.setUTCSeconds(0, 0);
}, (date, step) => {
  date.setTime(+date + step * durationMinute);
}, (start, end) => {
  return (end - start) / durationMinute;
}, (date) => {
  return date.getUTCMinutes();
});
var utcMinutes = utcMinute.range;

// node_modules/d3-time/src/hour.js
var timeHour = timeInterval((date) => {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);
}, (date, step) => {
  date.setTime(+date + step * durationHour);
}, (start, end) => {
  return (end - start) / durationHour;
}, (date) => {
  return date.getHours();
});
var timeHours = timeHour.range;
var utcHour = timeInterval((date) => {
  date.setUTCMinutes(0, 0, 0);
}, (date, step) => {
  date.setTime(+date + step * durationHour);
}, (start, end) => {
  return (end - start) / durationHour;
}, (date) => {
  return date.getUTCHours();
});
var utcHours = utcHour.range;

// node_modules/d3-time/src/day.js
var timeDay = timeInterval(
  (date) => date.setHours(0, 0, 0, 0),
  (date, step) => date.setDate(date.getDate() + step),
  (start, end) => (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay,
  (date) => date.getDate() - 1
);
var timeDays = timeDay.range;
var utcDay = timeInterval((date) => {
  date.setUTCHours(0, 0, 0, 0);
}, (date, step) => {
  date.setUTCDate(date.getUTCDate() + step);
}, (start, end) => {
  return (end - start) / durationDay;
}, (date) => {
  return date.getUTCDate() - 1;
});
var utcDays = utcDay.range;
var unixDay = timeInterval((date) => {
  date.setUTCHours(0, 0, 0, 0);
}, (date, step) => {
  date.setUTCDate(date.getUTCDate() + step);
}, (start, end) => {
  return (end - start) / durationDay;
}, (date) => {
  return Math.floor(date / durationDay);
});
var unixDays = unixDay.range;

// node_modules/d3-time/src/week.js
function timeWeekday(i) {
  return timeInterval((date) => {
    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
    date.setHours(0, 0, 0, 0);
  }, (date, step) => {
    date.setDate(date.getDate() + step * 7);
  }, (start, end) => {
    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;
  });
}
var timeSunday = timeWeekday(0);
var timeMonday = timeWeekday(1);
var timeTuesday = timeWeekday(2);
var timeWednesday = timeWeekday(3);
var timeThursday = timeWeekday(4);
var timeFriday = timeWeekday(5);
var timeSaturday = timeWeekday(6);
var timeSundays = timeSunday.range;
var timeMondays = timeMonday.range;
var timeTuesdays = timeTuesday.range;
var timeWednesdays = timeWednesday.range;
var timeThursdays = timeThursday.range;
var timeFridays = timeFriday.range;
var timeSaturdays = timeSaturday.range;
function utcWeekday(i) {
  return timeInterval((date) => {
    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
    date.setUTCHours(0, 0, 0, 0);
  }, (date, step) => {
    date.setUTCDate(date.getUTCDate() + step * 7);
  }, (start, end) => {
    return (end - start) / durationWeek;
  });
}
var utcSunday = utcWeekday(0);
var utcMonday = utcWeekday(1);
var utcTuesday = utcWeekday(2);
var utcWednesday = utcWeekday(3);
var utcThursday = utcWeekday(4);
var utcFriday = utcWeekday(5);
var utcSaturday = utcWeekday(6);
var utcSundays = utcSunday.range;
var utcMondays = utcMonday.range;
var utcTuesdays = utcTuesday.range;
var utcWednesdays = utcWednesday.range;
var utcThursdays = utcThursday.range;
var utcFridays = utcFriday.range;
var utcSaturdays = utcSaturday.range;

// node_modules/d3-time/src/month.js
var timeMonth = timeInterval((date) => {
  date.setDate(1);
  date.setHours(0, 0, 0, 0);
}, (date, step) => {
  date.setMonth(date.getMonth() + step);
}, (start, end) => {
  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
}, (date) => {
  return date.getMonth();
});
var timeMonths = timeMonth.range;
var utcMonth = timeInterval((date) => {
  date.setUTCDate(1);
  date.setUTCHours(0, 0, 0, 0);
}, (date, step) => {
  date.setUTCMonth(date.getUTCMonth() + step);
}, (start, end) => {
  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
}, (date) => {
  return date.getUTCMonth();
});
var utcMonths = utcMonth.range;

// node_modules/d3-time/src/year.js
var timeYear = timeInterval((date) => {
  date.setMonth(0, 1);
  date.setHours(0, 0, 0, 0);
}, (date, step) => {
  date.setFullYear(date.getFullYear() + step);
}, (start, end) => {
  return end.getFullYear() - start.getFullYear();
}, (date) => {
  return date.getFullYear();
});
timeYear.every = (k2) => {
  return !isFinite(k2 = Math.floor(k2)) || !(k2 > 0) ? null : timeInterval((date) => {
    date.setFullYear(Math.floor(date.getFullYear() / k2) * k2);
    date.setMonth(0, 1);
    date.setHours(0, 0, 0, 0);
  }, (date, step) => {
    date.setFullYear(date.getFullYear() + step * k2);
  });
};
var timeYears = timeYear.range;
var utcYear = timeInterval((date) => {
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
}, (date, step) => {
  date.setUTCFullYear(date.getUTCFullYear() + step);
}, (start, end) => {
  return end.getUTCFullYear() - start.getUTCFullYear();
}, (date) => {
  return date.getUTCFullYear();
});
utcYear.every = (k2) => {
  return !isFinite(k2 = Math.floor(k2)) || !(k2 > 0) ? null : timeInterval((date) => {
    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k2) * k2);
    date.setUTCMonth(0, 1);
    date.setUTCHours(0, 0, 0, 0);
  }, (date, step) => {
    date.setUTCFullYear(date.getUTCFullYear() + step * k2);
  });
};
var utcYears = utcYear.range;

// node_modules/d3-time/src/ticks.js
function ticker(year, month, week, day, hour, minute) {
  const tickIntervals = [
    [second, 1, durationSecond],
    [second, 5, 5 * durationSecond],
    [second, 15, 15 * durationSecond],
    [second, 30, 30 * durationSecond],
    [minute, 1, durationMinute],
    [minute, 5, 5 * durationMinute],
    [minute, 15, 15 * durationMinute],
    [minute, 30, 30 * durationMinute],
    [hour, 1, durationHour],
    [hour, 3, 3 * durationHour],
    [hour, 6, 6 * durationHour],
    [hour, 12, 12 * durationHour],
    [day, 1, durationDay],
    [day, 2, 2 * durationDay],
    [week, 1, durationWeek],
    [month, 1, durationMonth],
    [month, 3, 3 * durationMonth],
    [year, 1, durationYear]
  ];
  function ticks(start, stop, count2) {
    const reverse2 = stop < start;
    if (reverse2)
      [start, stop] = [stop, start];
    const interval = count2 && typeof count2.range === "function" ? count2 : tickInterval(start, stop, count2);
    const ticks2 = interval ? interval.range(start, +stop + 1) : [];
    return reverse2 ? ticks2.reverse() : ticks2;
  }
  function tickInterval(start, stop, count2) {
    const target = Math.abs(stop - start) / count2;
    const i = bisector_default(([, , step2]) => step2).right(tickIntervals, target);
    if (i === tickIntervals.length)
      return year.every(tickStep(start / durationYear, stop / durationYear, count2));
    if (i === 0)
      return millisecond.every(Math.max(tickStep(start, stop, count2), 1));
    const [t, step] = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
    return t.every(step);
  }
  return [ticks, tickInterval];
}
var [utcTicks, utcTickInterval] = ticker(utcYear, utcMonth, utcSunday, unixDay, utcHour, utcMinute);
var [timeTicks, timeTickInterval] = ticker(timeYear, timeMonth, timeSunday, timeDay, timeHour, timeMinute);

// node_modules/d3-time-format/src/locale.js
function localDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
    date.setFullYear(d.y);
    return date;
  }
  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
}
function utcDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
    date.setUTCFullYear(d.y);
    return date;
  }
  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
}
function newDate(y2, m, d) {
  return { y: y2, m, d, H: 0, M: 0, S: 0, L: 0 };
}
function formatLocale(locale3) {
  var locale_dateTime = locale3.dateTime, locale_date = locale3.date, locale_time = locale3.time, locale_periods = locale3.periods, locale_weekdays = locale3.days, locale_shortWeekdays = locale3.shortDays, locale_months = locale3.months, locale_shortMonths = locale3.shortMonths;
  var periodRe = formatRe(locale_periods), periodLookup = formatLookup(locale_periods), weekdayRe = formatRe(locale_weekdays), weekdayLookup = formatLookup(locale_weekdays), shortWeekdayRe = formatRe(locale_shortWeekdays), shortWeekdayLookup = formatLookup(locale_shortWeekdays), monthRe = formatRe(locale_months), monthLookup = formatLookup(locale_months), shortMonthRe = formatRe(locale_shortMonths), shortMonthLookup = formatLookup(locale_shortMonths);
  var formats = {
    "a": formatShortWeekday,
    "A": formatWeekday,
    "b": formatShortMonth,
    "B": formatMonth,
    "c": null,
    "d": formatDayOfMonth,
    "e": formatDayOfMonth,
    "f": formatMicroseconds,
    "g": formatYearISO,
    "G": formatFullYearISO,
    "H": formatHour24,
    "I": formatHour12,
    "j": formatDayOfYear,
    "L": formatMilliseconds,
    "m": formatMonthNumber,
    "M": formatMinutes,
    "p": formatPeriod,
    "q": formatQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatSeconds,
    "u": formatWeekdayNumberMonday,
    "U": formatWeekNumberSunday,
    "V": formatWeekNumberISO,
    "w": formatWeekdayNumberSunday,
    "W": formatWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatYear,
    "Y": formatFullYear,
    "Z": formatZone,
    "%": formatLiteralPercent
  };
  var utcFormats = {
    "a": formatUTCShortWeekday,
    "A": formatUTCWeekday,
    "b": formatUTCShortMonth,
    "B": formatUTCMonth,
    "c": null,
    "d": formatUTCDayOfMonth,
    "e": formatUTCDayOfMonth,
    "f": formatUTCMicroseconds,
    "g": formatUTCYearISO,
    "G": formatUTCFullYearISO,
    "H": formatUTCHour24,
    "I": formatUTCHour12,
    "j": formatUTCDayOfYear,
    "L": formatUTCMilliseconds,
    "m": formatUTCMonthNumber,
    "M": formatUTCMinutes,
    "p": formatUTCPeriod,
    "q": formatUTCQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatUTCSeconds,
    "u": formatUTCWeekdayNumberMonday,
    "U": formatUTCWeekNumberSunday,
    "V": formatUTCWeekNumberISO,
    "w": formatUTCWeekdayNumberSunday,
    "W": formatUTCWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatUTCYear,
    "Y": formatUTCFullYear,
    "Z": formatUTCZone,
    "%": formatLiteralPercent
  };
  var parses = {
    "a": parseShortWeekday,
    "A": parseWeekday,
    "b": parseShortMonth,
    "B": parseMonth,
    "c": parseLocaleDateTime,
    "d": parseDayOfMonth,
    "e": parseDayOfMonth,
    "f": parseMicroseconds,
    "g": parseYear,
    "G": parseFullYear,
    "H": parseHour24,
    "I": parseHour24,
    "j": parseDayOfYear,
    "L": parseMilliseconds,
    "m": parseMonthNumber,
    "M": parseMinutes,
    "p": parsePeriod,
    "q": parseQuarter,
    "Q": parseUnixTimestamp,
    "s": parseUnixTimestampSeconds,
    "S": parseSeconds,
    "u": parseWeekdayNumberMonday,
    "U": parseWeekNumberSunday,
    "V": parseWeekNumberISO,
    "w": parseWeekdayNumberSunday,
    "W": parseWeekNumberMonday,
    "x": parseLocaleDate,
    "X": parseLocaleTime,
    "y": parseYear,
    "Y": parseFullYear,
    "Z": parseZone,
    "%": parseLiteralPercent
  };
  formats.x = newFormat(locale_date, formats);
  formats.X = newFormat(locale_time, formats);
  formats.c = newFormat(locale_dateTime, formats);
  utcFormats.x = newFormat(locale_date, utcFormats);
  utcFormats.X = newFormat(locale_time, utcFormats);
  utcFormats.c = newFormat(locale_dateTime, utcFormats);
  function newFormat(specifier, formats2) {
    return function(date) {
      var string = [], i = -1, j = 0, n = specifier.length, c, pad2, format2;
      if (!(date instanceof Date))
        date = new Date(+date);
      while (++i < n) {
        if (specifier.charCodeAt(i) === 37) {
          string.push(specifier.slice(j, i));
          if ((pad2 = pads[c = specifier.charAt(++i)]) != null)
            c = specifier.charAt(++i);
          else
            pad2 = c === "e" ? " " : "0";
          if (format2 = formats2[c])
            c = format2(date, pad2);
          string.push(c);
          j = i + 1;
        }
      }
      string.push(specifier.slice(j, i));
      return string.join("");
    };
  }
  function newParse(specifier, Z) {
    return function(string) {
      var d = newDate(1900, void 0, 1), i = parseSpecifier(d, specifier, string += "", 0), week, day;
      if (i != string.length)
        return null;
      if ("Q" in d)
        return new Date(d.Q);
      if ("s" in d)
        return new Date(d.s * 1e3 + ("L" in d ? d.L : 0));
      if (Z && !("Z" in d))
        d.Z = 0;
      if ("p" in d)
        d.H = d.H % 12 + d.p * 12;
      if (d.m === void 0)
        d.m = "q" in d ? d.q : 0;
      if ("V" in d) {
        if (d.V < 1 || d.V > 53)
          return null;
        if (!("w" in d))
          d.w = 1;
        if ("Z" in d) {
          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();
          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);
          week = utcDay.offset(week, (d.V - 1) * 7);
          d.y = week.getUTCFullYear();
          d.m = week.getUTCMonth();
          d.d = week.getUTCDate() + (d.w + 6) % 7;
        } else {
          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();
          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);
          week = timeDay.offset(week, (d.V - 1) * 7);
          d.y = week.getFullYear();
          d.m = week.getMonth();
          d.d = week.getDate() + (d.w + 6) % 7;
        }
      } else if ("W" in d || "U" in d) {
        if (!("w" in d))
          d.w = "u" in d ? d.u % 7 : "W" in d ? 1 : 0;
        day = "Z" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();
        d.m = 0;
        d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;
      }
      if ("Z" in d) {
        d.H += d.Z / 100 | 0;
        d.M += d.Z % 100;
        return utcDate(d);
      }
      return localDate(d);
    };
  }
  function parseSpecifier(d, specifier, string, j) {
    var i = 0, n = specifier.length, m = string.length, c, parse;
    while (i < n) {
      if (j >= m)
        return -1;
      c = specifier.charCodeAt(i++);
      if (c === 37) {
        c = specifier.charAt(i++);
        parse = parses[c in pads ? specifier.charAt(i++) : c];
        if (!parse || (j = parse(d, string, j)) < 0)
          return -1;
      } else if (c != string.charCodeAt(j++)) {
        return -1;
      }
    }
    return j;
  }
  function parsePeriod(d, string, i) {
    var n = periodRe.exec(string.slice(i));
    return n ? (d.p = periodLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }
  function parseShortWeekday(d, string, i) {
    var n = shortWeekdayRe.exec(string.slice(i));
    return n ? (d.w = shortWeekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }
  function parseWeekday(d, string, i) {
    var n = weekdayRe.exec(string.slice(i));
    return n ? (d.w = weekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }
  function parseShortMonth(d, string, i) {
    var n = shortMonthRe.exec(string.slice(i));
    return n ? (d.m = shortMonthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }
  function parseMonth(d, string, i) {
    var n = monthRe.exec(string.slice(i));
    return n ? (d.m = monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }
  function parseLocaleDateTime(d, string, i) {
    return parseSpecifier(d, locale_dateTime, string, i);
  }
  function parseLocaleDate(d, string, i) {
    return parseSpecifier(d, locale_date, string, i);
  }
  function parseLocaleTime(d, string, i) {
    return parseSpecifier(d, locale_time, string, i);
  }
  function formatShortWeekday(d) {
    return locale_shortWeekdays[d.getDay()];
  }
  function formatWeekday(d) {
    return locale_weekdays[d.getDay()];
  }
  function formatShortMonth(d) {
    return locale_shortMonths[d.getMonth()];
  }
  function formatMonth(d) {
    return locale_months[d.getMonth()];
  }
  function formatPeriod(d) {
    return locale_periods[+(d.getHours() >= 12)];
  }
  function formatQuarter(d) {
    return 1 + ~~(d.getMonth() / 3);
  }
  function formatUTCShortWeekday(d) {
    return locale_shortWeekdays[d.getUTCDay()];
  }
  function formatUTCWeekday(d) {
    return locale_weekdays[d.getUTCDay()];
  }
  function formatUTCShortMonth(d) {
    return locale_shortMonths[d.getUTCMonth()];
  }
  function formatUTCMonth(d) {
    return locale_months[d.getUTCMonth()];
  }
  function formatUTCPeriod(d) {
    return locale_periods[+(d.getUTCHours() >= 12)];
  }
  function formatUTCQuarter(d) {
    return 1 + ~~(d.getUTCMonth() / 3);
  }
  return {
    format: function(specifier) {
      var f = newFormat(specifier += "", formats);
      f.toString = function() {
        return specifier;
      };
      return f;
    },
    parse: function(specifier) {
      var p = newParse(specifier += "", false);
      p.toString = function() {
        return specifier;
      };
      return p;
    },
    utcFormat: function(specifier) {
      var f = newFormat(specifier += "", utcFormats);
      f.toString = function() {
        return specifier;
      };
      return f;
    },
    utcParse: function(specifier) {
      var p = newParse(specifier += "", true);
      p.toString = function() {
        return specifier;
      };
      return p;
    }
  };
}
var pads = { "-": "", "_": " ", "0": "0" };
var numberRe = /^\s*\d+/;
var percentRe = /^%/;
var requoteRe = /[\\^$*+?|[\]().{}]/g;
function pad(value, fill, width) {
  var sign2 = value < 0 ? "-" : "", string = (sign2 ? -value : value) + "", length = string.length;
  return sign2 + (length < width ? new Array(width - length + 1).join(fill) + string : string);
}
function requote(s2) {
  return s2.replace(requoteRe, "\\$&");
}
function formatRe(names) {
  return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
}
function formatLookup(names) {
  return new Map(names.map((name, i) => [name.toLowerCase(), i]));
}
function parseWeekdayNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.w = +n[0], i + n[0].length) : -1;
}
function parseWeekdayNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.u = +n[0], i + n[0].length) : -1;
}
function parseWeekNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.U = +n[0], i + n[0].length) : -1;
}
function parseWeekNumberISO(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.V = +n[0], i + n[0].length) : -1;
}
function parseWeekNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.W = +n[0], i + n[0].length) : -1;
}
function parseFullYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 4));
  return n ? (d.y = +n[0], i + n[0].length) : -1;
}
function parseYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2e3), i + n[0].length) : -1;
}
function parseZone(d, string, i) {
  var n = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i, i + 6));
  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
}
function parseQuarter(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;
}
function parseMonthNumber(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
}
function parseDayOfMonth(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.d = +n[0], i + n[0].length) : -1;
}
function parseDayOfYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
}
function parseHour24(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.H = +n[0], i + n[0].length) : -1;
}
function parseMinutes(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.M = +n[0], i + n[0].length) : -1;
}
function parseSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.S = +n[0], i + n[0].length) : -1;
}
function parseMilliseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.L = +n[0], i + n[0].length) : -1;
}
function parseMicroseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 6));
  return n ? (d.L = Math.floor(n[0] / 1e3), i + n[0].length) : -1;
}
function parseLiteralPercent(d, string, i) {
  var n = percentRe.exec(string.slice(i, i + 1));
  return n ? i + n[0].length : -1;
}
function parseUnixTimestamp(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.Q = +n[0], i + n[0].length) : -1;
}
function parseUnixTimestampSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.s = +n[0], i + n[0].length) : -1;
}
function formatDayOfMonth(d, p) {
  return pad(d.getDate(), p, 2);
}
function formatHour24(d, p) {
  return pad(d.getHours(), p, 2);
}
function formatHour12(d, p) {
  return pad(d.getHours() % 12 || 12, p, 2);
}
function formatDayOfYear(d, p) {
  return pad(1 + timeDay.count(timeYear(d), d), p, 3);
}
function formatMilliseconds(d, p) {
  return pad(d.getMilliseconds(), p, 3);
}
function formatMicroseconds(d, p) {
  return formatMilliseconds(d, p) + "000";
}
function formatMonthNumber(d, p) {
  return pad(d.getMonth() + 1, p, 2);
}
function formatMinutes(d, p) {
  return pad(d.getMinutes(), p, 2);
}
function formatSeconds(d, p) {
  return pad(d.getSeconds(), p, 2);
}
function formatWeekdayNumberMonday(d) {
  var day = d.getDay();
  return day === 0 ? 7 : day;
}
function formatWeekNumberSunday(d, p) {
  return pad(timeSunday.count(timeYear(d) - 1, d), p, 2);
}
function dISO(d) {
  var day = d.getDay();
  return day >= 4 || day === 0 ? timeThursday(d) : timeThursday.ceil(d);
}
function formatWeekNumberISO(d, p) {
  d = dISO(d);
  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);
}
function formatWeekdayNumberSunday(d) {
  return d.getDay();
}
function formatWeekNumberMonday(d, p) {
  return pad(timeMonday.count(timeYear(d) - 1, d), p, 2);
}
function formatYear(d, p) {
  return pad(d.getFullYear() % 100, p, 2);
}
function formatYearISO(d, p) {
  d = dISO(d);
  return pad(d.getFullYear() % 100, p, 2);
}
function formatFullYear(d, p) {
  return pad(d.getFullYear() % 1e4, p, 4);
}
function formatFullYearISO(d, p) {
  var day = d.getDay();
  d = day >= 4 || day === 0 ? timeThursday(d) : timeThursday.ceil(d);
  return pad(d.getFullYear() % 1e4, p, 4);
}
function formatZone(d) {
  var z = d.getTimezoneOffset();
  return (z > 0 ? "-" : (z *= -1, "+")) + pad(z / 60 | 0, "0", 2) + pad(z % 60, "0", 2);
}
function formatUTCDayOfMonth(d, p) {
  return pad(d.getUTCDate(), p, 2);
}
function formatUTCHour24(d, p) {
  return pad(d.getUTCHours(), p, 2);
}
function formatUTCHour12(d, p) {
  return pad(d.getUTCHours() % 12 || 12, p, 2);
}
function formatUTCDayOfYear(d, p) {
  return pad(1 + utcDay.count(utcYear(d), d), p, 3);
}
function formatUTCMilliseconds(d, p) {
  return pad(d.getUTCMilliseconds(), p, 3);
}
function formatUTCMicroseconds(d, p) {
  return formatUTCMilliseconds(d, p) + "000";
}
function formatUTCMonthNumber(d, p) {
  return pad(d.getUTCMonth() + 1, p, 2);
}
function formatUTCMinutes(d, p) {
  return pad(d.getUTCMinutes(), p, 2);
}
function formatUTCSeconds(d, p) {
  return pad(d.getUTCSeconds(), p, 2);
}
function formatUTCWeekdayNumberMonday(d) {
  var dow = d.getUTCDay();
  return dow === 0 ? 7 : dow;
}
function formatUTCWeekNumberSunday(d, p) {
  return pad(utcSunday.count(utcYear(d) - 1, d), p, 2);
}
function UTCdISO(d) {
  var day = d.getUTCDay();
  return day >= 4 || day === 0 ? utcThursday(d) : utcThursday.ceil(d);
}
function formatUTCWeekNumberISO(d, p) {
  d = UTCdISO(d);
  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);
}
function formatUTCWeekdayNumberSunday(d) {
  return d.getUTCDay();
}
function formatUTCWeekNumberMonday(d, p) {
  return pad(utcMonday.count(utcYear(d) - 1, d), p, 2);
}
function formatUTCYear(d, p) {
  return pad(d.getUTCFullYear() % 100, p, 2);
}
function formatUTCYearISO(d, p) {
  d = UTCdISO(d);
  return pad(d.getUTCFullYear() % 100, p, 2);
}
function formatUTCFullYear(d, p) {
  return pad(d.getUTCFullYear() % 1e4, p, 4);
}
function formatUTCFullYearISO(d, p) {
  var day = d.getUTCDay();
  d = day >= 4 || day === 0 ? utcThursday(d) : utcThursday.ceil(d);
  return pad(d.getUTCFullYear() % 1e4, p, 4);
}
function formatUTCZone() {
  return "+0000";
}
function formatLiteralPercent() {
  return "%";
}
function formatUnixTimestamp(d) {
  return +d;
}
function formatUnixTimestampSeconds(d) {
  return Math.floor(+d / 1e3);
}

// node_modules/d3-time-format/src/defaultLocale.js
var locale2;
var timeFormat;
var timeParse;
var utcFormat;
var utcParse;
defaultLocale2({
  dateTime: "%x, %X",
  date: "%-m/%-d/%Y",
  time: "%-I:%M:%S %p",
  periods: ["AM", "PM"],
  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
});
function defaultLocale2(definition) {
  locale2 = formatLocale(definition);
  timeFormat = locale2.format;
  timeParse = locale2.parse;
  utcFormat = locale2.utcFormat;
  utcParse = locale2.utcParse;
  return locale2;
}

// node_modules/d3-time-format/src/isoFormat.js
var isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";
function formatIsoNative(date) {
  return date.toISOString();
}
var formatIso = Date.prototype.toISOString ? formatIsoNative : utcFormat(isoSpecifier);

// node_modules/d3-time-format/src/isoParse.js
function parseIsoNative(string) {
  var date = new Date(string);
  return isNaN(date) ? null : date;
}
var parseIso = +new Date("2000-01-01T00:00:00.000Z") ? parseIsoNative : utcParse(isoSpecifier);

// node_modules/d3-path/src/path.js
var pi = Math.PI;
var tau = 2 * pi;
var epsilon = 1e-6;
var tauEpsilon = tau - epsilon;
function Path() {
  this._x0 = this._y0 = // start of current subpath
  this._x1 = this._y1 = null;
  this._ = "";
}
function path() {
  return new Path();
}
Path.prototype = path.prototype = {
  constructor: Path,
  moveTo: function(x2, y2) {
    this._ += "M" + (this._x0 = this._x1 = +x2) + "," + (this._y0 = this._y1 = +y2);
  },
  closePath: function() {
    if (this._x1 !== null) {
      this._x1 = this._x0, this._y1 = this._y0;
      this._ += "Z";
    }
  },
  lineTo: function(x2, y2) {
    this._ += "L" + (this._x1 = +x2) + "," + (this._y1 = +y2);
  },
  quadraticCurveTo: function(x1, y1, x2, y2) {
    this._ += "Q" + +x1 + "," + +y1 + "," + (this._x1 = +x2) + "," + (this._y1 = +y2);
  },
  bezierCurveTo: function(x1, y1, x2, y2, x3, y3) {
    this._ += "C" + +x1 + "," + +y1 + "," + +x2 + "," + +y2 + "," + (this._x1 = +x3) + "," + (this._y1 = +y3);
  },
  arcTo: function(x1, y1, x2, y2, r) {
    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
    var x0 = this._x1, y0 = this._y1, x21 = x2 - x1, y21 = y2 - y1, x01 = x0 - x1, y01 = y0 - y1, l01_2 = x01 * x01 + y01 * y01;
    if (r < 0)
      throw new Error("negative radius: " + r);
    if (this._x1 === null) {
      this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
    } else if (!(l01_2 > epsilon))
      ;
    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {
      this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
    } else {
      var x20 = x2 - x0, y20 = y2 - y0, l21_2 = x21 * x21 + y21 * y21, l20_2 = x20 * x20 + y20 * y20, l21 = Math.sqrt(l21_2), l01 = Math.sqrt(l01_2), l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2), t01 = l / l01, t21 = l / l21;
      if (Math.abs(t01 - 1) > epsilon) {
        this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);
      }
      this._ += "A" + r + "," + r + ",0,0," + +(y01 * x20 > x01 * y20) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
    }
  },
  arc: function(x2, y2, r, a0, a1, ccw) {
    x2 = +x2, y2 = +y2, r = +r, ccw = !!ccw;
    var dx = r * Math.cos(a0), dy = r * Math.sin(a0), x0 = x2 + dx, y0 = y2 + dy, cw = 1 ^ ccw, da = ccw ? a0 - a1 : a1 - a0;
    if (r < 0)
      throw new Error("negative radius: " + r);
    if (this._x1 === null) {
      this._ += "M" + x0 + "," + y0;
    } else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {
      this._ += "L" + x0 + "," + y0;
    }
    if (!r)
      return;
    if (da < 0)
      da = da % tau + tau;
    if (da > tauEpsilon) {
      this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x2 - dx) + "," + (y2 - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
    } else if (da > epsilon) {
      this._ += "A" + r + "," + r + ",0," + +(da >= pi) + "," + cw + "," + (this._x1 = x2 + r * Math.cos(a1)) + "," + (this._y1 = y2 + r * Math.sin(a1));
    }
  },
  rect: function(x2, y2, w, h) {
    this._ += "M" + (this._x0 = this._x1 = +x2) + "," + (this._y0 = this._y1 = +y2) + "h" + +w + "v" + +h + "h" + -w + "Z";
  },
  toString: function() {
    return this._;
  }
};
var path_default = path;

// node_modules/d3-shape/src/constant.js
function constant_default3(x2) {
  return function constant() {
    return x2;
  };
}

// node_modules/d3-shape/src/math.js
var abs = Math.abs;
var atan2 = Math.atan2;
var cos = Math.cos;
var max2 = Math.max;
var min2 = Math.min;
var sin = Math.sin;
var sqrt2 = Math.sqrt;
var epsilon3 = 1e-12;
var pi2 = Math.PI;
var halfPi = pi2 / 2;
var tau2 = 2 * pi2;
function acos(x2) {
  return x2 > 1 ? 0 : x2 < -1 ? pi2 : Math.acos(x2);
}
function asin(x2) {
  return x2 >= 1 ? halfPi : x2 <= -1 ? -halfPi : Math.asin(x2);
}

// node_modules/d3-shape/src/arc.js
function arcInnerRadius(d) {
  return d.innerRadius;
}
function arcOuterRadius(d) {
  return d.outerRadius;
}
function arcStartAngle(d) {
  return d.startAngle;
}
function arcEndAngle(d) {
  return d.endAngle;
}
function arcPadAngle(d) {
  return d && d.padAngle;
}
function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {
  var x10 = x1 - x0, y10 = y1 - y0, x32 = x3 - x2, y32 = y3 - y2, t = y32 * x10 - x32 * y10;
  if (t * t < epsilon3)
    return;
  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;
  return [x0 + t * x10, y0 + t * y10];
}
function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
  var x01 = x0 - x1, y01 = y0 - y1, lo = (cw ? rc : -rc) / sqrt2(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x11 = x0 + ox, y11 = y0 + oy, x10 = x1 + ox, y10 = y1 + oy, x00 = (x11 + x10) / 2, y00 = (y11 + y10) / 2, dx = x10 - x11, dy = y10 - y11, d2 = dx * dx + dy * dy, r = r1 - rc, D2 = x11 * y10 - x10 * y11, d = (dy < 0 ? -1 : 1) * sqrt2(max2(0, r * r * d2 - D2 * D2)), cx0 = (D2 * dy - dx * d) / d2, cy0 = (-D2 * dx - dy * d) / d2, cx1 = (D2 * dy + dx * d) / d2, cy1 = (-D2 * dx + dy * d) / d2, dx0 = cx0 - x00, dy0 = cy0 - y00, dx1 = cx1 - x00, dy1 = cy1 - y00;
  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1)
    cx0 = cx1, cy0 = cy1;
  return {
    cx: cx0,
    cy: cy0,
    x01: -ox,
    y01: -oy,
    x11: cx0 * (r1 / r - 1),
    y11: cy0 * (r1 / r - 1)
  };
}
function arc_default() {
  var innerRadius = arcInnerRadius, outerRadius = arcOuterRadius, cornerRadius = constant_default3(0), padRadius = null, startAngle = arcStartAngle, endAngle = arcEndAngle, padAngle = arcPadAngle, context = null;
  function arc() {
    var buffer, r, r0 = +innerRadius.apply(this, arguments), r1 = +outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) - halfPi, a1 = endAngle.apply(this, arguments) - halfPi, da = abs(a1 - a0), cw = a1 > a0;
    if (!context)
      context = buffer = path_default();
    if (r1 < r0)
      r = r1, r1 = r0, r0 = r;
    if (!(r1 > epsilon3))
      context.moveTo(0, 0);
    else if (da > tau2 - epsilon3) {
      context.moveTo(r1 * cos(a0), r1 * sin(a0));
      context.arc(0, 0, r1, a0, a1, !cw);
      if (r0 > epsilon3) {
        context.moveTo(r0 * cos(a1), r0 * sin(a1));
        context.arc(0, 0, r0, a1, a0, cw);
      }
    } else {
      var a01 = a0, a11 = a1, a00 = a0, a10 = a1, da0 = da, da1 = da, ap = padAngle.apply(this, arguments) / 2, rp = ap > epsilon3 && (padRadius ? +padRadius.apply(this, arguments) : sqrt2(r0 * r0 + r1 * r1)), rc = min2(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)), rc0 = rc, rc1 = rc, t03, t13;
      if (rp > epsilon3) {
        var p0 = asin(rp / r0 * sin(ap)), p1 = asin(rp / r1 * sin(ap));
        if ((da0 -= p0 * 2) > epsilon3)
          p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0;
        else
          da0 = 0, a00 = a10 = (a0 + a1) / 2;
        if ((da1 -= p1 * 2) > epsilon3)
          p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1;
        else
          da1 = 0, a01 = a11 = (a0 + a1) / 2;
      }
      var x01 = r1 * cos(a01), y01 = r1 * sin(a01), x10 = r0 * cos(a10), y10 = r0 * sin(a10);
      if (rc > epsilon3) {
        var x11 = r1 * cos(a11), y11 = r1 * sin(a11), x00 = r0 * cos(a00), y00 = r0 * sin(a00), oc;
        if (da < pi2 && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {
          var ax = x01 - oc[0], ay = y01 - oc[1], bx = x11 - oc[0], by = y11 - oc[1], kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt2(ax * ax + ay * ay) * sqrt2(bx * bx + by * by))) / 2), lc = sqrt2(oc[0] * oc[0] + oc[1] * oc[1]);
          rc0 = min2(rc, (r0 - lc) / (kc - 1));
          rc1 = min2(rc, (r1 - lc) / (kc + 1));
        }
      }
      if (!(da1 > epsilon3))
        context.moveTo(x01, y01);
      else if (rc1 > epsilon3) {
        t03 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
        t13 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);
        context.moveTo(t03.cx + t03.x01, t03.cy + t03.y01);
        if (rc1 < rc)
          context.arc(t03.cx, t03.cy, rc1, atan2(t03.y01, t03.x01), atan2(t13.y01, t13.x01), !cw);
        else {
          context.arc(t03.cx, t03.cy, rc1, atan2(t03.y01, t03.x01), atan2(t03.y11, t03.x11), !cw);
          context.arc(0, 0, r1, atan2(t03.cy + t03.y11, t03.cx + t03.x11), atan2(t13.cy + t13.y11, t13.cx + t13.x11), !cw);
          context.arc(t13.cx, t13.cy, rc1, atan2(t13.y11, t13.x11), atan2(t13.y01, t13.x01), !cw);
        }
      } else
        context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);
      if (!(r0 > epsilon3) || !(da0 > epsilon3))
        context.lineTo(x10, y10);
      else if (rc0 > epsilon3) {
        t03 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
        t13 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);
        context.lineTo(t03.cx + t03.x01, t03.cy + t03.y01);
        if (rc0 < rc)
          context.arc(t03.cx, t03.cy, rc0, atan2(t03.y01, t03.x01), atan2(t13.y01, t13.x01), !cw);
        else {
          context.arc(t03.cx, t03.cy, rc0, atan2(t03.y01, t03.x01), atan2(t03.y11, t03.x11), !cw);
          context.arc(0, 0, r0, atan2(t03.cy + t03.y11, t03.cx + t03.x11), atan2(t13.cy + t13.y11, t13.cx + t13.x11), cw);
          context.arc(t13.cx, t13.cy, rc0, atan2(t13.y11, t13.x11), atan2(t13.y01, t13.x01), !cw);
        }
      } else
        context.arc(0, 0, r0, a10, a00, cw);
    }
    context.closePath();
    if (buffer)
      return context = null, buffer + "" || null;
  }
  arc.centroid = function() {
    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a2 = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi2 / 2;
    return [cos(a2) * r, sin(a2) * r];
  };
  arc.innerRadius = function(_4) {
    return arguments.length ? (innerRadius = typeof _4 === "function" ? _4 : constant_default3(+_4), arc) : innerRadius;
  };
  arc.outerRadius = function(_4) {
    return arguments.length ? (outerRadius = typeof _4 === "function" ? _4 : constant_default3(+_4), arc) : outerRadius;
  };
  arc.cornerRadius = function(_4) {
    return arguments.length ? (cornerRadius = typeof _4 === "function" ? _4 : constant_default3(+_4), arc) : cornerRadius;
  };
  arc.padRadius = function(_4) {
    return arguments.length ? (padRadius = _4 == null ? null : typeof _4 === "function" ? _4 : constant_default3(+_4), arc) : padRadius;
  };
  arc.startAngle = function(_4) {
    return arguments.length ? (startAngle = typeof _4 === "function" ? _4 : constant_default3(+_4), arc) : startAngle;
  };
  arc.endAngle = function(_4) {
    return arguments.length ? (endAngle = typeof _4 === "function" ? _4 : constant_default3(+_4), arc) : endAngle;
  };
  arc.padAngle = function(_4) {
    return arguments.length ? (padAngle = typeof _4 === "function" ? _4 : constant_default3(+_4), arc) : padAngle;
  };
  arc.context = function(_4) {
    return arguments.length ? (context = _4 == null ? null : _4, arc) : context;
  };
  return arc;
}

// node_modules/d3-shape/src/curve/linear.js
function Linear(context) {
  this._context = context;
}
Linear.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x2, y2) : this._context.moveTo(x2, y2);
        break;
      case 1:
        this._point = 2;
      default:
        this._context.lineTo(x2, y2);
        break;
    }
  }
};
function linear_default(context) {
  return new Linear(context);
}

// node_modules/d3-shape/src/point.js
function x(p) {
  return p[0];
}
function y(p) {
  return p[1];
}

// node_modules/d3-shape/src/line.js
function line_default() {
  var x2 = x, y2 = y, defined = constant_default3(true), context = null, curve = linear_default, output = null;
  function line(data) {
    var i, n = data.length, d, defined0 = false, buffer;
    if (context == null)
      output = curve(buffer = path_default());
    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0)
          output.lineStart();
        else
          output.lineEnd();
      }
      if (defined0)
        output.point(+x2(d, i, data), +y2(d, i, data));
    }
    if (buffer)
      return output = null, buffer + "" || null;
  }
  line.x = function(_4) {
    return arguments.length ? (x2 = typeof _4 === "function" ? _4 : constant_default3(+_4), line) : x2;
  };
  line.y = function(_4) {
    return arguments.length ? (y2 = typeof _4 === "function" ? _4 : constant_default3(+_4), line) : y2;
  };
  line.defined = function(_4) {
    return arguments.length ? (defined = typeof _4 === "function" ? _4 : constant_default3(!!_4), line) : defined;
  };
  line.curve = function(_4) {
    return arguments.length ? (curve = _4, context != null && (output = curve(context)), line) : curve;
  };
  line.context = function(_4) {
    return arguments.length ? (_4 == null ? context = output = null : output = curve(context = _4), line) : context;
  };
  return line;
}

// node_modules/d3-shape/src/area.js
function area_default() {
  var x0 = x, x1 = null, y0 = constant_default3(0), y1 = y, defined = constant_default3(true), context = null, curve = linear_default, output = null;
  function area(data) {
    var i, j, k2, n = data.length, d, defined0 = false, buffer, x0z = new Array(n), y0z = new Array(n);
    if (context == null)
      output = curve(buffer = path_default());
    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) {
          j = i;
          output.areaStart();
          output.lineStart();
        } else {
          output.lineEnd();
          output.lineStart();
          for (k2 = i - 1; k2 >= j; --k2) {
            output.point(x0z[k2], y0z[k2]);
          }
          output.lineEnd();
          output.areaEnd();
        }
      }
      if (defined0) {
        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
      }
    }
    if (buffer)
      return output = null, buffer + "" || null;
  }
  function arealine() {
    return line_default().defined(defined).curve(curve).context(context);
  }
  area.x = function(_4) {
    return arguments.length ? (x0 = typeof _4 === "function" ? _4 : constant_default3(+_4), x1 = null, area) : x0;
  };
  area.x0 = function(_4) {
    return arguments.length ? (x0 = typeof _4 === "function" ? _4 : constant_default3(+_4), area) : x0;
  };
  area.x1 = function(_4) {
    return arguments.length ? (x1 = _4 == null ? null : typeof _4 === "function" ? _4 : constant_default3(+_4), area) : x1;
  };
  area.y = function(_4) {
    return arguments.length ? (y0 = typeof _4 === "function" ? _4 : constant_default3(+_4), y1 = null, area) : y0;
  };
  area.y0 = function(_4) {
    return arguments.length ? (y0 = typeof _4 === "function" ? _4 : constant_default3(+_4), area) : y0;
  };
  area.y1 = function(_4) {
    return arguments.length ? (y1 = _4 == null ? null : typeof _4 === "function" ? _4 : constant_default3(+_4), area) : y1;
  };
  area.lineX0 = area.lineY0 = function() {
    return arealine().x(x0).y(y0);
  };
  area.lineY1 = function() {
    return arealine().x(x0).y(y1);
  };
  area.lineX1 = function() {
    return arealine().x(x1).y(y0);
  };
  area.defined = function(_4) {
    return arguments.length ? (defined = typeof _4 === "function" ? _4 : constant_default3(!!_4), area) : defined;
  };
  area.curve = function(_4) {
    return arguments.length ? (curve = _4, context != null && (output = curve(context)), area) : curve;
  };
  area.context = function(_4) {
    return arguments.length ? (_4 == null ? context = output = null : output = curve(context = _4), area) : context;
  };
  return area;
}

// node_modules/d3-shape/src/descending.js
function descending_default2(a2, b) {
  return b < a2 ? -1 : b > a2 ? 1 : b >= a2 ? 0 : NaN;
}

// node_modules/d3-shape/src/identity.js
function identity_default3(d) {
  return d;
}

// node_modules/d3-shape/src/pie.js
function pie_default() {
  var value = identity_default3, sortValues = descending_default2, sort2 = null, startAngle = constant_default3(0), endAngle = constant_default3(tau2), padAngle = constant_default3(0);
  function pie(data) {
    var i, n = data.length, j, k2, sum3 = 0, index2 = new Array(n), arcs = new Array(n), a0 = +startAngle.apply(this, arguments), da = Math.min(tau2, Math.max(-tau2, endAngle.apply(this, arguments) - a0)), a1, p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)), pa = p * (da < 0 ? -1 : 1), v;
    for (i = 0; i < n; ++i) {
      if ((v = arcs[index2[i] = i] = +value(data[i], i, data)) > 0) {
        sum3 += v;
      }
    }
    if (sortValues != null)
      index2.sort(function(i2, j2) {
        return sortValues(arcs[i2], arcs[j2]);
      });
    else if (sort2 != null)
      index2.sort(function(i2, j2) {
        return sort2(data[i2], data[j2]);
      });
    for (i = 0, k2 = sum3 ? (da - n * pa) / sum3 : 0; i < n; ++i, a0 = a1) {
      j = index2[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k2 : 0) + pa, arcs[j] = {
        data: data[j],
        index: i,
        value: v,
        startAngle: a0,
        endAngle: a1,
        padAngle: p
      };
    }
    return arcs;
  }
  pie.value = function(_4) {
    return arguments.length ? (value = typeof _4 === "function" ? _4 : constant_default3(+_4), pie) : value;
  };
  pie.sortValues = function(_4) {
    return arguments.length ? (sortValues = _4, sort2 = null, pie) : sortValues;
  };
  pie.sort = function(_4) {
    return arguments.length ? (sort2 = _4, sortValues = null, pie) : sort2;
  };
  pie.startAngle = function(_4) {
    return arguments.length ? (startAngle = typeof _4 === "function" ? _4 : constant_default3(+_4), pie) : startAngle;
  };
  pie.endAngle = function(_4) {
    return arguments.length ? (endAngle = typeof _4 === "function" ? _4 : constant_default3(+_4), pie) : endAngle;
  };
  pie.padAngle = function(_4) {
    return arguments.length ? (padAngle = typeof _4 === "function" ? _4 : constant_default3(+_4), pie) : padAngle;
  };
  return pie;
}

// node_modules/d3-shape/src/curve/radial.js
var curveRadialLinear = curveRadial(linear_default);
function Radial(curve) {
  this._curve = curve;
}
Radial.prototype = {
  areaStart: function() {
    this._curve.areaStart();
  },
  areaEnd: function() {
    this._curve.areaEnd();
  },
  lineStart: function() {
    this._curve.lineStart();
  },
  lineEnd: function() {
    this._curve.lineEnd();
  },
  point: function(a2, r) {
    this._curve.point(r * Math.sin(a2), r * -Math.cos(a2));
  }
};
function curveRadial(curve) {
  function radial2(context) {
    return new Radial(curve(context));
  }
  radial2._curve = curve;
  return radial2;
}

// node_modules/d3-shape/src/array.js
var slice2 = Array.prototype.slice;

// node_modules/d3-shape/src/symbol/circle.js
var circle_default = {
  draw: function(context, size) {
    var r = Math.sqrt(size / pi2);
    context.moveTo(r, 0);
    context.arc(0, 0, r, 0, tau2);
  }
};

// node_modules/d3-shape/src/symbol/diamond.js
var tan30 = Math.sqrt(1 / 3);
var tan30_2 = tan30 * 2;

// node_modules/d3-shape/src/symbol/star.js
var kr = Math.sin(pi2 / 10) / Math.sin(7 * pi2 / 10);
var kx = Math.sin(tau2 / 10) * kr;
var ky = -Math.cos(tau2 / 10) * kr;

// node_modules/d3-shape/src/symbol/triangle.js
var sqrt3 = Math.sqrt(3);

// node_modules/d3-shape/src/symbol/wye.js
var s = Math.sqrt(3) / 2;
var k = 1 / Math.sqrt(12);
var a = (k / 2 + 1) * 3;

// node_modules/d3-shape/src/symbol.js
function symbol_default() {
  var type = constant_default3(circle_default), size = constant_default3(64), context = null;
  function symbol() {
    var buffer;
    if (!context)
      context = buffer = path_default();
    type.apply(this, arguments).draw(context, +size.apply(this, arguments));
    if (buffer)
      return context = null, buffer + "" || null;
  }
  symbol.type = function(_4) {
    return arguments.length ? (type = typeof _4 === "function" ? _4 : constant_default3(_4), symbol) : type;
  };
  symbol.size = function(_4) {
    return arguments.length ? (size = typeof _4 === "function" ? _4 : constant_default3(+_4), symbol) : size;
  };
  symbol.context = function(_4) {
    return arguments.length ? (context = _4 == null ? null : _4, symbol) : context;
  };
  return symbol;
}

// node_modules/d3-shape/src/noop.js
function noop_default() {
}

// node_modules/d3-shape/src/curve/basis.js
function point2(that, x2, y2) {
  that._context.bezierCurveTo(
    (2 * that._x0 + that._x1) / 3,
    (2 * that._y0 + that._y1) / 3,
    (that._x0 + 2 * that._x1) / 3,
    (that._y0 + 2 * that._y1) / 3,
    (that._x0 + 4 * that._x1 + x2) / 6,
    (that._y0 + 4 * that._y1 + y2) / 6
  );
}
function Basis(context) {
  this._context = context;
}
Basis.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 3:
        point2(this, this._x1, this._y1);
      case 2:
        this._context.lineTo(this._x1, this._y1);
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x2, y2) : this._context.moveTo(x2, y2);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);
      default:
        point2(this, x2, y2);
        break;
    }
    this._x0 = this._x1, this._x1 = x2;
    this._y0 = this._y1, this._y1 = y2;
  }
};

// node_modules/d3-shape/src/curve/basisClosed.js
function BasisClosed(context) {
  this._context = context;
}
BasisClosed.prototype = {
  areaStart: noop_default,
  areaEnd: noop_default,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x2, this._y2);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);
        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x2, this._y2);
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        break;
      }
    }
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._x2 = x2, this._y2 = y2;
        break;
      case 1:
        this._point = 2;
        this._x3 = x2, this._y3 = y2;
        break;
      case 2:
        this._point = 3;
        this._x4 = x2, this._y4 = y2;
        this._context.moveTo((this._x0 + 4 * this._x1 + x2) / 6, (this._y0 + 4 * this._y1 + y2) / 6);
        break;
      default:
        point2(this, x2, y2);
        break;
    }
    this._x0 = this._x1, this._x1 = x2;
    this._y0 = this._y1, this._y1 = y2;
  }
};

// node_modules/d3-shape/src/curve/basisOpen.js
function BasisOpen(context) {
  this._context = context;
}
BasisOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 3)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        var x0 = (this._x0 + 4 * this._x1 + x2) / 6, y0 = (this._y0 + 4 * this._y1 + y2) / 6;
        this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0);
        break;
      case 3:
        this._point = 4;
      default:
        point2(this, x2, y2);
        break;
    }
    this._x0 = this._x1, this._x1 = x2;
    this._y0 = this._y1, this._y1 = y2;
  }
};

// node_modules/d3-shape/src/curve/bundle.js
function Bundle(context, beta) {
  this._basis = new Basis(context);
  this._beta = beta;
}
Bundle.prototype = {
  lineStart: function() {
    this._x = [];
    this._y = [];
    this._basis.lineStart();
  },
  lineEnd: function() {
    var x2 = this._x, y2 = this._y, j = x2.length - 1;
    if (j > 0) {
      var x0 = x2[0], y0 = y2[0], dx = x2[j] - x0, dy = y2[j] - y0, i = -1, t;
      while (++i <= j) {
        t = i / j;
        this._basis.point(
          this._beta * x2[i] + (1 - this._beta) * (x0 + t * dx),
          this._beta * y2[i] + (1 - this._beta) * (y0 + t * dy)
        );
      }
    }
    this._x = this._y = null;
    this._basis.lineEnd();
  },
  point: function(x2, y2) {
    this._x.push(+x2);
    this._y.push(+y2);
  }
};
var bundle_default = function custom(beta) {
  function bundle(context) {
    return beta === 1 ? new Basis(context) : new Bundle(context, beta);
  }
  bundle.beta = function(beta2) {
    return custom(+beta2);
  };
  return bundle;
}(0.85);

// node_modules/d3-shape/src/curve/cardinal.js
function point3(that, x2, y2) {
  that._context.bezierCurveTo(
    that._x1 + that._k * (that._x2 - that._x0),
    that._y1 + that._k * (that._y2 - that._y0),
    that._x2 + that._k * (that._x1 - x2),
    that._y2 + that._k * (that._y1 - y2),
    that._x2,
    that._y2
  );
}
function Cardinal(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}
Cardinal.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);
        break;
      case 3:
        point3(this, this._x1, this._y1);
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x2, y2) : this._context.moveTo(x2, y2);
        break;
      case 1:
        this._point = 2;
        this._x1 = x2, this._y1 = y2;
        break;
      case 2:
        this._point = 3;
      default:
        point3(this, x2, y2);
        break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x2;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y2;
  }
};
var cardinal_default = function custom2(tension) {
  function cardinal(context) {
    return new Cardinal(context, tension);
  }
  cardinal.tension = function(tension2) {
    return custom2(+tension2);
  };
  return cardinal;
}(0);

// node_modules/d3-shape/src/curve/cardinalClosed.js
function CardinalClosed(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}
CardinalClosed.prototype = {
  areaStart: noop_default,
  areaEnd: noop_default,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.lineTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        this.point(this._x5, this._y5);
        break;
      }
    }
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x2, this._y3 = y2;
        break;
      case 1:
        this._point = 2;
        this._context.moveTo(this._x4 = x2, this._y4 = y2);
        break;
      case 2:
        this._point = 3;
        this._x5 = x2, this._y5 = y2;
        break;
      default:
        point3(this, x2, y2);
        break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x2;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y2;
  }
};
var cardinalClosed_default = function custom3(tension) {
  function cardinal(context) {
    return new CardinalClosed(context, tension);
  }
  cardinal.tension = function(tension2) {
    return custom3(+tension2);
  };
  return cardinal;
}(0);

// node_modules/d3-shape/src/curve/cardinalOpen.js
function CardinalOpen(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}
CardinalOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 3)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;
      case 3:
        this._point = 4;
      default:
        point3(this, x2, y2);
        break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x2;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y2;
  }
};
var cardinalOpen_default = function custom4(tension) {
  function cardinal(context) {
    return new CardinalOpen(context, tension);
  }
  cardinal.tension = function(tension2) {
    return custom4(+tension2);
  };
  return cardinal;
}(0);

// node_modules/d3-shape/src/curve/catmullRom.js
function point4(that, x2, y2) {
  var x1 = that._x1, y1 = that._y1, x22 = that._x2, y22 = that._y2;
  if (that._l01_a > epsilon3) {
    var a2 = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a, n = 3 * that._l01_a * (that._l01_a + that._l12_a);
    x1 = (x1 * a2 - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
    y1 = (y1 * a2 - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
  }
  if (that._l23_a > epsilon3) {
    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a, m = 3 * that._l23_a * (that._l23_a + that._l12_a);
    x22 = (x22 * b + that._x1 * that._l23_2a - x2 * that._l12_2a) / m;
    y22 = (y22 * b + that._y1 * that._l23_2a - y2 * that._l12_2a) / m;
  }
  that._context.bezierCurveTo(x1, y1, x22, y22, that._x2, that._y2);
}
function CatmullRom(context, alpha2) {
  this._context = context;
  this._alpha = alpha2;
}
CatmullRom.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);
        break;
      case 3:
        this.point(this._x2, this._y2);
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    if (this._point) {
      var x23 = this._x2 - x2, y23 = this._y2 - y2;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x2, y2) : this._context.moveTo(x2, y2);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
      default:
        point4(this, x2, y2);
        break;
    }
    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x2;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y2;
  }
};
var catmullRom_default = function custom5(alpha2) {
  function catmullRom(context) {
    return alpha2 ? new CatmullRom(context, alpha2) : new Cardinal(context, 0);
  }
  catmullRom.alpha = function(alpha3) {
    return custom5(+alpha3);
  };
  return catmullRom;
}(0.5);

// node_modules/d3-shape/src/curve/catmullRomClosed.js
function CatmullRomClosed(context, alpha2) {
  this._context = context;
  this._alpha = alpha2;
}
CatmullRomClosed.prototype = {
  areaStart: noop_default,
  areaEnd: noop_default,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.lineTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        this.point(this._x5, this._y5);
        break;
      }
    }
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    if (this._point) {
      var x23 = this._x2 - x2, y23 = this._y2 - y2;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }
    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x2, this._y3 = y2;
        break;
      case 1:
        this._point = 2;
        this._context.moveTo(this._x4 = x2, this._y4 = y2);
        break;
      case 2:
        this._point = 3;
        this._x5 = x2, this._y5 = y2;
        break;
      default:
        point4(this, x2, y2);
        break;
    }
    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x2;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y2;
  }
};
var catmullRomClosed_default = function custom6(alpha2) {
  function catmullRom(context) {
    return alpha2 ? new CatmullRomClosed(context, alpha2) : new CardinalClosed(context, 0);
  }
  catmullRom.alpha = function(alpha3) {
    return custom6(+alpha3);
  };
  return catmullRom;
}(0.5);

// node_modules/d3-shape/src/curve/catmullRomOpen.js
function CatmullRomOpen(context, alpha2) {
  this._context = context;
  this._alpha = alpha2;
}
CatmullRomOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 3)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    if (this._point) {
      var x23 = this._x2 - x2, y23 = this._y2 - y2;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }
    switch (this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;
      case 3:
        this._point = 4;
      default:
        point4(this, x2, y2);
        break;
    }
    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x2;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y2;
  }
};
var catmullRomOpen_default = function custom7(alpha2) {
  function catmullRom(context) {
    return alpha2 ? new CatmullRomOpen(context, alpha2) : new CardinalOpen(context, 0);
  }
  catmullRom.alpha = function(alpha3) {
    return custom7(+alpha3);
  };
  return catmullRom;
}(0.5);

// node_modules/d3-shape/src/curve/linearClosed.js
function LinearClosed(context) {
  this._context = context;
}
LinearClosed.prototype = {
  areaStart: noop_default,
  areaEnd: noop_default,
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._point)
      this._context.closePath();
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    if (this._point)
      this._context.lineTo(x2, y2);
    else
      this._point = 1, this._context.moveTo(x2, y2);
  }
};

// node_modules/d3-shape/src/curve/monotone.js
function sign(x2) {
  return x2 < 0 ? -1 : 1;
}
function slope3(that, x2, y2) {
  var h0 = that._x1 - that._x0, h1 = x2 - that._x1, s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0), s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0), p = (s0 * h1 + s1 * h0) / (h0 + h1);
  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
}
function slope2(that, t) {
  var h = that._x1 - that._x0;
  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
}
function point5(that, t03, t13) {
  var x0 = that._x0, y0 = that._y0, x1 = that._x1, y1 = that._y1, dx = (x1 - x0) / 3;
  that._context.bezierCurveTo(x0 + dx, y0 + dx * t03, x1 - dx, y1 - dx * t13, x1, y1);
}
function MonotoneX(context) {
  this._context = context;
}
MonotoneX.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x1, this._y1);
        break;
      case 3:
        point5(this, this._t0, slope2(this, this._t0));
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    var t13 = NaN;
    x2 = +x2, y2 = +y2;
    if (x2 === this._x1 && y2 === this._y1)
      return;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x2, y2) : this._context.moveTo(x2, y2);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        point5(this, slope2(this, t13 = slope3(this, x2, y2)), t13);
        break;
      default:
        point5(this, this._t0, t13 = slope3(this, x2, y2));
        break;
    }
    this._x0 = this._x1, this._x1 = x2;
    this._y0 = this._y1, this._y1 = y2;
    this._t0 = t13;
  }
};
function MonotoneY(context) {
  this._context = new ReflectContext(context);
}
(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x2, y2) {
  MonotoneX.prototype.point.call(this, y2, x2);
};
function ReflectContext(context) {
  this._context = context;
}
ReflectContext.prototype = {
  moveTo: function(x2, y2) {
    this._context.moveTo(y2, x2);
  },
  closePath: function() {
    this._context.closePath();
  },
  lineTo: function(x2, y2) {
    this._context.lineTo(y2, x2);
  },
  bezierCurveTo: function(x1, y1, x2, y2, x3, y3) {
    this._context.bezierCurveTo(y1, x1, y2, x2, y3, x3);
  }
};
function monotoneX(context) {
  return new MonotoneX(context);
}
function monotoneY(context) {
  return new MonotoneY(context);
}

// node_modules/d3-shape/src/curve/natural.js
function Natural(context) {
  this._context = context;
}
Natural.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = [];
    this._y = [];
  },
  lineEnd: function() {
    var x2 = this._x, y2 = this._y, n = x2.length;
    if (n) {
      this._line ? this._context.lineTo(x2[0], y2[0]) : this._context.moveTo(x2[0], y2[0]);
      if (n === 2) {
        this._context.lineTo(x2[1], y2[1]);
      } else {
        var px = controlPoints(x2), py = controlPoints(y2);
        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {
          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x2[i1], y2[i1]);
        }
      }
    }
    if (this._line || this._line !== 0 && n === 1)
      this._context.closePath();
    this._line = 1 - this._line;
    this._x = this._y = null;
  },
  point: function(x2, y2) {
    this._x.push(+x2);
    this._y.push(+y2);
  }
};
function controlPoints(x2) {
  var i, n = x2.length - 1, m, a2 = new Array(n), b = new Array(n), r = new Array(n);
  a2[0] = 0, b[0] = 2, r[0] = x2[0] + 2 * x2[1];
  for (i = 1; i < n - 1; ++i)
    a2[i] = 1, b[i] = 4, r[i] = 4 * x2[i] + 2 * x2[i + 1];
  a2[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x2[n - 1] + x2[n];
  for (i = 1; i < n; ++i)
    m = a2[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];
  a2[n - 1] = r[n - 1] / b[n - 1];
  for (i = n - 2; i >= 0; --i)
    a2[i] = (r[i] - a2[i + 1]) / b[i];
  b[n - 1] = (x2[n] + a2[n - 1]) / 2;
  for (i = 0; i < n - 1; ++i)
    b[i] = 2 * x2[i + 1] - a2[i + 1];
  return [a2, b];
}

// node_modules/d3-shape/src/curve/step.js
function Step(context, t) {
  this._context = context;
  this._t = t;
}
Step.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = this._y = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (0 < this._t && this._t < 1 && this._point === 2)
      this._context.lineTo(this._x, this._y);
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    if (this._line >= 0)
      this._t = 1 - this._t, this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x2, y2) : this._context.moveTo(x2, y2);
        break;
      case 1:
        this._point = 2;
      default: {
        if (this._t <= 0) {
          this._context.lineTo(this._x, y2);
          this._context.lineTo(x2, y2);
        } else {
          var x1 = this._x * (1 - this._t) + x2 * this._t;
          this._context.lineTo(x1, this._y);
          this._context.lineTo(x1, y2);
        }
        break;
      }
    }
    this._x = x2, this._y = y2;
  }
};

// node_modules/d3-shape/src/offset/none.js
function none_default(series2, order) {
  if (!((n = series2.length) > 1))
    return;
  for (var i = 1, j, s0, s1 = series2[order[0]], n, m = s1.length; i < n; ++i) {
    s0 = s1, s1 = series2[order[i]];
    for (j = 0; j < m; ++j) {
      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
    }
  }
}

// node_modules/d3-shape/src/order/none.js
function none_default2(series2) {
  var n = series2.length, o = new Array(n);
  while (--n >= 0)
    o[n] = n;
  return o;
}

// node_modules/d3-shape/src/stack.js
function stackValue(d, key) {
  return d[key];
}
function stack_default() {
  var keys = constant_default3([]), order = none_default2, offset = none_default, value = stackValue;
  function stack(data) {
    var kz = keys.apply(this, arguments), i, m = data.length, n = kz.length, sz = new Array(n), oz;
    for (i = 0; i < n; ++i) {
      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {
        si[j] = sij = [0, +value(data[j], ki, j, data)];
        sij.data = data[j];
      }
      si.key = ki;
    }
    for (i = 0, oz = order(sz); i < n; ++i) {
      sz[oz[i]].index = i;
    }
    offset(sz, oz);
    return sz;
  }
  stack.keys = function(_4) {
    return arguments.length ? (keys = typeof _4 === "function" ? _4 : constant_default3(slice2.call(_4)), stack) : keys;
  };
  stack.value = function(_4) {
    return arguments.length ? (value = typeof _4 === "function" ? _4 : constant_default3(+_4), stack) : value;
  };
  stack.order = function(_4) {
    return arguments.length ? (order = _4 == null ? none_default2 : typeof _4 === "function" ? _4 : constant_default3(slice2.call(_4)), stack) : order;
  };
  stack.offset = function(_4) {
    return arguments.length ? (offset = _4 == null ? none_default : _4, stack) : offset;
  };
  return stack;
}

// node_modules/d3-shape/src/offset/diverging.js
function diverging_default(series2, order) {
  if (!((n = series2.length) > 0))
    return;
  for (var i, j = 0, d, dy, yp, yn, n, m = series2[order[0]].length; j < m; ++j) {
    for (yp = yn = 0, i = 0; i < n; ++i) {
      if ((dy = (d = series2[order[i]][j])[1] - d[0]) > 0) {
        d[0] = yp, d[1] = yp += dy;
      } else if (dy < 0) {
        d[1] = yn, d[0] = yn += dy;
      } else {
        d[0] = 0, d[1] = dy;
      }
    }
  }
}

// node_modules/@devexpress/dx-chart-core/dist/dx-chart-core.es.js
var __assign2 = function() {
  __assign2 = Object.assign || function __assign4(t) {
    for (var s2, i = 1, n = arguments.length; i < n; i++) {
      s2 = arguments[i];
      for (var p in s2)
        if (Object.prototype.hasOwnProperty.call(s2, p))
          t[p] = s2[p];
    }
    return t;
  };
  return __assign2.apply(this, arguments);
};
function __rest2(s2, e) {
  var t = {};
  for (var p in s2)
    if (Object.prototype.hasOwnProperty.call(s2, p) && e.indexOf(p) < 0)
      t[p] = s2[p];
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s2); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i]))
        t[p[i]] = s2[p[i]];
    }
  return t;
}
function __read3(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error) {
    e = { error };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
}
function __spreadArray3(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || from);
}
var TOP = "top";
var BOTTOM = "bottom";
var LEFT = "left";
var RIGHT = "right";
var MIDDLE = "middle";
var END = "end";
var START = "start";
var ARGUMENT_DOMAIN = "argument-domain";
var VALUE_DOMAIN = "value-domain";
var HOVERED = "hovered";
var SELECTED = "selected";
var DIFFERENCE = 3;
var scaleLinear = linear2;
var scaleBand = function() {
  return band().paddingInner(0.3).paddingOuter(0.15);
};
var isHorizontal = function(name, rotated) {
  return name === ARGUMENT_DOMAIN === !rotated;
};
var makeScaleHelper = function(linear3, band2) {
  var func = function(scale) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
      args[_i - 1] = arguments[_i];
    }
    var choosen = "bandwidth" in scale ? band2 : linear3;
    return choosen.apply(void 0, __spreadArray3([scale], __read3(args), false));
  };
  return func;
};
var getLinearScaleWidth = function(_4) {
  return 0;
};
var getBandScaleWidth = function(scale) {
  return scale.bandwidth();
};
var getWidth = makeScaleHelper(getLinearScaleWidth, getBandScaleWidth);
var getValueDomainName = function(name) {
  return name || VALUE_DOMAIN;
};
var floatsEqual = function(a2, b) {
  return Math.abs(a2 - b) < Number.EPSILON;
};
var rangesEqual = function(r1, r2) {
  return floatsEqual(r1[0], r2[0]) && floatsEqual(r1[1], r2[1]);
};
var wrapLinearScale = function(scale) {
  return scale;
};
var wrapBandScale = function(scale) {
  var ret = function(value) {
    return scale(value) + scale.bandwidth() / 2;
  };
  Object.assign(ret, scale);
  return ret;
};
var wrapScale = makeScaleHelper(wrapLinearScale, wrapBandScale);
var makeScale = function(_a3, range) {
  var factory = _a3.factory, domain = _a3.domain;
  var scale = (factory || scaleLinear)().domain(domain).range(range);
  return wrapScale(scale);
};
var scaleLinearBounds = function(scale, bounds) {
  return bounds.map(scale);
};
var scaleBandBounds = function(scale, bounds) {
  var cleanScale = scale.copy().paddingInner(0).paddingOuter(0);
  var fullRange = scale.range();
  var sign2 = Math.sign(fullRange[1] - fullRange[0]);
  return sign2 >= 0 ? [cleanScale(bounds[0]), cleanScale(bounds[1]) + cleanScale.bandwidth()] : [cleanScale(bounds[0]) + cleanScale.bandwidth(), cleanScale(bounds[1])];
};
var moveLinearScaleBounds = function(scale, bounds, delta) {
  var fullRange = scale.range();
  var sign2 = Math.sign(fullRange[1] - fullRange[0]);
  var range = scaleLinearBounds(scale, bounds);
  var r0 = range[0] + delta;
  var r1 = range[1] + delta;
  if (Math.sign(r0 - fullRange[0]) !== sign2) {
    r0 = fullRange[0];
    r1 = r0 + range[1] - range[0];
  }
  if (Math.sign(fullRange[1] - r1) !== sign2) {
    r1 = fullRange[1];
    r0 = r1 - range[1] + range[0];
  }
  var newBounds = [scale.invert(r0), scale.invert(r1)];
  return rangesEqual(bounds, newBounds) ? bounds : newBounds;
};
var adjustBandScaleMoveStep = function(delta, step) {
  var ratio = Math.abs(delta / step);
  var sign2 = Math.sign(delta / step);
  if (ratio >= 0.5) {
    return sign2 * Math.round(ratio);
  }
  if (ratio >= 0.3) {
    return sign2;
  }
  if (Math.abs(delta) > 30) {
    return sign2;
  }
  return 0;
};
var moveBandScaleBounds = function(scale, bounds, delta) {
  var domain = scale.domain();
  var fullRange = scale.range();
  var step = (fullRange[1] - fullRange[0]) / domain.length;
  var rangeStep = adjustBandScaleMoveStep(delta, step);
  if (rangeStep === 0) {
    return bounds;
  }
  var range = scaleBounds(scale, bounds);
  var range0 = Math.round((range[0] - fullRange[0]) / step);
  var range1 = range0 + Math.round((range[1] - range[0]) / step) - 1;
  var new0 = range0 + rangeStep;
  var new1 = range1 + rangeStep;
  if (new0 < 0) {
    new0 = 0;
    new1 = new0 + range1 - range0;
  }
  if (new1 > domain.length - 1) {
    new1 = domain.length - 1;
    new0 = new1 - range1 + range0;
  }
  if (new0 === range0 || new1 === range1) {
    return bounds;
  }
  return [domain[new0], domain[new1]];
};
var LINEAR_SCALE_ZOOMING_THRESHOLD = 1e3;
var growLinearScaleBounds = function(scale, bounds, delta, anchor) {
  var fullRange = scale.range();
  var minRangeThreshold = (fullRange[1] - fullRange[0]) / LINEAR_SCALE_ZOOMING_THRESHOLD;
  var sign2 = Math.sign(fullRange[1] - fullRange[0]);
  var range = scaleBounds(scale, bounds);
  if (delta > 0 && Math.abs(range[1] - range[0]) <= Math.abs(minRangeThreshold)) {
    return bounds;
  }
  if (delta < 0 && Math.abs(range[1] - range[0]) >= Math.abs(fullRange[1] - fullRange[0])) {
    return bounds;
  }
  var t = Math.abs((anchor - range[0]) / (range[1] - range[0]));
  var r0 = range[0] + sign2 * delta * 2 * t;
  var r1 = range[1] - sign2 * delta * 2 * (1 - t);
  if (Math.sign(r0 - fullRange[0]) !== sign2) {
    r0 = fullRange[0];
  }
  if (Math.sign(fullRange[1] - r1) !== sign2) {
    r1 = fullRange[1];
  }
  if (Math.sign(r1 - r0) !== sign2 || Math.abs(r1 - r0) < Math.abs(minRangeThreshold)) {
    if (Math.abs(r0 - range[0]) < Math.abs(minRangeThreshold / 2)) {
      r0 = range[0];
      r1 = r0 + minRangeThreshold;
    } else if (Math.abs(r1 - range[1]) < Math.abs(minRangeThreshold / 2)) {
      r1 = range[1];
      r0 = r1 - minRangeThreshold;
    } else {
      r0 = anchor - minRangeThreshold / 2;
      r1 = anchor + minRangeThreshold / 2;
    }
  }
  var newBounds = [scale.invert(r0), scale.invert(r1)];
  return rangesEqual(bounds, newBounds) ? bounds : newBounds;
};
var growBandScaleBounds = function(scale, bounds, delta, anchor) {
  var domain = scale.domain();
  var fullRange = scale.range();
  var step = (fullRange[1] - fullRange[0]) / domain.length;
  var range = scaleBounds(scale, bounds);
  var range0 = Math.round((range[0] - fullRange[0]) / step);
  var range1 = range0 + Math.round((range[1] - range[0]) / step) - 1;
  var rangeStep = Math.sign(delta);
  if (rangeStep === 0 || rangeStep > 0 && range0 === range1 || rangeStep < 0 && range0 === 0 && range1 === domain.length - 1) {
    return bounds;
  }
  var t = Math.abs((anchor - range[0]) / (range[1] - range[0]));
  var new0 = range0 + Math.round(rangeStep * 2 * t);
  var new1 = range1 - Math.round(rangeStep * 2 * (1 - t));
  if (new0 < 0) {
    new0 = 0;
  }
  if (new1 > domain.length - 1) {
    new1 = domain.length - 1;
  }
  if (new0 > new1) {
    if (t <= 0.5) {
      new1 = new0;
    } else {
      new0 = new1;
    }
  }
  if (new0 === range0 && new1 === range1) {
    return bounds;
  }
  return [domain[new0], domain[new1]];
};
var invertLinearScaleBounds = function(scale, range) {
  var fullRange = scale.range();
  var match = Math.sign(fullRange[1] - fullRange[0]) === Math.sign(range[1] - range[0]);
  return [
    scale.invert(range[match ? 0 : 1]),
    scale.invert(range[match ? 1 : 0])
  ];
};
var matchPointToBand = function(domain, range, p) {
  var i = Math.floor(domain.length * (p - range[0]) / (range[1] - range[0]));
  return domain[Math.min(i, domain.length - 1)];
};
var invertBandScaleBounds = function(scale, range) {
  var domain = scale.domain();
  var fullRange = scale.range();
  return [
    matchPointToBand(domain, fullRange, range[0]),
    matchPointToBand(domain, fullRange, range[1])
  ];
};
var scaleBounds = makeScaleHelper(scaleLinearBounds, scaleBandBounds);
var moveBounds = makeScaleHelper(moveLinearScaleBounds, moveBandScaleBounds);
var growBounds = makeScaleHelper(growLinearScaleBounds, growBandScaleBounds);
var invertBoundsRange = makeScaleHelper(invertLinearScaleBounds, invertBandScaleBounds);
var _a;
var makeDomain = function(_a3) {
  var factory = _a3.factory, modifyDomain = _a3.modifyDomain;
  return {
    domain: [],
    factory,
    isDiscrete: !!(factory && isDiscrete(factory)),
    modifyDomain
  };
};
var defaultDomains = (_a = {}, _a[ARGUMENT_DOMAIN] = makeDomain({}), _a[VALUE_DOMAIN] = makeDomain({}), _a);
var addDomain = function(domains, name, options) {
  var _a3;
  return __assign2(__assign2({}, domains), (_a3 = {}, _a3[name] = makeDomain(options), _a3));
};
var mergeContinuousDomains = function(domain, items) {
  var newDomain = extent_default(__spreadArray3(__spreadArray3([], __read3(domain), false), __read3(items), false));
  return rangesEqual(newDomain, domain) ? domain : newDomain;
};
var mergeDiscreteDomains = function(domain, items) {
  var newDomain = Array.from(new Set(__spreadArray3(__spreadArray3([], __read3(domain), false), __read3(items), false)));
  return newDomain.length === domain.length ? domain : newDomain;
};
var getArgument = function(point6) {
  return point6.argument;
};
var getValue2 = function(point6) {
  return point6.value;
};
var guessFactory = function(points, getItem) {
  return points.length && typeof getItem(points[0]) === "string" ? scaleBand : scaleLinear;
};
var isDiscrete = function(factory) {
  return "bandwidth" in factory();
};
var updateDomainFactory = function(domain, series2, getItem) {
  if (domain.factory) {
    return domain;
  }
  var factory = guessFactory(series2.points, getItem);
  return __assign2(__assign2({}, domain), { factory, isDiscrete: isDiscrete(factory) });
};
var updateDomainItems = function(domain, items) {
  var merge2 = domain.isDiscrete ? mergeDiscreteDomains : mergeContinuousDomains;
  var merged = merge2(domain.domain, items);
  return merged === domain.domain ? domain : __assign2(__assign2({}, domain), { domain: domain.modifyDomain ? domain.modifyDomain(merged) : merged });
};
var getArgumentDomainItems = function(series2) {
  return series2.points.map(getArgument);
};
var getValueDomainItems = function(series2) {
  var items = series2.points.map(getValue2);
  return series2.getPointTransformer.isStartedFromZero ? __spreadArray3([0], __read3(items), false) : items;
};
var updateDomain = function(domain, series2, getItem, getDomainItems) {
  return updateDomainItems(updateDomainFactory(domain, series2, getItem), getDomainItems(series2));
};
var extendDomains = function(domains, series2) {
  var argumentDomain = updateDomain(domains[ARGUMENT_DOMAIN], series2, getArgument, getArgumentDomainItems);
  var valueDomainName = getValueDomainName(series2.scaleName);
  var valueDomain = updateDomain(domains[valueDomainName], series2, getValue2, getValueDomainItems);
  var changes = {};
  if (argumentDomain !== domains[ARGUMENT_DOMAIN]) {
    changes[ARGUMENT_DOMAIN] = argumentDomain;
  }
  if (valueDomain !== domains[valueDomainName]) {
    changes[valueDomainName] = valueDomain;
  }
  return Object.keys(changes).length ? __assign2(__assign2({}, domains), changes) : domains;
};
var buildScales = function(domains, ranges) {
  var scales = {};
  Object.keys(domains).forEach(function(name) {
    scales[name] = makeScale(domains[name], ranges[name === ARGUMENT_DOMAIN ? ARGUMENT_DOMAIN : VALUE_DOMAIN]);
  });
  return scales;
};
var isEqual = function(_a3, _b2) {
  var firstWidth = _a3.width, firstHeight = _a3.height;
  var secondWidth = _b2.width, secondHeight = _b2.height;
  return firstWidth === secondWidth && firstHeight === secondHeight;
};
var bBoxes = function(prevBBoxes, _a3) {
  var _b2;
  var bBox = _a3.bBox, placeholder = _a3.placeholder;
  if (isEqual(prevBBoxes[placeholder] || {}, bBox))
    return prevBBoxes;
  return __assign2(__assign2({}, prevBBoxes), (_b2 = {}, _b2[placeholder] = bBox, _b2));
};
var getRanges = function(paneSize, rotated) {
  var _a3;
  var horRange = [0, paneSize.width];
  var verRange = [paneSize.height, 0];
  return _a3 = {}, _a3[ARGUMENT_DOMAIN] = rotated ? verRange : horRange, _a3[VALUE_DOMAIN] = rotated ? horRange : verRange, _a3;
};
var _a$1;
var _b;
var getTicks = function(scale, count2) {
  return scale.ticks ? scale.ticks(count2) : scale.domain();
};
var createTicks = function(scale, count2, callback) {
  return getTicks(scale, count2).map(function(tick, index2) {
    return callback(scale(tick), String(index2), tick);
  });
};
var getFormat = function(scale, count2, tickFormat2) {
  if (scale.tickFormat) {
    return tickFormat2 ? tickFormat2(scale, count2) : scale.tickFormat(count2);
  }
  return function(tick) {
    return tick;
  };
};
var rotatedPositions = (_a$1 = {}, _a$1[LEFT] = BOTTOM, _a$1[RIGHT] = TOP, _a$1[BOTTOM] = LEFT, _a$1[TOP] = RIGHT, _a$1);
var positionFlags = (_b = {}, _b[LEFT] = false, _b[RIGHT] = false, _b[BOTTOM] = true, _b[TOP] = true, _b);
var getRotatedPosition = function(position) {
  return rotatedPositions[position];
};
var isValidPosition = function(position, scaleName, rotated) {
  return positionFlags[position] === isHorizontal(scaleName, rotated);
};
var createHorizontalOptions = function(position, tickSize, indentFromAxis) {
  var isStart = position === BOTTOM;
  return {
    y1: 0,
    y2: isStart ? +tickSize : -tickSize,
    yText: isStart ? +indentFromAxis : -indentFromAxis,
    dy: isStart ? "1em" : "0em",
    textAnchor: MIDDLE
  };
};
var createVerticalOptions = function(position, tickSize, indentFromAxis) {
  var isStart = position === LEFT;
  return {
    x1: 0,
    x2: isStart ? -tickSize : +tickSize,
    xText: isStart ? -indentFromAxis : +indentFromAxis,
    dy: "0.3em",
    textAnchor: isStart ? END : START
  };
};
var DEFAULT_TICK_COUNT = 10;
var getTickCount = function(scaleRange, paneSize) {
  var rangeToPaneRatio = Math.abs(scaleRange[0] - scaleRange[1]) / paneSize;
  return Math.round(DEFAULT_TICK_COUNT * (isFinite(rangeToPaneRatio) ? rangeToPaneRatio : 1));
};
var createTickFilter = function(isHor, size) {
  return isHor ? function(tick) {
    return tick.x1 >= 0 && tick.x1 <= size;
  } : function(tick) {
    return tick.y1 >= 0 && tick.y1 <= size;
  };
};
var tickCoordinatesGetter = function(_a3) {
  var isHor = _a3.isHor, scale = _a3.scale, tickCount = _a3.tickCount, tickFormat2 = _a3.tickFormat, position = _a3.position, tickSize = _a3.tickSize, indentFromAxis = _a3.indentFromAxis;
  var formatTick = getFormat(scale, tickCount, tickFormat2);
  var options = (isHor ? createHorizontalOptions : createVerticalOptions)(position, tickSize, indentFromAxis);
  return function(coordinates, key, tick) {
    return __assign2({ key, x1: coordinates, x2: coordinates, y1: coordinates, y2: coordinates, xText: coordinates, yText: coordinates, text: formatTick(tick) }, options);
  };
};
var gridCoordinatesGetter = function(_a3) {
  var isHor = _a3.isHor;
  var options = isHor ? { y1: 0 } : { x1: 0 };
  return function(coordinates, key) {
    return __assign2({ key, x1: coordinates, y1: coordinates }, options);
  };
};
var getTickCoordinates = function(_a3) {
  var scaleName = _a3.scaleName, scale = _a3.scale, paneSize = _a3.paneSize, rotated = _a3.rotated, callback = _a3.callback, restProps = __rest2(_a3, ["scaleName", "scale", "paneSize", "rotated", "callback"]);
  var isHor = isHorizontal(scaleName, rotated);
  var tickCount = getTickCount(scale.range(), paneSize[1 - Number(isHor)]);
  var ticks = createTicks(scale, tickCount, callback(__assign2({ isHor, scale, tickCount }, restProps)));
  var visibleTicks = ticks.filter(createTickFilter(isHor, paneSize[1 - Number(isHor)]));
  return {
    ticks: visibleTicks,
    sides: [Number(isHor), Number(!isHor)]
  };
};
var getArg = function(_a3) {
  var arg = _a3.arg;
  return arg;
};
var getVal = function(_a3) {
  var val = _a3.val;
  return val;
};
var getStartVal = function(_a3) {
  var startVal = _a3.startVal;
  return startVal;
};
var dArea = area_default().x(getArg).y1(getVal).y0(getStartVal);
var dRotateArea = area_default().x1(getStartVal).x0(getVal).y(getArg);
var dLine = line_default().x(getArg).y(getVal);
var dRotateLine = line_default().x(getVal).y(getArg);
var dSpline = line_default().x(getArg).y(getVal).curve(monotoneX);
var dRotateSpline = line_default().x(getVal).y(getArg).curve(monotoneY);
var dBar = function(arg, val, startVal, width, rotated) {
  var height = Math.abs(val - startVal);
  var minVal = Math.min(val, startVal);
  return {
    x: rotated ? minVal : arg - width / 2,
    y: rotated ? arg - width / 2 : minVal,
    width: rotated ? height : width || 2,
    height: rotated ? width || 2 : height
  };
};
var getPiePointTransformer = function(_a3) {
  var argumentScale = _a3.argumentScale, valueScale = _a3.valueScale, points = _a3.points;
  var x2 = Math.max.apply(Math, __spreadArray3([], __read3(argumentScale.range()), false)) / 2;
  var y2 = Math.max.apply(Math, __spreadArray3([], __read3(valueScale.range()), false)) / 2;
  var maxRadius = Math.min(x2, y2);
  var pieData = pie_default().sort(null).value(function(d) {
    return d.value;
  })(points);
  return function(point6) {
    var _a4 = pieData[point6.index], startAngle = _a4.startAngle, endAngle = _a4.endAngle;
    return __assign2(__assign2({}, point6), { arg: x2, val: y2, startAngle, endAngle, maxRadius });
  };
};
var getLinePointTransformer = function(_a3) {
  var argumentScale = _a3.argumentScale, valueScale = _a3.valueScale;
  return function(point6) {
    return __assign2(__assign2({}, point6), { arg: argumentScale(point6.argument), val: valueScale(point6.value) });
  };
};
var getScatterPointTransformer = function() {
  var args = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }
  return getLinePointTransformer.apply(void 0, __spreadArray3([], __read3(args), false));
};
var getAreaPointTransformer = function(series2) {
  var transform = getLinePointTransformer(series2);
  var startVal = series2.valueScale(0);
  return function(point6) {
    var ret = transform(point6);
    return __assign2(__assign2({}, ret), { startVal });
  };
};
getAreaPointTransformer.isStartedFromZero = true;
var getBarPointTransformer = function(_a3) {
  var argumentScale = _a3.argumentScale, valueScale = _a3.valueScale;
  var startVal = valueScale(0);
  return function(point6) {
    return __assign2(__assign2({}, point6), { arg: argumentScale(point6.argument), val: valueScale(point6.value), startVal, maxBarWidth: getWidth(argumentScale) });
  };
};
getBarPointTransformer.isStartedFromZero = true;
getBarPointTransformer.isBroad = true;
getPiePointTransformer.getPointColor = function(palette2, index2) {
  return palette2[index2 % palette2.length];
};
var findSeriesByName = function(name, series2) {
  return series2.find(function(seriesItem) {
    return seriesItem.symbolName === name;
  });
};
var dSymbol = function(_a3) {
  var size = _a3.size;
  return symbol_default().size(Math.pow(size, 2)).type(circle_default)();
};
var dPie = function(maxRadius, innerRadius, outerRadius, startAngle, endAngle) {
  return arc_default()({
    startAngle,
    endAngle,
    innerRadius: innerRadius * maxRadius,
    outerRadius: outerRadius * maxRadius
  });
};
var getRect = function(cArg, cVal, dArg, dVal, rotated) {
  var minArg = cArg - dArg;
  var minVal = cVal - dVal;
  var maxArg = cArg + dArg;
  var maxVal = cVal + dVal;
  return rotated ? [minVal, minArg, maxVal, maxArg] : [minArg, minVal, maxArg, maxVal];
};
getBarPointTransformer.getTargetElement = function(point6) {
  var _a3 = point6, arg = _a3.arg, val = _a3.val, startVal = _a3.startVal, barWidth = _a3.barWidth, maxBarWidth = _a3.maxBarWidth, rotated = _a3.rotated;
  var halfWidth = barWidth * maxBarWidth / 2;
  var halfHeight = Math.abs(startVal - val) / 2;
  var centerVal = (val + startVal) / 2;
  return getRect(arg, centerVal, halfWidth, halfHeight, rotated);
};
getPiePointTransformer.getTargetElement = function(point6) {
  var _a3 = point6, x2 = _a3.arg, y2 = _a3.val, innerRadius = _a3.innerRadius, outerRadius = _a3.outerRadius, maxRadius = _a3.maxRadius, startAngle = _a3.startAngle, endAngle = _a3.endAngle;
  var center = arc_default().centroid({
    startAngle,
    endAngle,
    innerRadius: innerRadius * maxRadius,
    outerRadius: outerRadius * maxRadius
  });
  var cx = center[0] + x2;
  var cy = center[1] + y2;
  return getRect(cx, cy, 0.5, 0.5, false);
};
getAreaPointTransformer.getTargetElement = function(_a3) {
  var arg = _a3.arg, val = _a3.val, rotated = _a3.rotated;
  return getRect(arg, val, 1, 1, rotated);
};
getLinePointTransformer.getTargetElement = getAreaPointTransformer.getTargetElement;
getScatterPointTransformer.getTargetElement = function(obj) {
  var _a3 = obj, arg = _a3.arg, val = _a3.val, point6 = _a3.point, rotated = _a3.rotated;
  var t = point6.size / 2;
  return getRect(arg, val, t, t, rotated);
};
var getUniqueName = function(list, name) {
  var names = new Set(list.map(function(item) {
    return item.name;
  }));
  var ret = name;
  while (names.has(ret)) {
    ret = ret.replace(/\d*$/, function(str) {
      return str ? +str + 1 : 0;
    });
  }
  return ret;
};
var createPoints = function(_a3, data, props, palette2) {
  var argumentField = _a3.argumentField, valueField = _a3.valueField, getPointTransformer = _a3.getPointTransformer;
  var points = [];
  data.forEach(function(dataItem, index2) {
    var argument = dataItem[argumentField];
    var value = dataItem[valueField];
    if (argument !== void 0 && value !== void 0) {
      points.push(__assign2(__assign2({ argument, value, index: index2 }, props), { color: getPointTransformer.getPointColor ? getPointTransformer.getPointColor(palette2, index2) : props.color }));
    }
  });
  return points;
};
var addSeries = function(series2, data, palette2, props, restProps) {
  var index2 = series2.length;
  var seriesColor = props.color || palette2[index2 % palette2.length];
  return __spreadArray3(__spreadArray3([], __read3(series2), false), [__assign2(__assign2({}, props), { index: index2, name: getUniqueName(series2, props.name), points: createPoints(props, data, __assign2(__assign2({}, restProps), { color: seriesColor }), palette2), color: seriesColor })], false);
};
var scalePoints = function(series2, scales, rotated) {
  var transform = series2.getPointTransformer(__assign2(__assign2({}, series2), { argumentScale: scales[ARGUMENT_DOMAIN], valueScale: scales[getValueDomainName(series2.scaleName)] }));
  var ret = __assign2(__assign2({}, series2), { rotated, points: series2.points.map(function(point6) {
    return __assign2(__assign2({}, transform(point6)), { rotated });
  }) });
  return ret;
};
var scaleSeriesPoints = function(series2, scales, rotated) {
  return series2.map(function(seriesItem) {
    return scalePoints(seriesItem, scales, rotated);
  });
};
var getVisibility = function(pane, centerX, centerY, width, height) {
  return centerX - width / 2 < 0 && centerX + width / 2 < 0 || centerX - width / 2 > pane.width && centerX + width / 2 > pane.width || centerY - height / 2 < 0 && centerY + height / 2 < 0 || centerY - height / 2 > pane.height && centerY + height / 2 > pane.height ? "hidden" : "visible";
};
var adjustBarSize = function(bar, _a3) {
  var width = _a3.width, height = _a3.height;
  var x2 = Math.max(0, bar.x);
  var y2 = Math.max(0, bar.y);
  return {
    x: x2,
    y: y2,
    width: Math.min(width, bar.x + bar.width) - x2,
    height: Math.min(height, bar.y + bar.height) - y2
  };
};
var isValuesChanged = function(previous, current) {
  return Object.entries(previous).some(function(el) {
    return el[1] !== current[el[0]];
  });
};
var isCoordinatesChanged = function(_a3, _b2) {
  var prevCoordinates = _a3.coordinates;
  var coordinates = _b2.coordinates;
  if (prevCoordinates.length !== coordinates.length) {
    return true;
  }
  return prevCoordinates.some(function(el, index2) {
    return el.arg !== coordinates[index2].arg || el.val !== coordinates[index2].val;
  });
};
var isScalesChanged = function(previous, current) {
  return !rangesEqual(previous.argScale.range(), current.argScale.range()) || !rangesEqual(previous.valScale.range(), current.valScale.range());
};
var buildSeriesToStackMap = function(stacks) {
  var result = {};
  stacks.forEach(function(_a3, i) {
    var series2 = _a3.series;
    series2.forEach(function(name) {
      result[name] = i;
    });
  });
  return result;
};
var getStackedPointTransformer = function(getPointTransformer) {
  var wrapper = function(series2) {
    var transform = getPointTransformer(series2);
    var valueScale = series2.valueScale;
    return function(point6) {
      var ret = transform(point6);
      return __assign2(__assign2({}, ret), { startVal: valueScale(point6.value0) });
    };
  };
  Object.assign(wrapper, getPointTransformer);
  return wrapper;
};
var collectStacks = function(seriesList, seriesToStackMap, stacksKeys, seriesPositions) {
  seriesList.forEach(function(_a3) {
    var name = _a3.name, valueField = _a3.valueField;
    var stackId = seriesToStackMap[name];
    if (stackId === void 0) {
      return;
    }
    if (!stacksKeys[stackId]) {
      stacksKeys[stackId] = [];
    }
    seriesPositions[name] = stacksKeys[stackId].length;
    stacksKeys[stackId].push(valueField);
  });
  Object.keys(stacksKeys).forEach(function(stackId) {
    if (stacksKeys[stackId].length === 1) {
      delete stacksKeys[stackId];
    }
  });
};
var getStackedData = function(stacksKeys, dataItems, offset, order) {
  var result = {};
  Object.keys(stacksKeys).forEach(function(stackId) {
    result[stackId] = stack_default().keys(stacksKeys[stackId]).order(order).offset(offset)(dataItems);
  });
  return result;
};
var buildStackedSeries = function(series2, dataItems) {
  var points = series2.points.map(function(point6) {
    var _a3 = __read3(dataItems[point6.index], 2), value0 = _a3[0], value = _a3[1];
    return __assign2(__assign2({}, point6), { value, value0 });
  });
  var stackedSeries = __assign2(__assign2({}, series2), { points, isStacked: true });
  if (series2.getPointTransformer.isStartedFromZero) {
    stackedSeries.getPointTransformer = getStackedPointTransformer(series2.getPointTransformer);
  }
  return stackedSeries;
};
var applyStacking = function(seriesList, dataItems, seriesToStackMap, offset, order) {
  var stacksKeys = {};
  var seriesPositions = {};
  collectStacks(seriesList, seriesToStackMap, stacksKeys, seriesPositions);
  if (Object.keys(stacksKeys).length === 0) {
    return seriesList;
  }
  var stackedData = getStackedData(stacksKeys, dataItems, offset, order);
  return seriesList.map(function(seriesItem) {
    var stackId = seriesToStackMap[seriesItem.name];
    var stackData = stackedData[stackId];
    if (!stackData) {
      return seriesItem;
    }
    var position = seriesPositions[seriesItem.name];
    return buildStackedSeries(seriesItem, stackData[position]);
  });
};
var getGroupName = function(series2, i, seriesToStackMap) {
  var stackId = seriesToStackMap[series2.name];
  return stackId >= 0 ? String(stackId) : "group-".concat(i);
};
var getGroupedPointTransformer = function(getPointTransformer, groupCount, groupOffset) {
  var wrapper = function(series2) {
    var transform = getPointTransformer(series2);
    var widthCoeff = 1 / groupCount;
    return function(point6) {
      var original = transform(point6);
      var arg = original.arg - original.maxBarWidth * (0.5 - 0.5 * widthCoeff - groupOffset * widthCoeff);
      var result = __assign2(__assign2({}, original), { arg, maxBarWidth: original.maxBarWidth / groupCount });
      return result;
    };
  };
  Object.assign(wrapper, getPointTransformer);
  return wrapper;
};
var applyGrouping = function(seriesList, seriesToStackMap) {
  var groups2 = /* @__PURE__ */ new Set();
  seriesList.forEach(function(seriesItem, i) {
    if (seriesItem.getPointTransformer.isBroad) {
      groups2.add(getGroupName(seriesItem, i, seriesToStackMap));
    }
  });
  if (groups2.size < 2) {
    return seriesList;
  }
  var scale = band().domain(Array.from(groups2)).range([0, groups2.size]);
  return seriesList.map(function(seriesItem, i) {
    if (!seriesItem.getPointTransformer.isBroad) {
      return seriesItem;
    }
    var getPointTransformer = getGroupedPointTransformer(seriesItem.getPointTransformer, groups2.size, scale(getGroupName(seriesItem, i, seriesToStackMap)));
    return __assign2(__assign2({}, seriesItem), { getPointTransformer });
  });
};
var getStackedSeries = function(seriesList, dataItems, _a3) {
  var stacks = _a3.stacks, offset = _a3.offset, order = _a3.order;
  var map4 = buildSeriesToStackMap(stacks);
  var stackedSeriesList = applyStacking(seriesList, dataItems, map4, offset, order);
  var groupedSeriesList = applyGrouping(stackedSeriesList, map4);
  return groupedSeriesList;
};
var resetDomainItems = function(domains) {
  var result = {};
  Object.keys(domains).forEach(function(key) {
    result[key] = __assign2(__assign2({}, domains[key]), { domain: [] });
  });
  return result;
};
var extendDomainsWithAdditionalItems = function(domains, series2) {
  var _a3;
  var items = series2.points.map(function(point6) {
    return point6.value0;
  });
  var key = getValueDomainName(series2.scaleName);
  var domain = updateDomainItems(domains[key], items);
  return domain !== domains[key] ? __assign2(__assign2({}, domains), (_a3 = {}, _a3[key] = domain, _a3)) : domains;
};
var getStackedDomains = function(domains, seriesList) {
  var stackedSeries = seriesList.filter(function(series2) {
    return series2.isStacked;
  });
  if (!stackedSeries.length) {
    return domains;
  }
  var rebuiltDomains = seriesList.reduce(extendDomains, resetDomainItems(domains));
  return stackedSeries.reduce(extendDomainsWithAdditionalItems, rebuiltDomains);
};
var easeOutCubic = function(t) {
  return (t - 1) * (t - 1) * (t - 1) + 1;
};
var getDelay = function(index2, isStart) {
  return isStart ? index2 * 30 : 0;
};
var getStartVal$1 = function(scales) {
  return scales.valScale.copy().clamp(true)(0);
};
var getPathStart = function(scales, _a3) {
  var coordinates = _a3.coordinates;
  var start = getStartVal$1(scales);
  return { coordinates: coordinates.map(function(coord) {
    return { arg: coord.arg, val: start, startVal: start };
  }) };
};
var getPointStart = function(scales, _a3) {
  var arg = _a3.arg;
  var start = getStartVal$1(scales);
  return { arg, val: start, startVal: start };
};
var getPieStart = function(scales, _a3) {
  var startAngle = _a3.startAngle, endAngle = _a3.endAngle;
  return { innerRadius: 0, outerRadius: 0, startAngle, endAngle };
};
var compareTargets = function(target1, target2) {
  return target1.series === target2.series && target1.point === target2.point;
};
var selectTarget = function(targets, currentTarget) {
  var candidate = targets[0];
  if (!currentTarget) {
    return candidate;
  }
  if (!candidate) {
    return null;
  }
  return compareTargets(candidate, currentTarget) ? void 0 : candidate;
};
var processPointerMove = function(targets, currentTarget, notify) {
  var nextTarget = selectTarget(targets, currentTarget);
  if (nextTarget === void 0) {
    return void 0;
  }
  if (notify) {
    notify(nextTarget);
  }
  return nextTarget;
};
var getOffset = function(element) {
  var _a3 = element.getBoundingClientRect(), left = _a3.left, top = _a3.top;
  var defaultView = element.ownerDocument.defaultView;
  var _b2 = defaultView, pageXOffset = _b2.pageXOffset, pageYOffset = _b2.pageYOffset;
  return [left + pageXOffset, top + pageYOffset];
};
var getEventCoords = function(e, offset) {
  var _a3 = e.touches ? e.touches[0] : e, pageX = _a3.pageX, pageY = _a3.pageY;
  return [pageX - offset[0], pageY - offset[1]];
};
var getParameters = function(series2, target) {
  var currentSeries = series2.find(function(_a3) {
    var name = _a3.name;
    return target.series === name;
  });
  var item = currentSeries.points.find(function(point6) {
    return point6.index === target.point;
  });
  return {
    element: currentSeries.getPointTransformer.getTargetElement(item),
    text: "".concat(item.value)
  };
};
var createReference = function(rect, rootRef) {
  return {
    // These two fields together with *width* and *height* are left with stub data for
    // simplicity reasons - they seem to be unused by *Popper*.
    clientWidth: 0,
    clientHeight: 0,
    getBoundingClientRect: function() {
      var offset = getOffset(rootRef.current);
      var htmlRect = rootRef.current.ownerDocument.documentElement.getBoundingClientRect();
      var left = rect[0] + offset[0] + htmlRect.left;
      var right = rect[2] + offset[0] + htmlRect.left;
      var top = rect[1] + offset[1] + htmlRect.top;
      var bottom = rect[3] + offset[1] + htmlRect.top;
      return {
        left,
        top,
        right,
        bottom,
        width: right - left,
        height: bottom - top
      };
    }
  };
};
var processHandleTooltip = function(targets, currentTarget, onTargetItemChange) {
  var filterTargets = targets.filter(function(target) {
    return target.point !== void 0;
  });
  return processPointerMove(filterTargets, currentTarget, onTargetItemChange);
};
var getArgumentBounds = function(viewport) {
  return viewport && viewport.argumentStart !== void 0 && viewport.argumentEnd !== void 0 ? [viewport.argumentStart, viewport.argumentEnd] : null;
};
var getValueBounds = function(viewport) {
  return viewport && viewport.valueStart !== void 0 && viewport.valueEnd !== void 0 ? [viewport.valueStart, viewport.valueEnd] : null;
};
var getValueScaleName = function(viewport) {
  return getValueDomainName(viewport && viewport.scaleName);
};
var getDefaultBounds = function(scale) {
  var domain = scale.domain();
  return [domain[0], domain[domain.length - 1]];
};
var proportionallyExtendRange = function(range, subRange) {
  var p = (subRange[0] - subRange[1]) / (range[0] - range[1]);
  var q = subRange[0] - p * range[0];
  return [
    (range[0] - q) / p,
    (range[1] - q) / p
  ];
};
var adjustRange = function(domain, bounds, range) {
  var scale = makeScale(domain, range);
  var subRange = scaleBounds(scale, bounds);
  return rangesEqual(subRange, range) ? range : proportionallyExtendRange(range, subRange);
};
var update = function(ranges, changes, key, domain, bounds) {
  var newRange = adjustRange(domain, bounds, ranges[key]);
  if (newRange !== ranges[key]) {
    changes[key] = newRange;
  }
};
var adjustLayout = function(domains, ranges, viewport) {
  var changes = {};
  var argumentBounds = getArgumentBounds(viewport);
  if (argumentBounds) {
    update(ranges, changes, ARGUMENT_DOMAIN, domains[ARGUMENT_DOMAIN], argumentBounds);
  }
  var valueBounds = getValueBounds(viewport);
  if (valueBounds) {
    update(ranges, changes, VALUE_DOMAIN, domains[getValueScaleName(viewport)], valueBounds);
  }
  return Object.keys(changes).length ? __assign2(__assign2({}, ranges), changes) : ranges;
};
var boundsForScale = function(name, scales, currentBounds, interaction, type, delta, anchor, range) {
  if (!checkInteraction(interaction, type)) {
    return null;
  }
  var scale = scales[name];
  var bounds = currentBounds || getDefaultBounds(scale);
  var newBounds;
  if (type === "pan") {
    newBounds = moveBounds(scale, bounds, delta);
  } else if (type === "zoom") {
    newBounds = range ? invertBoundsRange(scale, range) : growBounds(scale, bounds, delta, anchor);
  }
  return newBounds !== bounds ? newBounds : null;
};
var getViewport = function(scales, rotated, _a3, type, deltas, anchors, ranges, viewport, onViewportChange) {
  var _b2 = __read3(_a3, 2), argInteraction = _b2[0], valInteraction = _b2[1];
  var argIndex = Number(rotated);
  var valIndex = 1 - argIndex;
  var changes = {};
  var argumentBounds = boundsForScale(ARGUMENT_DOMAIN, scales, getArgumentBounds(viewport), argInteraction, type, deltas ? deltas[argIndex] : 0, anchors ? anchors[argIndex] : 0, ranges ? ranges[argIndex] : void 0);
  var valueBounds = boundsForScale(getValueScaleName(viewport), scales, getValueBounds(viewport), valInteraction, type, deltas ? deltas[valIndex] : 0, anchors ? anchors[valIndex] : 0, ranges ? ranges[valIndex] : void 0);
  if (argumentBounds) {
    changes.argumentStart = argumentBounds[0];
    changes.argumentEnd = argumentBounds[1];
  }
  if (valueBounds) {
    changes.valueStart = valueBounds[0];
    changes.valueEnd = valueBounds[1];
  }
  if (Object.keys(changes).length) {
    var newViewport = __assign2(__assign2({}, viewport), changes);
    if (onViewportChange) {
      onViewportChange(newViewport);
    }
    return { viewport: newViewport };
  }
  return null;
};
var getDeltaForTouches = function(touches) {
  var deltaX = touches[0].pageX - touches[1].pageX;
  var deltaY = touches[0].pageY - touches[1].pageY;
  var delta = Math.sqrt(deltaX * deltaX + deltaY * deltaY);
  var center = [
    (touches[0].pageX + touches[1].pageX) / 2,
    (touches[0].pageY + touches[1].pageY) / 2
  ];
  return { delta, center };
};
var isKeyPressed = function(event, key) {
  return event["".concat(key, "Key")];
};
var getWheelDelta = function(_a3) {
  var wheelDelta = _a3.wheelDelta, deltaY = _a3.deltaY;
  return wheelDelta !== void 0 ? wheelDelta : deltaY * -30;
};
var isMultiTouch = function(e) {
  return e.touches && e.touches.length === 2;
};
var attachEvents = function(node, handlers) {
  Object.keys(handlers).forEach(function(el) {
    node.addEventListener(el, handlers[el], { passive: false });
  });
};
var detachEvents = function(node, handlers) {
  Object.keys(handlers).forEach(function(el) {
    node.removeEventListener(el, handlers[el]);
  });
};
var getRect$1 = function(rotated, interactionWithArguments, interactionWithValues, initial, current, pane) {
  var isZoomArgument = checkInteraction(interactionWithArguments, "zoom");
  var isZoomValue = checkInteraction(interactionWithValues, "zoom");
  var isXFixed = rotated ? isZoomValue : isZoomArgument;
  var isYFixed = rotated ? isZoomArgument : isZoomValue;
  var x2 = isXFixed ? Math.min(initial[0], current[0]) : 0;
  var width = isXFixed ? Math.abs(initial[0] - current[0]) : pane.width;
  var y2 = isYFixed ? Math.min(initial[1], current[1]) : 0;
  var height = isYFixed ? Math.abs(initial[1] - current[1]) : pane.height;
  return {
    x: x2,
    y: y2,
    width,
    height
  };
};
var checkInteraction = function(interaction, type) {
  return interaction === "both" || interaction === type;
};
var setCursorType = function(node, type) {
  var defaultType = "pointer";
  node.style.cursor = type ? type : defaultType;
};
var isReadyToRenderSeries = function(_a3, _b2, isPreviousDataEmpty, axesExist) {
  var pane = _a3.pane, restLayouts = __rest2(_a3, ["pane"]);
  var current = _b2.current;
  if (!pane.width && !pane.height) {
    return false;
  }
  var bbox = { width: current.clientWidth, height: current.clientHeight };
  var width = pane.width;
  var height = pane.height;
  Object.entries(restLayouts).forEach(function(el) {
    var orientation = el[0].split("-")[0];
    if (orientation === "top" || orientation === "bottom") {
      height += el[1].height;
    } else {
      width += el[1].width;
    }
  });
  return Math.abs(bbox.width - width) < DIFFERENCE && Math.abs(bbox.height - height) < DIFFERENCE && isPreviousDataEmptyOrNoAxes(isPreviousDataEmpty, axesExist);
};
var isPreviousDataEmptyOrNoAxes = function(isPreviousDataEmpty, axesExist) {
  return !isPreviousDataEmpty || !axesExist;
};
var getSegmentLength = function(dx, dy) {
  return Math.sqrt(dx * dx + dy * dy);
};
var createContext2 = function() {
  return document.createElement("canvas").getContext("2d");
};
var createCanvasAbusingHitTester = function(makePath, points, rotated) {
  var ctx = createContext2();
  var path2 = makePath(rotated);
  path2.context(ctx);
  path2(points);
  return function(_a3) {
    var _b2 = __read3(_a3, 2), x2 = _b2[0], y2 = _b2[1];
    return ctx.isPointInPath(x2, y2);
  };
};
var LINE_POINT_SIZE = 20;
var LINE_TOLERANCE = 10;
var getDistance = function(_a3, _b2, rotated) {
  var _c = __read3(_a3, 2), px = _c[0], py = _c[1];
  var arg = _b2.arg, val = _b2.val;
  var x2 = rotated ? val : arg;
  var y2 = rotated ? arg : val;
  return getSegmentLength(px - x2, py - y2);
};
var createContinuousSeriesHitTesterCreator = function(makePath) {
  return function(points, rotated) {
    var fallbackHitTest = createCanvasAbusingHitTester(makePath, points, rotated);
    return function(target) {
      var minDistance = Number.MAX_VALUE;
      var minIndex2 = 0;
      var list = [];
      points.forEach(function(point6, i) {
        var distance = getDistance(target, point6, rotated);
        if (distance <= LINE_POINT_SIZE) {
          list.push({ distance, index: point6.index });
        }
        if (distance < minDistance) {
          minDistance = distance;
          minIndex2 = i;
        }
      });
      if (!list.length && fallbackHitTest(target)) {
        list.push({ index: points[minIndex2].index, distance: minDistance });
      }
      return list.length ? { points: list } : null;
    };
  };
};
var createPointsEnumeratingHitTesterCreator = function(hitTestPoint) {
  return function(points, rotated) {
    return function(target) {
      var list = [];
      points.forEach(function(point6) {
        var status = hitTestPoint(target, point6, rotated);
        if (status) {
          list.push({ index: point6.index, distance: status.distance });
        }
      });
      return list.length ? { points: list } : null;
    };
  };
};
var createAreaHitTester = createContinuousSeriesHitTesterCreator(function(rotated) {
  var path2 = area_default();
  var hitArea = rotated ? dRotateArea : dArea;
  if (rotated) {
    path2.x1(hitArea.x1());
    path2.x0(hitArea.x0());
    path2.y(hitArea.y());
  } else {
    path2.x(hitArea.x());
    path2.y1(hitArea.y1());
    path2.y0(hitArea.y0());
  }
  return path2;
});
var createLineHitTester = createContinuousSeriesHitTesterCreator(function(rotated) {
  var path2 = area_default();
  var hitLine = rotated ? dRotateLine : dLine;
  if (rotated) {
    var getX_1 = hitLine.x();
    path2.y(hitLine.y());
    path2.x0(function(point6) {
      return getX_1(point6) + LINE_TOLERANCE;
    });
    path2.x1(function(point6) {
      return getX_1(point6) - LINE_TOLERANCE;
    });
  } else {
    var getY_1 = hitLine.y();
    path2.x(hitLine.x());
    path2.y1(function(point6) {
      return getY_1(point6) - LINE_TOLERANCE;
    });
    path2.y0(function(point6) {
      return getY_1(point6) + LINE_TOLERANCE;
    });
  }
  return path2;
});
var createSplineHitTester = createContinuousSeriesHitTesterCreator(function(rotated) {
  var path2 = area_default();
  var hitSpline = rotated ? dRotateSpline : dSpline;
  if (rotated) {
    var getX_2 = hitSpline.x();
    path2.y(hitSpline.y());
    path2.x1(function(point6) {
      return getX_2(point6) - LINE_TOLERANCE;
    });
    path2.x0(function(point6) {
      return getX_2(point6) + LINE_TOLERANCE;
    });
  } else {
    var getY_2 = hitSpline.y();
    path2.x(hitSpline.x());
    path2.y1(function(point6) {
      return getY_2(point6) - LINE_TOLERANCE;
    });
    path2.y0(function(point6) {
      return getY_2(point6) + LINE_TOLERANCE;
    });
  }
  path2.curve(hitSpline.curve());
  return path2;
});
var hitTestRect = function(dx, dy, halfX, halfY) {
  return Math.abs(dx) <= halfX && Math.abs(dy) <= halfY ? {
    distance: getSegmentLength(dx, dy)
  } : null;
};
var createBarHitTester = createPointsEnumeratingHitTesterCreator(function(_a3, point6, rotated) {
  var _b2 = __read3(_a3, 2), px = _b2[0], py = _b2[1];
  var _c = point6, arg = _c.arg, val = _c.val, startVal = _c.startVal, barWidth = _c.barWidth, maxBarWidth = _c.maxBarWidth;
  var halfWidth = maxBarWidth * barWidth / 2;
  var halfHeight = Math.abs(val - startVal) / 2;
  var centerVal = (val + startVal) / 2;
  var xCenter = rotated ? centerVal : arg;
  var yCenter = rotated ? arg : centerVal;
  return hitTestRect(px - xCenter, py - yCenter, rotated ? halfHeight : halfWidth, rotated ? halfWidth : halfHeight);
});
var createScatterHitTester = createPointsEnumeratingHitTesterCreator(function(_a3, obj, rotated) {
  var _b2 = __read3(_a3, 2), px = _b2[0], py = _b2[1];
  var point6 = obj.point;
  var distance = getDistance([px, py], obj, rotated);
  return distance <= point6.size / 2 ? { distance } : null;
});
var mapAngleTod3 = function(angle) {
  var ret = angle + Math.PI / 2;
  return ret >= 0 ? ret : ret + Math.PI * 2;
};
var createPieHitTester = createPointsEnumeratingHitTesterCreator(function(_a3, point6) {
  var _b2 = __read3(_a3, 2), px = _b2[0], py = _b2[1];
  var _c = point6, x2 = _c.arg, y2 = _c.val, innerRadius = _c.innerRadius, outerRadius = _c.outerRadius, startAngle = _c.startAngle, maxRadius = _c.maxRadius, endAngle = _c.endAngle;
  var inner = innerRadius * maxRadius;
  var outer = outerRadius * maxRadius;
  var rCenter = (inner + outer) / 2;
  var angleCenter = (startAngle + endAngle) / 2;
  var halfRadius = (outer - inner) / 2;
  var halfAngle = Math.abs(startAngle - endAngle) / 2;
  var dx = px - x2;
  var dy = py - y2;
  var r = getSegmentLength(dx, dy);
  var angle = mapAngleTod3(Math.atan2(dy, dx));
  return hitTestRect(r - rCenter, angle - angleCenter, halfRadius, halfAngle);
});
var buildFilter = function(targets) {
  var result = {};
  targets.forEach(function(_a3) {
    var series2 = _a3.series, point6 = _a3.point;
    (result[series2] = result[series2] || /* @__PURE__ */ new Set()).add(point6);
  });
  return result;
};
var changeSeriesState = function(seriesList, targets, state) {
  if (targets.length === 0) {
    return seriesList;
  }
  var filter2 = buildFilter(targets);
  var matches = 0;
  var result = seriesList.map(function(seriesItem) {
    var set2 = filter2[seriesItem.name];
    if (!set2) {
      return seriesItem;
    }
    matches += 1;
    var props = { state };
    if (set2.size) {
      props.points = seriesItem.points.map(function(point6) {
        return set2.has(point6.index) ? __assign2(__assign2({}, point6), { state }) : point6;
      });
    }
    return __assign2(__assign2({}, seriesItem), props);
  });
  return matches > 0 ? result : seriesList;
};
var getDefaultLegendItems = function(series2) {
  return series2.map(function(_a3) {
    var text = _a3.name, color2 = _a3.color;
    return { text, color: color2 };
  });
};
var getPieLegendItems = function(series2) {
  return series2[0].points.map(function(_a3) {
    var text = _a3.argument, color2 = _a3.color;
    return { text, color: color2 };
  });
};
var isSinglePieSeriesCase = function(series2) {
  return series2.length === 1 && "innerRadius" in series2[0] && "outerRadius" in series2[0];
};
var getLegendItems = function(series2) {
  return (isSinglePieSeriesCase(series2) ? getPieLegendItems : getDefaultLegendItems)(series2);
};
var DISTANCE_THRESHOLD = 20;
var compareHitTargets = function(t13, t22) {
  var distanceDelta = t13.distance - t22.distance;
  if (Math.abs(distanceDelta) <= DISTANCE_THRESHOLD) {
    var orderDelta = t22.order - t13.order;
    return orderDelta !== 0 ? orderDelta : distanceDelta;
  }
  return distanceDelta;
};
var buildEventHandler = function(seriesList, handlers) {
  var hitTesters = null;
  var createHitTesters = function() {
    var obj = {};
    seriesList.forEach(function(seriesItem) {
      obj[seriesItem.symbolName] = seriesItem.createHitTester(seriesItem.points, seriesItem.rotated);
    });
    return obj;
  };
  return function(e) {
    var location = getEventCoords(e, getOffset(e.currentTarget));
    hitTesters = hitTesters || createHitTesters();
    var targets = [];
    seriesList.forEach(function(_a3) {
      var series2 = _a3.name, order = _a3.index, symbolName = _a3.symbolName;
      var status = hitTesters[symbolName](location);
      if (status) {
        targets.push.apply(targets, __spreadArray3([], __read3(status.points.map(function(point6) {
          return {
            series: series2,
            order,
            point: point6.index,
            distance: point6.distance
          };
        })), false));
      }
    });
    targets.sort(compareHitTargets);
    var arg = { location, targets, event: e.nativeEvent };
    handlers.forEach(function(handler) {
      return handler(arg);
    });
  };
};
var buildLeaveEventHandler = function(handlers) {
  return function(e) {
    var location = getEventCoords(e, getOffset(e.currentTarget));
    var arg = { location, targets: [] };
    handlers.forEach(function(handler) {
      return handler(arg);
    });
  };
};
var buildEventHandlers = function(seriesList, _a3) {
  var clickHandlers = _a3.clickHandlers, pointerMoveHandlers = _a3.pointerMoveHandlers;
  var handlers = {};
  if (!hasWindow())
    return handlers;
  if (clickHandlers.length) {
    handlers.click = buildEventHandler(seriesList, clickHandlers);
  }
  if (pointerMoveHandlers.length) {
    var moveHandler = buildEventHandler(seriesList, pointerMoveHandlers);
    var leaveHandler = buildLeaveEventHandler(pointerMoveHandlers);
    if ("ontouchstart" in window) {
      handlers.touchstart = moveHandler;
    } else {
      handlers.mousemove = moveHandler;
      handlers.mouseleave = leaveHandler;
    }
  }
  return handlers;
};
var getProgress = function(_a3) {
  var elapsed = _a3.elapsed, total = _a3.total;
  return Math.min(elapsed / total, 1);
};
var runAnimation = function(setAttributes, getNewPositions, easing, duration2, delay) {
  return new Promise(function(resolve) {
    setTimeout(function() {
      var time2 = {
        start: Date.now(),
        total: duration2,
        elapsed: 0
      };
      var step = function() {
        time2.elapsed = Date.now() - time2.start;
        var progress = getProgress(time2);
        setAttributes(getNewPositions(easing(progress)));
        if (progress < 1)
          requestAnimationFrame(step);
      };
      resolve(requestAnimationFrame(step));
    }, delay);
  });
};
var buildAnimation = function(easing, duration2) {
  return function(startCoords, endCoords, processAnimation, setAttributes, delay) {
    if (delay === void 0) {
      delay = 0;
    }
    var animationID;
    var stop = function() {
      if (animationID) {
        cancelAnimationFrame(animationID);
        animationID = void 0;
      }
    };
    var run = function(start, end, delayValue) {
      animationID = runAnimation(setAttributes, processAnimation(start, end), easing, duration2, delayValue).then(function(res) {
        animationID = res;
      });
    };
    run(startCoords, endCoords, delay);
    return {
      update: function(updatedStartCoords, updatedEndCoords, updatedDelay) {
        if (updatedDelay === void 0) {
          updatedDelay = 0;
        }
        stop();
        run(updatedStartCoords, updatedEndCoords, updatedDelay);
      },
      stop
    };
  };
};
var lerp = function(a2, b, t) {
  return a2 + t * (b - a2);
};
var processPointAnimation = function(startCoords, endCoords) {
  return function(progress) {
    return {
      arg: lerp(startCoords.arg, endCoords.arg, progress),
      val: lerp(startCoords.val, endCoords.val, progress)
    };
  };
};
var processBarAnimation = function(startCoords, endCoords) {
  return function(progress) {
    return {
      arg: lerp(startCoords.arg, endCoords.arg, progress),
      val: lerp(startCoords.val, endCoords.val, progress),
      startVal: lerp(startCoords.startVal, endCoords.startVal, progress)
    };
  };
};
var processLineAnimation = function(_a3, _b2) {
  var coordinates = _a3.coordinates;
  var endCoordinates = _b2.coordinates;
  return function(progress) {
    return {
      coordinates: endCoordinates.map(function(coord, index2) {
        var startCurCoord = coordinates[index2];
        return __assign2(__assign2({}, coord), { arg: lerp(startCurCoord.arg, coord.arg, progress), val: lerp(startCurCoord.val, coord.val, progress) });
      })
    };
  };
};
var processAreaAnimation = function(_a3, _b2) {
  var coordinates = _a3.coordinates;
  var endCoordinates = _b2.coordinates;
  return function(progress) {
    return {
      coordinates: endCoordinates.map(function(coord, index2) {
        var startCurCoord = coordinates[index2];
        return __assign2(__assign2({}, coord), { arg: lerp(startCurCoord.arg, coord.arg, progress), val: lerp(startCurCoord.val, coord.val, progress), startVal: lerp(startCurCoord.startVal, coord.startVal, progress) });
      })
    };
  };
};
var processPieAnimation = function(start, end) {
  return function(progress) {
    return {
      innerRadius: lerp(start.innerRadius, end.innerRadius, progress),
      outerRadius: lerp(start.outerRadius, end.outerRadius, progress),
      startAngle: lerp(start.startAngle, end.startAngle, progress),
      endAngle: lerp(start.endAngle, end.endAngle, progress)
    };
  };
};

// node_modules/@devexpress/dx-react-chart/dist/dx-react-chart.es.js
var extendStatics2 = function(d, b) {
  extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
    d2.__proto__ = b2;
  } || function(d2, b2) {
    for (var p in b2)
      if (Object.prototype.hasOwnProperty.call(b2, p))
        d2[p] = b2[p];
  };
  return extendStatics2(d, b);
};
function __extends2(d, b) {
  if (typeof b !== "function" && b !== null)
    throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
  extendStatics2(d, b);
  function __() {
    this.constructor = d;
  }
  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var __assign3 = function() {
  __assign3 = Object.assign || function __assign4(t) {
    for (var s2, i = 1, n = arguments.length; i < n; i++) {
      s2 = arguments[i];
      for (var p in s2)
        if (Object.prototype.hasOwnProperty.call(s2, p))
          t[p] = s2[p];
    }
    return t;
  };
  return __assign3.apply(this, arguments);
};
function __rest3(s2, e) {
  var t = {};
  for (var p in s2)
    if (Object.prototype.hasOwnProperty.call(s2, p) && e.indexOf(p) < 0)
      t[p] = s2[p];
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s2); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i]))
        t[p[i]] = s2[p[i]];
    }
  return t;
}
function __read4(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error) {
    e = { error };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
}
function __spreadArray4(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || from);
}
var series = [];
var BasicData = function(_a3) {
  var data = _a3.data, rotated = _a3.rotated;
  return (0, import_react2.createElement)(
    Plugin,
    { name: "Basis" },
    (0, import_react2.createElement)(Getter, { name: "data", value: data }),
    (0, import_react2.createElement)(Getter, { name: "domains", value: defaultDomains }),
    (0, import_react2.createElement)(Getter, { name: "series", value: series }),
    (0, import_react2.createElement)(Getter, { name: "rotated", value: rotated })
  );
};
var getScales = function(_a3) {
  var domains = _a3.domains, ranges = _a3.ranges;
  return buildScales(domains, ranges);
};
var getSeries = function(_a3) {
  var series2 = _a3.series, scales = _a3.scales, rotated = _a3.rotated;
  return scaleSeriesPoints(series2, scales, rotated);
};
var ChartCore = function(_super) {
  __extends2(ChartCore2, _super);
  function ChartCore2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  ChartCore2.prototype.render = function() {
    return (0, import_react2.createElement)(
      Plugin,
      null,
      (0, import_react2.createElement)(Getter, { name: "scales", computed: getScales }),
      (0, import_react2.createElement)(Getter, { name: "series", computed: getSeries })
    );
  };
  return ChartCore2;
}(import_react2.PureComponent);
var AxesLayout = function(_super) {
  __extends2(AxesLayout2, _super);
  function AxesLayout2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.ref = (0, import_react2.createRef)();
    return _this;
  }
  AxesLayout2.prototype.render = function() {
    return (0, import_react2.createElement)(
      Plugin,
      null,
      (0, import_react2.createElement)(Getter, { name: "centerDivRef", value: this.ref }),
      (0, import_react2.createElement)(
        Template,
        { name: "canvas" },
        (0, import_react2.createElement)(
          "div",
          { id: "center-center", ref: this.ref, style: { display: "flex", flexDirection: "column", flexGrow: 1 } },
          (0, import_react2.createElement)(
            "div",
            { id: "".concat(TOP, "-axis-container"), style: { display: "flex", flexDirection: "row" } },
            (0, import_react2.createElement)(TemplatePlaceholder, { name: "".concat(TOP, "-").concat(LEFT, "-axis") }),
            (0, import_react2.createElement)(TemplatePlaceholder, { name: "".concat(TOP, "-axis") }),
            (0, import_react2.createElement)(TemplatePlaceholder, { name: "".concat(TOP, "-").concat(RIGHT, "-axis") })
          ),
          (0, import_react2.createElement)(
            "div",
            { id: "center-axis-container", style: { display: "flex", flexDirection: "row", flexGrow: 1 } },
            (0, import_react2.createElement)(TemplatePlaceholder, { name: "".concat(LEFT, "-axis") }),
            (0, import_react2.createElement)(TemplatePlaceholder, null),
            (0, import_react2.createElement)(TemplatePlaceholder, { name: "".concat(RIGHT, "-axis") })
          ),
          (0, import_react2.createElement)(
            "div",
            { id: "".concat(BOTTOM, "-axis-container"), style: { display: "flex", flexDirection: "row" } },
            (0, import_react2.createElement)(TemplatePlaceholder, { name: "".concat(BOTTOM, "-").concat(LEFT, "-axis") }),
            (0, import_react2.createElement)(TemplatePlaceholder, { name: "".concat(BOTTOM, "-axis") }),
            (0, import_react2.createElement)(TemplatePlaceholder, { name: "".concat(BOTTOM, "-").concat(RIGHT, "-axis") })
          )
        )
      )
    );
  };
  return AxesLayout2;
}(import_react2.PureComponent);
var SpaceFillingRects = function(_super) {
  __extends2(SpaceFillingRects2, _super);
  function SpaceFillingRects2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  SpaceFillingRects2.prototype.render = function() {
    var placeholders2 = this.props.placeholders;
    return (0, import_react2.createElement)(Plugin, { name: "SpaceFillingRects" }, placeholders2.map(function(name) {
      return (0, import_react2.createElement)(
        Template,
        { name, key: name },
        (0, import_react2.createElement)(TemplateConnector, null, function(_a3) {
          var layouts = _a3.layouts;
          var key = name.slice(name.indexOf("-") + 1);
          var width = Object.keys(layouts).reduce(function(prev, cur) {
            if (cur.includes(key)) {
              return prev + layouts[cur].width;
            }
            return prev;
          }, 0);
          return (0, import_react2.createElement)("div", { id: name, style: { width } });
        })
      );
    }));
  };
  return SpaceFillingRects2;
}(import_react2.PureComponent);
var ControllerComponent = function(_super) {
  __extends2(ControllerComponent2, _super);
  function ControllerComponent2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.isPreviousDataEmpty = true;
    _this.readyToRenderSeriesComputed = function(_a3) {
      var layouts = _a3.layouts, centerDivRef = _a3.centerDivRef, data = _a3.data, axesExist = _a3.axesExist;
      var isPreviousDataEmpty = _this.isPreviousDataEmpty;
      _this.isPreviousDataEmpty = !data.length;
      return isReadyToRenderSeries(layouts, centerDivRef, isPreviousDataEmpty, !!axesExist);
    };
    return _this;
  }
  ControllerComponent2.prototype.render = function() {
    return (0, import_react2.createElement)(
      Plugin,
      { name: "ControllerComponent" },
      (0, import_react2.createElement)(Getter, { name: "readyToRenderSeries", computed: this.readyToRenderSeriesComputed })
    );
  };
  return ControllerComponent2;
}(import_react2.PureComponent);
var EXTRA_PIXELS = 2;
var ClipPath = function(_super) {
  __extends2(ClipPath2, _super);
  function ClipPath2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  ClipPath2.prototype.render = function() {
    var _a3 = this.props, id = _a3.id, width = _a3.width, height = _a3.height;
    return (0, import_react2.createElement)(
      "defs",
      null,
      (0, import_react2.createElement)(
        "clipPath",
        { id },
        (0, import_react2.createElement)("rect", { x: -EXTRA_PIXELS / 2, y: -EXTRA_PIXELS / 2, width: width + EXTRA_PIXELS, height: height + EXTRA_PIXELS })
      )
    );
  };
  return ClipPath2;
}(import_react2.PureComponent);
var UpdatableSizer = function(_super) {
  __extends2(UpdatableSizer2, _super);
  function UpdatableSizer2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.ref = (0, import_react2.createRef)();
    return _this;
  }
  UpdatableSizer2.prototype.componentDidUpdate = function() {
    this.props.onSizeChange(this.ref.current.getSize());
  };
  UpdatableSizer2.prototype.render = function() {
    return (0, import_react2.createElement)(Sizer, __assign3({ ref: this.ref }, this.props));
  };
  return UpdatableSizer2;
}(import_react2.PureComponent);
var DIV_STYLE = {
  flex: 1,
  zIndex: 1,
  position: "relative",
  width: "100%"
};
var SVG_STYLE = {
  position: "absolute",
  left: 0,
  top: 0,
  overflow: "visible"
};
var SizerContainer = function(_a3) {
  var children = _a3.children, forwardedRef = _a3.forwardedRef;
  return (0, import_react2.createElement)("div", { ref: forwardedRef, style: DIV_STYLE }, children);
};
var numDefs = 0;
var getUniqueId = function() {
  numDefs += 1;
  return numDefs;
};
var PaneLayout = function(_super) {
  __extends2(PaneLayout2, _super);
  function PaneLayout2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.ref = (0, import_react2.createRef)();
    _this.clipPathId = "clip_path_".concat(getUniqueId());
    return _this;
  }
  PaneLayout2.prototype.render = function() {
    var _this = this;
    return (0, import_react2.createElement)(
      Plugin,
      { name: "PaneLayout" },
      (0, import_react2.createElement)(Getter, { name: "rootRef", value: this.ref }),
      (0, import_react2.createElement)(Getter, { name: "clipPathId", value: this.clipPathId }),
      (0, import_react2.createElement)(Template, { name: "canvas" }, function(params) {
        return (0, import_react2.createElement)(TemplateConnector, null, function(_a3, _b2) {
          var layouts = _a3.layouts;
          var changeBBox = _b2.changeBBox;
          var _c = layouts.pane, width = _c.width, height = _c.height;
          return (0, import_react2.createElement)(
            UpdatableSizer,
            { containerComponent: SizerContainer, onSizeChange: function(size) {
              return changeBBox({ placeholder: "pane", bBox: size });
            } },
            (0, import_react2.createElement)(
              "svg",
              __assign3({ ref: _this.ref }, params, { width, height, style: SVG_STYLE }),
              (0, import_react2.createElement)(ClipPath, { id: _this.clipPathId, width, height }),
              (0, import_react2.createElement)(TemplatePlaceholder, { name: "series" })
            )
          );
        });
      })
    );
  };
  return PaneLayout2;
}(import_react2.PureComponent);
var doGetRanges = function(_a3) {
  var layouts = _a3.layouts, rotated = _a3.rotated;
  return getRanges(layouts.pane, rotated);
};
var LayoutManager = function(_super) {
  __extends2(LayoutManager2, _super);
  function LayoutManager2(props) {
    var _this = _super.call(this, props) || this;
    _this.state = { bBoxes: { pane: { width: 0, height: 0 } } };
    var stateHelper = createStateHelper(_this);
    _this.changeBBox = stateHelper.applyFieldReducer.bind(stateHelper, "bBoxes", bBoxes);
    return _this;
  }
  LayoutManager2.prototype.render = function() {
    var _a3 = this.props, width = _a3.width, height = _a3.height, Root3 = _a3.rootComponent, restProps = __rest3(_a3, ["width", "height", "rootComponent"]);
    var stateBBoxes = this.state.bBoxes;
    return (0, import_react2.createElement)(
      Plugin,
      null,
      (0, import_react2.createElement)(Getter, { name: "layouts", value: stateBBoxes }),
      (0, import_react2.createElement)(Getter, { name: "ranges", computed: doGetRanges }),
      (0, import_react2.createElement)(Action, { name: "changeBBox", action: this.changeBBox }),
      (0, import_react2.createElement)(
        Template,
        { name: "root" },
        (0, import_react2.createElement)(
          Root3,
          __assign3({ width, height }, restProps),
          (0, import_react2.createElement)(TemplatePlaceholder, { name: "canvas" })
        )
      )
    );
  };
  LayoutManager2.defaultProps = {
    width: 0
  };
  return LayoutManager2;
}(import_react2.PureComponent);
var ComponentLayout = function() {
  return (0, import_react2.createElement)(
    Plugin,
    { name: "ComponentLayout" },
    (0, import_react2.createElement)(
      Template,
      { name: "canvas" },
      (0, import_react2.createElement)(
        "div",
        { id: "".concat(TOP, "-container"), style: { display: "flex", flexDirection: "row" } },
        (0, import_react2.createElement)(TemplatePlaceholder, { name: "".concat(TOP, "-").concat(LEFT) }),
        (0, import_react2.createElement)(TemplatePlaceholder, { name: TOP }),
        (0, import_react2.createElement)(TemplatePlaceholder, { name: "".concat(TOP, "-").concat(RIGHT) })
      ),
      (0, import_react2.createElement)(
        "div",
        { id: "center-container", style: { display: "flex", flexDirection: "row", flexGrow: 1 } },
        (0, import_react2.createElement)(TemplatePlaceholder, { name: LEFT }),
        (0, import_react2.createElement)(TemplatePlaceholder, null),
        (0, import_react2.createElement)(TemplatePlaceholder, { name: RIGHT })
      ),
      (0, import_react2.createElement)(
        "div",
        { id: "".concat(BOTTOM, "-container"), style: { display: "flex", flexDirection: "row" } },
        (0, import_react2.createElement)(TemplatePlaceholder, { name: "".concat(BOTTOM, "-").concat(LEFT) }),
        (0, import_react2.createElement)(TemplatePlaceholder, { name: BOTTOM }),
        (0, import_react2.createElement)(TemplatePlaceholder, { name: "".concat(BOTTOM, "-").concat(RIGHT) })
      )
    )
  );
};
var PaletteBase = function(_super) {
  __extends2(PaletteBase2, _super);
  function PaletteBase2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  PaletteBase2.prototype.render = function() {
    var scheme2 = this.props.scheme;
    return (0, import_react2.createElement)(
      Plugin,
      { name: "Palette" },
      (0, import_react2.createElement)(Getter, { name: "palette", value: scheme2 })
    );
  };
  return PaletteBase2;
}(import_react2.PureComponent);
var Palette = PaletteBase;
var Root = function(_super) {
  __extends2(Root3, _super);
  function Root3() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Root3.prototype.render = function() {
    var _a3 = this.props, children = _a3.children, width = _a3.width, height = _a3.height, style2 = _a3.style, restProps = __rest3(_a3, ["children", "width", "height", "style"]);
    return (0, import_react2.createElement)("div", __assign3({ style: __assign3(__assign3(__assign3({}, style2), { height: "".concat(height, "px") }), width ? { width: "".concat(width, "px") } : null) }, restProps), children);
  };
  return Root3;
}(import_react2.PureComponent);
var Label = function(_super) {
  __extends2(Label3, _super);
  function Label3() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Label3.prototype.render = function() {
    return (0, import_react2.createElement)("text", __assign3({}, this.props));
  };
  return Label3;
}(import_react2.PureComponent);
var scheme = [];
var placeholders = [
  "".concat(TOP, "-").concat(LEFT),
  "".concat(TOP, "-").concat(RIGHT),
  "".concat(BOTTOM, "-").concat(LEFT),
  "".concat(BOTTOM, "-").concat(RIGHT),
  "".concat(TOP, "-").concat(LEFT, "-axis"),
  "".concat(TOP, "-").concat(RIGHT, "-axis"),
  "".concat(BOTTOM, "-").concat(LEFT, "-axis"),
  "".concat(BOTTOM, "-").concat(RIGHT, "-axis")
];
var RawChart = function(_super) {
  __extends2(RawChart2, _super);
  function RawChart2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  RawChart2.prototype.render = function() {
    var _a3 = this.props, data = _a3.data, width = _a3.width, height = _a3.height, children = _a3.children, rotated = _a3.rotated, rootComponent = _a3.rootComponent, restProps = __rest3(_a3, ["data", "width", "height", "children", "rotated", "rootComponent"]);
    return (0, import_react2.createElement)(
      PluginHost2,
      null,
      (0, import_react2.createElement)(BasicData, { data, rotated }),
      (0, import_react2.createElement)(Palette, { scheme }),
      (0, import_react2.createElement)(LayoutManager, __assign3({ width, height, rootComponent }, restProps)),
      (0, import_react2.createElement)(PaneLayout, null),
      (0, import_react2.createElement)(AxesLayout, null),
      (0, import_react2.createElement)(ComponentLayout, null),
      (0, import_react2.createElement)(SpaceFillingRects, { placeholders }),
      children,
      (0, import_react2.createElement)(ControllerComponent, null),
      (0, import_react2.createElement)(ChartCore, null)
    );
  };
  RawChart2.defaultProps = {
    height: 500,
    rotated: false
  };
  RawChart2.components = {
    rootComponent: "Root"
  };
  return RawChart2;
}(import_react2.PureComponent);
var Chart = withComponents({ Root })(RawChart);
Chart.Label = Label;
var Marker = function(_super) {
  __extends2(Marker2, _super);
  function Marker2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Marker2.prototype.render = function() {
    var _a3 = this.props, color2 = _a3.color, restProps = __rest3(_a3, ["color"]);
    return (0, import_react2.createElement)(
      "svg",
      __assign3({ fill: color2, width: "10", height: "10" }, restProps),
      (0, import_react2.createElement)("circle", __assign3({ r: 5, cx: 5, cy: 5 }, restProps))
    );
  };
  return Marker2;
}(import_react2.PureComponent);
var RawLegend = function(_super) {
  __extends2(RawLegend2, _super);
  function RawLegend2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  RawLegend2.prototype.render = function() {
    var _a3 = this.props, MarkerComponent = _a3.markerComponent, Label3 = _a3.labelComponent, Root3 = _a3.rootComponent, Item2 = _a3.itemComponent, position = _a3.position, getItems = _a3.getItems;
    var placeholder = position;
    return (0, import_react2.createElement)(
      Plugin,
      { name: "Legend" },
      (0, import_react2.createElement)(
        Template,
        { name: placeholder },
        (0, import_react2.createElement)(TemplatePlaceholder, null),
        (0, import_react2.createElement)(TemplateConnector, null, function(getters) {
          return (0, import_react2.createElement)(Root3, { name: "legend-".concat(placeholder) }, getItems(getters).map(function(_a4) {
            var text = _a4.text, color2 = _a4.color;
            return (0, import_react2.createElement)(
              Item2,
              { key: text },
              (0, import_react2.createElement)(MarkerComponent, { name: text, color: color2 }),
              (0, import_react2.createElement)(Label3, { text })
            );
          }));
        })
      )
    );
  };
  RawLegend2.defaultProps = {
    position: "right",
    getItems: function(_a3) {
      var series2 = _a3.series;
      return getLegendItems(series2);
    }
  };
  RawLegend2.components = {
    rootComponent: "Root",
    itemComponent: "Item",
    markerComponent: "Marker",
    labelComponent: "Label"
  };
  return RawLegend2;
}(import_react2.PureComponent);
var Legend = withComponents({ Marker })(RawLegend);
var TitleBase = function(_super) {
  __extends2(TitleBase2, _super);
  function TitleBase2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  TitleBase2.prototype.render = function() {
    var _a3 = this.props, Text2 = _a3.textComponent, text = _a3.text, position = _a3.position;
    var placeholder = position;
    return (0, import_react2.createElement)(
      Plugin,
      { name: "Title" },
      (0, import_react2.createElement)(
        Template,
        { name: placeholder },
        (0, import_react2.createElement)(TemplatePlaceholder, null),
        (0, import_react2.createElement)(Text2, { text })
      )
    );
  };
  TitleBase2.components = {
    textComponent: "Text"
  };
  TitleBase2.defaultProps = {
    position: "top"
  };
  return TitleBase2;
}(import_react2.PureComponent);
var Title = TitleBase;
var declareSeries = function(pluginName, _a3) {
  var components = _a3.components, getPointTransformer = _a3.getPointTransformer, createHitTester = _a3.createHitTester;
  var Component2 = function(_super) {
    __extends2(Component3, _super);
    function Component3() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Component3.prototype.render = function() {
      var _a4 = this.props, name = _a4.name, argumentField = _a4.argumentField, valueField = _a4.valueField, scaleName = _a4.scaleName, seriesComponent = _a4.seriesComponent, pointComponent = _a4.pointComponent, color2 = _a4.color, restProps = __rest3(_a4, ["name", "argumentField", "valueField", "scaleName", "seriesComponent", "pointComponent", "color"]);
      var symbolName = Symbol(name);
      var seriesItem = __assign3(__assign3({ getPointTransformer, createHitTester }, this.props), { symbolName });
      var getSeries2 = function(_a5) {
        var series2 = _a5.series, data = _a5.data, palette2 = _a5.palette;
        return addSeries(series2, data, palette2, seriesItem, restProps);
      };
      var getDomains2 = function(_a5) {
        var series2 = _a5.series, domains = _a5.domains;
        return extendDomains(domains, findSeriesByName(symbolName, series2));
      };
      return (0, import_react2.createElement)(
        Plugin,
        { name: pluginName },
        (0, import_react2.createElement)(Getter, { name: "series", computed: getSeries2 }),
        (0, import_react2.createElement)(Getter, { name: "domains", computed: getDomains2 }),
        (0, import_react2.createElement)(
          Template,
          { name: "series" },
          (0, import_react2.createElement)(TemplatePlaceholder, null),
          (0, import_react2.createElement)(TemplateConnector, null, function(_a5) {
            var series2 = _a5.series, scales = _a5.scales, animation = _a5.animation, rotated = _a5.rotated, layouts = _a5.layouts, clipPathId = _a5.clipPathId, readyToRenderSeries = _a5.readyToRenderSeries;
            var pane = layouts.pane;
            var currentSeries = findSeriesByName(symbolName, series2);
            var currentScales = {
              argScale: scales[ARGUMENT_DOMAIN],
              valScale: scales[getValueDomainName(currentSeries.scaleName)]
            };
            var Path3 = currentSeries.seriesComponent;
            return (0, import_react2.createElement)(Path3, { index: currentSeries.index, pointComponent: currentSeries.pointComponent, coordinates: currentSeries.points, rotated, state: currentSeries.state, color: currentSeries.color, scales: currentScales, pane, clipPathId, animation, readyToRenderSeries });
          })
        )
      );
    };
    Component3.defaultProps = {
      name: "defaultSeriesName"
    };
    return Component3;
  }(import_react2.PureComponent);
  Component2.components = {};
  if (components.Path) {
    Component2.components.seriesComponent = "Path";
  }
  if (components.Point) {
    Component2.components.pointComponent = "Point";
  }
  return withComponents(components)(Component2);
};
var withPatchedProps = function(patch) {
  return function(Target) {
    var Component2 = function(_super) {
      __extends2(Component3, _super);
      function Component3() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      Component3.prototype.render = function() {
        var props = patch(this.props);
        return (0, import_react2.createElement)(Target, __assign3({}, props));
      };
      Component3.components = Target.components;
      return Component3;
    }(import_react2.PureComponent);
    return Component2;
  };
};
var Scale = function(_super) {
  __extends2(Scale2, _super);
  function Scale2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Scale2.prototype.render = function() {
    var _a3 = this.props, name = _a3.name, factory = _a3.factory, modifyDomain = _a3.modifyDomain;
    var args = { factory, modifyDomain };
    var getDomains2 = function(_a4) {
      var domains = _a4.domains;
      return addDomain(domains, name, args);
    };
    return (0, import_react2.createElement)(
      Plugin,
      { name: "Scale" },
      (0, import_react2.createElement)(Getter, { name: "domains", computed: getDomains2 })
    );
  };
  return Scale2;
}(import_react2.PureComponent);
var ArgumentScale = withPatchedProps(function(props) {
  return __assign3(__assign3({}, props), { name: ARGUMENT_DOMAIN });
})(Scale);
var ValueScale = withPatchedProps(function(props) {
  return __assign3(__assign3({}, props), { name: getValueDomainName(props.name) });
})(Scale);
var getDomains = function(_a3) {
  var domains = _a3.domains, series2 = _a3.series;
  return getStackedDomains(domains, series2);
};
var StackBase = function(_super) {
  __extends2(StackBase2, _super);
  function StackBase2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  StackBase2.prototype.render = function() {
    var _a3 = this.props, stacks = _a3.stacks, offset = _a3.offset, order = _a3.order;
    var params = {
      stacks,
      offset,
      order
    };
    var getSeries2 = function(_a4) {
      var series2 = _a4.series, data = _a4.data;
      return getStackedSeries(series2, data, params);
    };
    return (0, import_react2.createElement)(
      Plugin,
      { name: "Stack" },
      (0, import_react2.createElement)(Getter, { name: "series", computed: getSeries2 }),
      (0, import_react2.createElement)(Getter, { name: "domains", computed: getDomains })
    );
  };
  StackBase2.defaultProps = {
    stacks: [],
    offset: diverging_default,
    order: none_default2
  };
  return StackBase2;
}(import_react2.PureComponent);
var AnimationBase = function(_super) {
  __extends2(AnimationBase2, _super);
  function AnimationBase2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  AnimationBase2.prototype.render = function() {
    var _a3 = this.props, easing = _a3.easing, duration2 = _a3.duration;
    var buildAnimationGetter = function() {
      return buildAnimation(easing, duration2);
    };
    return (0, import_react2.createElement)(
      Plugin,
      { name: "Animation" },
      (0, import_react2.createElement)(Getter, { name: "animation", computed: buildAnimationGetter })
    );
  };
  AnimationBase2.defaultProps = {
    easing: easeOutCubic,
    duration: 1e3
  };
  return AnimationBase2;
}(import_react2.PureComponent);
var withStates = function(states) {
  return function(Component2) {
    var ComponentWithStates = function(_super) {
      __extends2(ComponentWithStates2, _super);
      function ComponentWithStates2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      ComponentWithStates2.prototype.render = function() {
        var _a3 = this.props, state = _a3.state, restProps = __rest3(_a3, ["state"]);
        var stateFunc = state && states[state];
        var result = stateFunc ? stateFunc(restProps) : restProps;
        return (0, import_react2.isValidElement)(result) ? result : (0, import_react2.createElement)(Component2, __assign3({}, result));
      };
      return ComponentWithStates2;
    }(import_react2.PureComponent);
    return ComponentWithStates;
  };
};
var Pattern = function(_super) {
  __extends2(Pattern2, _super);
  function Pattern2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Pattern2.prototype.render = function() {
    var _a3 = this.props, id = _a3.id, size = _a3.size, color2 = _a3.color, opacity = _a3.opacity;
    return (0, import_react2.createElement)(
      "defs",
      null,
      (0, import_react2.createElement)(
        "pattern",
        { id, width: size, height: size, patternUnits: "userSpaceOnUse" },
        (0, import_react2.createElement)("rect", { x: 0, y: 0, width: size, height: size, fill: color2, opacity }),
        (0, import_react2.createElement)("path", {
          // tslint:disable-next-line: max-line-length
          d: "M ".concat(size / 2, " ").concat(-size / 2, " L ").concat(-size / 2, " ").concat(size / 2, " M 0 ").concat(size, " L ").concat(size, " 0 M ").concat(size * 1.5, " ").concat(size / 2, " L ").concat(size / 2, " ").concat(size * 1.5),
          strokeWidth: 2,
          stroke: color2
        })
      )
    );
  };
  Pattern2.defaultProps = {
    size: 6,
    opacity: 0.75
  };
  return Pattern2;
}(import_react2.PureComponent);
var withPattern = function(getPatternId, props) {
  return function(Target) {
    return function(targetProps) {
      var color2 = targetProps.color, restProps = __rest3(targetProps, ["color"]);
      var patternId = getPatternId(targetProps);
      return (0, import_react2.createElement)(
        import_react2.Fragment,
        null,
        (0, import_react2.createElement)(Target, __assign3({ color: "url(#".concat(patternId, ")") }, restProps)),
        (0, import_react2.createElement)(Pattern, __assign3({ id: patternId, color: color2 }, props))
      );
    };
  };
};
var withAnimation = function(processAnimation, getProps, getStartCoordinates, isValuesChanged2, getDelay2) {
  return function(Component2) {
    var ComponentWithAnimation = function(_super) {
      __extends2(ComponentWithAnimation2, _super);
      function ComponentWithAnimation2(props) {
        var _this = _super.call(this, props) || this;
        _this.setAttribute = _this.setAttribute.bind(_this);
        return _this;
      }
      ComponentWithAnimation2.prototype.setAttribute = function(state) {
        this.setState(state);
      };
      ComponentWithAnimation2.prototype.componentDidMount = function() {
        var _a3 = this.props, animation = _a3.animation, scales = _a3.scales, index2 = _a3.index, readyToRenderSeries = _a3.readyToRenderSeries;
        if (!readyToRenderSeries) {
          return;
        }
        var props = getProps(this.props);
        this.processComponent(animation, { scales: {} }, scales, props, {}, index2);
      };
      ComponentWithAnimation2.prototype.componentDidUpdate = function(prevProps) {
        var _a3 = this.props, scales = _a3.scales, index2 = _a3.index, animation = _a3.animation, readyToRenderSeries = _a3.readyToRenderSeries;
        if (!readyToRenderSeries) {
          return;
        }
        this.processComponent(animation, prevProps, scales, getProps(this.props), getProps(prevProps), index2);
      };
      ComponentWithAnimation2.prototype.processComponent = function(animation, _a3, scales, props, prevProps, index2) {
        var prevScales = _a3.scales;
        if (!animation) {
          this.setAttribute(props);
        } else if (this.animate) {
          if (isScalesChanged(prevScales, scales)) {
            this.setAttribute(props);
          } else if (isValuesChanged2(prevProps, props)) {
            var delay = getDelay2 ? getDelay2(index2, false) : 0;
            this.animate.update(prevProps, props, delay);
          }
        } else {
          this.animate = animation(getStartCoordinates(scales, props), props, processAnimation, this.setAttribute, getDelay2 && getDelay2(index2, true));
        }
      };
      ComponentWithAnimation2.prototype.componentWillUnmount = function() {
        return this.animate && this.animate.stop();
      };
      ComponentWithAnimation2.prototype.render = function() {
        var _a3 = this.props, readyToRenderSeries = _a3.readyToRenderSeries, restProps = __rest3(_a3, ["readyToRenderSeries"]);
        if (!this.state) {
          return null;
        }
        return (0, import_react2.createElement)(Component2, __assign3({}, restProps, this.state));
      };
      return ComponentWithAnimation2;
    }(import_react2.PureComponent);
    return ComponentWithAnimation;
  };
};
var _a2;
var RawArea = function(_super) {
  __extends2(RawArea2, _super);
  function RawArea2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  RawArea2.prototype.render = function() {
    var _a3 = this.props, path2 = _a3.path, coordinates = _a3.coordinates, animation = _a3.animation, index2 = _a3.index, state = _a3.state, pointComponent = _a3.pointComponent, color2 = _a3.color, clipPathId = _a3.clipPathId, pane = _a3.pane, scales = _a3.scales, rotated = _a3.rotated, restProps = __rest3(_a3, ["path", "coordinates", "animation", "index", "state", "pointComponent", "color", "clipPathId", "pane", "scales", "rotated"]);
    var dPath = path2 === void 0 ? rotated ? dRotateArea : dArea : path2;
    return (0, import_react2.createElement)("path", __assign3({ clipPath: "url(#".concat(clipPathId, ")"), d: dPath(coordinates), fill: color2, opacity: 0.5 }, restProps));
  };
  return RawArea2;
}(import_react2.PureComponent);
var Area = withAnimation(processAreaAnimation, function(_a3) {
  var coordinates = _a3.coordinates;
  return { coordinates };
}, getPathStart, isCoordinatesChanged)(withStates((_a2 = {}, _a2[HOVERED] = withPattern(function(_a3) {
  var index2 = _a3.index, color2 = _a3.color;
  return "series-".concat(index2, "-color-").concat(color2, "-hover");
}, { opacity: 0.75 })(RawArea), _a2[SELECTED] = withPattern(function(_a3) {
  var index2 = _a3.index, color2 = _a3.color;
  return "series-".concat(index2, "-color-").concat(color2, "-selection");
}, { opacity: 0.5 })(RawArea), _a2))(RawArea));
var AreaSeries = declareSeries("AreaSeries", {
  getPointTransformer: getAreaPointTransformer,
  createHitTester: createAreaHitTester,
  components: { Path: Area }
});
var PointCollection = function(_super) {
  __extends2(PointCollection2, _super);
  function PointCollection2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  PointCollection2.prototype.render = function() {
    var _a3 = this.props, pointComponent = _a3.pointComponent, coordinates = _a3.coordinates, index2 = _a3.index, state = _a3.state, clipPathId = _a3.clipPathId, restProps = __rest3(_a3, ["pointComponent", "coordinates", "index", "state", "clipPathId"]);
    var Point3 = pointComponent;
    return coordinates.map(function(point6) {
      return (0, import_react2.createElement)(Point3, __assign3({ key: String(point6.index), seriesIndex: index2 }, restProps, point6));
    });
  };
  return PointCollection2;
}(import_react2.PureComponent);
var _a$12;
var RawBar = function(_super) {
  __extends2(RawBar2, _super);
  function RawBar2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  RawBar2.prototype.render = function() {
    var _a3 = this.props, arg = _a3.arg, val = _a3.val, startVal = _a3.startVal, barWidth = _a3.barWidth, maxBarWidth = _a3.maxBarWidth, animation = _a3.animation, argument = _a3.argument, value = _a3.value, seriesIndex = _a3.seriesIndex, index2 = _a3.index, state = _a3.state, rotated = _a3.rotated, color2 = _a3.color, pane = _a3.pane, scales = _a3.scales, restProps = __rest3(_a3, ["arg", "val", "startVal", "barWidth", "maxBarWidth", "animation", "argument", "value", "seriesIndex", "index", "state", "rotated", "color", "pane", "scales"]);
    var width = barWidth * maxBarWidth;
    var bar = dBar(arg, val, startVal, width, rotated);
    var visibility = getVisibility(pane, bar.x + bar.width / 2, bar.y + bar.height, bar.width, bar.height);
    var adjustedBar = visibility === "visible" ? adjustBarSize(bar, pane) : bar;
    return (0, import_react2.createElement)("rect", __assign3({}, adjustedBar, { fill: color2, visibility }, restProps));
  };
  return RawBar2;
}(import_react2.PureComponent);
var Bar = withAnimation(processBarAnimation, function(_a3) {
  var arg = _a3.arg, val = _a3.val, startVal = _a3.startVal;
  return { arg, val, startVal };
}, getPointStart, isValuesChanged)(withStates((_a$12 = {}, _a$12[HOVERED] = withPattern(function(_a3) {
  var seriesIndex = _a3.seriesIndex, index2 = _a3.index, color2 = _a3.color;
  return "series-".concat(seriesIndex, "-point-").concat(index2, "-color-").concat(color2, "-hover");
}, { opacity: 0.75 })(RawBar), _a$12[SELECTED] = withPattern(function(_a3) {
  var seriesIndex = _a3.seriesIndex, index2 = _a3.index, color2 = _a3.color;
  return "series-".concat(seriesIndex, "-point-").concat(index2, "-color-").concat(color2, "-selection");
}, { opacity: 0.5 })(RawBar), _a$12))(RawBar));
var BarSeries = declareSeries("BarSeries", {
  getPointTransformer: getBarPointTransformer,
  createHitTester: createBarHitTester,
  components: { Path: PointCollection, Point: Bar }
});
BarSeries.defaultProps = {
  barWidth: 0.9
};
var _a$2;
var RawPath = function(_super) {
  __extends2(RawPath2, _super);
  function RawPath2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  RawPath2.prototype.render = function() {
    var _a3 = this.props, path2 = _a3.path, animation = _a3.animation, coordinates = _a3.coordinates, rotated = _a3.rotated, index2 = _a3.index, state = _a3.state, pointComponent = _a3.pointComponent, color2 = _a3.color, clipPathId = _a3.clipPathId, scales = _a3.scales, pane = _a3.pane, restProps = __rest3(_a3, ["path", "animation", "coordinates", "rotated", "index", "state", "pointComponent", "color", "clipPathId", "scales", "pane"]);
    return (0, import_react2.createElement)("path", __assign3({ clipPath: "url(#".concat(clipPathId, ")"), d: path2(coordinates), fill: "none", strokeWidth: 2, stroke: color2 }, restProps));
  };
  return RawPath2;
}(import_react2.PureComponent);
var Path2 = withAnimation(processLineAnimation, function(_a3) {
  var coordinates = _a3.coordinates;
  return { coordinates };
}, getPathStart, isCoordinatesChanged)(withStates((_a$2 = {}, _a$2[HOVERED] = function(props) {
  return __assign3({ strokeWidth: 4 }, props);
}, _a$2[SELECTED] = function(props) {
  return __assign3({ strokeWidth: 4 }, props);
}, _a$2))(RawPath));
var Line = function(_super) {
  __extends2(Line3, _super);
  function Line3() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Line3.prototype.render = function() {
    var _a3 = this.props, rotated = _a3.rotated, path2 = _a3.path;
    var dPath = path2 === void 0 ? rotated ? dRotateLine : dLine : path2;
    return (0, import_react2.createElement)(Path2, __assign3({}, this.props, { path: dPath }));
  };
  return Line3;
}(import_react2.PureComponent);
var LineSeries = declareSeries("LineSeries", {
  getPointTransformer: getLinePointTransformer,
  createHitTester: createLineHitTester,
  components: { Path: Line }
});
var _a$3;
var RawSlice = function(_super) {
  __extends2(RawSlice2, _super);
  function RawSlice2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  RawSlice2.prototype.render = function() {
    var _a3 = this.props, arg = _a3.arg, val = _a3.val, rotated = _a3.rotated, argument = _a3.argument, value = _a3.value, seriesIndex = _a3.seriesIndex, index2 = _a3.index, state = _a3.state, maxRadius = _a3.maxRadius, innerRadius = _a3.innerRadius, outerRadius = _a3.outerRadius, startAngle = _a3.startAngle, endAngle = _a3.endAngle, color2 = _a3.color, animation = _a3.animation, pane = _a3.pane, scales = _a3.scales, restProps = __rest3(_a3, ["arg", "val", "rotated", "argument", "value", "seriesIndex", "index", "state", "maxRadius", "innerRadius", "outerRadius", "startAngle", "endAngle", "color", "animation", "pane", "scales"]);
    return (0, import_react2.createElement)(
      "g",
      { transform: "translate(".concat(arg, " ").concat(val, ")") },
      (0, import_react2.createElement)("path", __assign3({ d: dPie(maxRadius, innerRadius, outerRadius, startAngle, endAngle), fill: color2, stroke: "none" }, restProps))
    );
  };
  return RawSlice2;
}(import_react2.PureComponent);
var Slice = withAnimation(processPieAnimation, function(_a3) {
  var innerRadius = _a3.innerRadius, outerRadius = _a3.outerRadius, startAngle = _a3.startAngle, endAngle = _a3.endAngle;
  return { innerRadius, outerRadius, startAngle, endAngle };
}, getPieStart, isValuesChanged, getDelay)(withStates((_a$3 = {}, _a$3[HOVERED] = withPattern(function(_a3) {
  var seriesIndex = _a3.seriesIndex, index2 = _a3.index, color2 = _a3.color;
  return "series-".concat(seriesIndex, "-point-").concat(index2, "-color-").concat(color2, "-hover");
}, { opacity: 0.75 })(RawSlice), _a$3[SELECTED] = withPattern(function(_a3) {
  var seriesIndex = _a3.seriesIndex, index2 = _a3.index, color2 = _a3.color;
  return "series-".concat(seriesIndex, "-point-").concat(index2, "-color-").concat(color2, "-selection");
}, { opacity: 0.5 })(RawSlice), _a$3))(RawSlice));
var PieSeries = declareSeries("PieSeries", {
  getPointTransformer: getPiePointTransformer,
  createHitTester: createPieHitTester,
  components: { Path: PointCollection, Point: Slice }
});
PieSeries.defaultProps = {
  innerRadius: 0,
  outerRadius: 1
};
var _a$4;
var RawPoint = function(_super) {
  __extends2(RawPoint2, _super);
  function RawPoint2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  RawPoint2.prototype.render = function() {
    var _a3 = this.props, arg = _a3.arg, val = _a3.val, rotated = _a3.rotated, animation = _a3.animation, argument = _a3.argument, value = _a3.value, seriesIndex = _a3.seriesIndex, index2 = _a3.index, state = _a3.state, pointOptions = _a3.point, color2 = _a3.color, pane = _a3.pane, scales = _a3.scales, restProps = __rest3(_a3, ["arg", "val", "rotated", "animation", "argument", "value", "seriesIndex", "index", "state", "point", "color", "pane", "scales"]);
    var x2 = rotated ? val : arg;
    var y2 = rotated ? arg : val;
    var visibility = getVisibility(pane, x2, y2, 0, 0);
    return (0, import_react2.createElement)("path", __assign3({ transform: "translate(".concat(x2, " ").concat(y2, ")"), d: dSymbol(pointOptions), fill: color2, visibility, stroke: "none" }, restProps));
  };
  return RawPoint2;
}(import_react2.PureComponent);
var getAdjustedOptions = function(_a3) {
  var size = _a3.size;
  return { size: Math.round(size * 1.7) };
};
var Point = withAnimation(processPointAnimation, function(_a3) {
  var arg = _a3.arg, val = _a3.val;
  return { arg, val };
}, getPointStart, isValuesChanged)(withStates((_a$4 = {}, _a$4[HOVERED] = function(_a3) {
  var color2 = _a3.color, point6 = _a3.point, restProps = __rest3(_a3, ["color", "point"]);
  return __assign3({ stroke: color2, strokeWidth: 4, fill: "none", point: getAdjustedOptions(point6) }, restProps);
}, _a$4[SELECTED] = function(_a3) {
  var color2 = _a3.color, point6 = _a3.point, restProps = __rest3(_a3, ["color", "point"]);
  return __assign3({ stroke: color2, strokeWidth: 4, fill: "none", point: getAdjustedOptions(point6) }, restProps);
}, _a$4))(RawPoint));
var ScatterSeries = declareSeries("ScatterSeries", {
  getPointTransformer: getScatterPointTransformer,
  createHitTester: createScatterHitTester,
  components: { Path: PointCollection, Point }
});
ScatterSeries.defaultProps = {
  point: { size: 7 }
};
var Spline = function(_super) {
  __extends2(Spline2, _super);
  function Spline2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Spline2.prototype.render = function() {
    var _a3 = this.props, rotated = _a3.rotated, path2 = _a3.path;
    var dPath = path2 === void 0 ? rotated ? dRotateSpline : dSpline : path2;
    return (0, import_react2.createElement)(Path2, __assign3({}, this.props, { path: dPath }));
  };
  return Spline2;
}(import_react2.PureComponent);
var SplineSeries = declareSeries("SplineSeries", {
  getPointTransformer: getLinePointTransformer,
  createHitTester: createSplineHitTester,
  components: { Path: Spline }
});
var getOffset2 = function(position) {
  return position >= 0 ? 0 : -position;
};
var getSize = function(position, delta) {
  return position >= 0 ? position + delta : -position;
};
var Root$1 = function(_super) {
  __extends2(Root3, _super);
  function Root3(props) {
    var _this = _super.call(this, props) || this;
    _this.ref = (0, import_react2.createRef)();
    _this.state = {
      x: 0,
      y: 0
    };
    _this.adjust = _this.adjust.bind(_this);
    return _this;
  }
  Root3.prototype.componentDidMount = function() {
    this.setState(this.adjust);
  };
  Root3.prototype.componentDidUpdate = function() {
    this.setState(this.adjust);
  };
  Root3.prototype.adjust = function(_4, _a3) {
    var dx = _a3.dx, dy = _a3.dy, onSizeChange = _a3.onSizeChange;
    var bbox = this.ref.current.getBBox();
    var width = dx ? bbox.width : getSize(bbox.x, bbox.width);
    var height = dy ? bbox.height : getSize(bbox.y, bbox.height);
    var x2 = dx ? 0 : getOffset2(bbox.x);
    var y2 = dy ? 0 : getOffset2(bbox.y);
    onSizeChange({ width, height });
    return { x: x2, y: y2 };
  };
  Root3.prototype.render = function() {
    var _a3 = this.props, children = _a3.children, onSizeChange = _a3.onSizeChange, dx = _a3.dx, dy = _a3.dy, restProps = __rest3(_a3, ["children", "onSizeChange", "dx", "dy"]);
    var _b2 = this.state, x2 = _b2.x, y2 = _b2.y;
    return (0, import_react2.createElement)("g", __assign3({ ref: this.ref, transform: "translate(".concat(x2, " ").concat(y2, ")") }, restProps), children);
  };
  return Root3;
}(import_react2.PureComponent);
var Label$1 = function(_super) {
  __extends2(Label3, _super);
  function Label3() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Label3.prototype.render = function() {
    var _a3 = this.props, text = _a3.text, restProps = __rest3(_a3, ["text"]);
    return (0, import_react2.createElement)("text", __assign3({}, restProps), text);
  };
  return Label3;
}(import_react2.PureComponent);
var Line$1 = function(_super) {
  __extends2(Line3, _super);
  function Line3() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Line3.prototype.render = function() {
    var _a3 = this.props, x1 = _a3.x1, x2 = _a3.x2, y1 = _a3.y1, y2 = _a3.y2, restProps = __rest3(_a3, ["x1", "x2", "y1", "y2"]);
    return (0, import_react2.createElement)("path", __assign3({ d: "M ".concat(x1, " ").concat(y1, " L ").concat(x2, " ").concat(y2) }, restProps));
  };
  return Line3;
}(import_react2.PureComponent);
var SVG_STYLE$1 = {
  position: "absolute",
  left: 0,
  top: 0,
  overflow: "visible"
};
var RawAxis = function(_super) {
  __extends2(RawAxis2, _super);
  function RawAxis2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.rootRef = (0, import_react2.createRef)();
    _this.adjustedWidth = 0;
    _this.adjustedHeight = 0;
    return _this;
  }
  RawAxis2.prototype.renderAxis = function(position) {
    var _this = this;
    var _a3 = this.props, scaleName = _a3.scaleName, tickSize = _a3.tickSize, tickFormat2 = _a3.tickFormat, indentFromAxis = _a3.indentFromAxis, showTicks = _a3.showTicks, showLine = _a3.showLine, showLabels = _a3.showLabels, RootComponent = _a3.rootComponent, TickComponent = _a3.tickComponent, LabelComponent = _a3.labelComponent, LineComponent = _a3.lineComponent;
    var placeholder = "".concat(position, "-axis");
    var layoutName = "".concat(placeholder, "-").concat(scaleName);
    return (0, import_react2.createElement)(
      Template,
      { name: placeholder },
      (0, import_react2.createElement)(TemplatePlaceholder, null),
      (0, import_react2.createElement)(TemplateConnector, null, function(_a4, _b2) {
        var scales = _a4.scales, layouts = _a4.layouts, rotated = _a4.rotated;
        var changeBBox = _b2.changeBBox;
        if (!isValidPosition(position, scaleName, rotated)) {
          return null;
        }
        var scale = scales[scaleName];
        if (!scale) {
          return null;
        }
        var _c = layouts[layoutName] || { width: 0, height: 0 }, width = _c.width, height = _c.height;
        var paneSize = layouts.pane;
        var _d = getTickCoordinates({
          callback: tickCoordinatesGetter,
          scaleName,
          position,
          tickSize,
          tickFormat: tickFormat2,
          indentFromAxis,
          scale,
          paneSize: [paneSize.width, paneSize.height],
          rotated
        }), _e = __read4(_d.sides, 2), dx = _e[0], dy = _e[1], ticks = _d.ticks;
        var handleSizeChange = function(size) {
          var rect = _this.rootRef.current.getBoundingClientRect();
          var rectSize = [dx ? rect.width : size.width, dy ? rect.height : size.height];
          if (rectSize[0] === _this.adjustedWidth && rectSize[1] === _this.adjustedHeight) {
            return;
          }
          _this.adjustedWidth = rectSize[0];
          _this.adjustedHeight = rectSize[1];
          changeBBox({ placeholder: layoutName, bBox: size });
        };
        return (0, import_react2.createElement)(
          "div",
          { style: {
            position: "relative",
            width: dy * width || void 0,
            height: dx * height || void 0,
            flexGrow: dx || void 0
          }, ref: _this.rootRef },
          (0, import_react2.createElement)(
            "svg",
            { width: _this.adjustedWidth, height: _this.adjustedHeight, style: SVG_STYLE$1 },
            (0, import_react2.createElement)(
              RootComponent,
              { dx, dy, onSizeChange: handleSizeChange },
              showTicks && ticks.map(function(_a5) {
                var x1 = _a5.x1, x2 = _a5.x2, y1 = _a5.y1, y2 = _a5.y2, key = _a5.key;
                return (0, import_react2.createElement)(TickComponent, { key, x1, x2, y1, y2 });
              }),
              showLine && (0, import_react2.createElement)(LineComponent, { x1: 0, x2: dx * paneSize.width, y1: 0, y2: dy * paneSize.height }),
              showLabels && ticks.map(function(_a5) {
                var text = _a5.text, xText = _a5.xText, yText = _a5.yText, delta = _a5.dy, textAnchor = _a5.textAnchor, key = _a5.key;
                return (0, import_react2.createElement)(LabelComponent, { key, text, x: xText, y: yText, dy: delta, textAnchor });
              })
            )
          )
        );
      })
    );
  };
  RawAxis2.prototype.renderGrid = function() {
    var _a3 = this.props, scaleName = _a3.scaleName, showGrid = _a3.showGrid, GridComponent = _a3.gridComponent;
    return (0, import_react2.createElement)(
      Template,
      { name: "series" },
      (0, import_react2.createElement)(TemplatePlaceholder, null),
      (0, import_react2.createElement)(TemplateConnector, null, function(_a4) {
        var scales = _a4.scales, layouts = _a4.layouts, rotated = _a4.rotated;
        var scale = scales[scaleName];
        if (!scale || !showGrid) {
          return null;
        }
        var _b2 = layouts.pane, width = _b2.width, height = _b2.height;
        var _c = getTickCoordinates({
          callback: gridCoordinatesGetter,
          scaleName,
          scale,
          paneSize: [width, height],
          rotated
        }), ticks = _c.ticks, _d = __read4(_c.sides, 2), dx = _d[0], dy = _d[1];
        return (0, import_react2.createElement)(import_react2.Fragment, null, ticks.map(function(_a5) {
          var key = _a5.key, x1 = _a5.x1, y1 = _a5.y1;
          return (0, import_react2.createElement)(GridComponent, { key, x1, x2: x1 + dy * width, y1, y2: y1 + dx * height });
        }));
      })
    );
  };
  RawAxis2.prototype.render = function() {
    var position = this.props.position;
    var rotatedPosition = getRotatedPosition(position);
    return (0, import_react2.createElement)(
      Plugin,
      { name: "Axis" },
      (0, import_react2.createElement)(Getter, { name: "axesExist", value: true }),
      this.renderAxis(position),
      this.renderAxis(rotatedPosition),
      this.renderGrid()
    );
  };
  RawAxis2.components = {
    rootComponent: "Root",
    tickComponent: "Tick",
    labelComponent: "Label",
    lineComponent: "Line",
    gridComponent: "Grid"
  };
  RawAxis2.defaultProps = {
    tickSize: 5,
    indentFromAxis: 10
  };
  return RawAxis2;
}(import_react2.PureComponent);
var Axis = withComponents({
  Label: Label$1,
  Line: Line$1,
  Root: Root$1,
  Tick: Line$1,
  Grid: Line$1
})(RawAxis);
var ArgumentAxis = withPatchedProps(function(props) {
  return __assign3(__assign3({ position: BOTTOM, showGrid: false, showTicks: true, showLine: true, showLabels: true }, props), { scaleName: ARGUMENT_DOMAIN });
})(Axis);
var ValueAxis = withPatchedProps(function(props) {
  return __assign3(__assign3({ position: LEFT, showGrid: true, showTicks: false, showLine: false, showLabels: true }, props), { scaleName: getValueDomainName(props.scaleName) });
})(Axis);
var dependencies = [{ name: "EventTracker", optional: true }];
var TooltipBase = function(_super) {
  __extends2(TooltipBase2, _super);
  function TooltipBase2(props) {
    var _this = _super.call(this, props) || this;
    _this.state = {
      target: props.targetItem || props.defaultTargetItem
    };
    var handlePointerMove = _this.handlePointerMove.bind(_this);
    _this.getPointerMoveHandlers = function(_a3) {
      var _b2 = _a3.pointerMoveHandlers, pointerMoveHandlers = _b2 === void 0 ? [] : _b2;
      return __spreadArray4(__spreadArray4([], __read4(pointerMoveHandlers), false), [
        handlePointerMove
      ], false);
    };
    return _this;
  }
  TooltipBase2.getDerivedStateFromProps = function(props, state) {
    return { target: props.targetItem !== void 0 ? props.targetItem : state.target };
  };
  TooltipBase2.prototype.handlePointerMove = function(_a3) {
    var targets = _a3.targets;
    this.setState(function(_a4, _b2) {
      var currentTarget = _a4.target;
      var onTargetItemChange = _b2.onTargetItemChange;
      var target = processHandleTooltip(targets, currentTarget, onTargetItemChange);
      if (target === void 0) {
        return null;
      }
      return { target };
    });
  };
  TooltipBase2.prototype.render = function() {
    var _a3 = this.props, OverlayComponent = _a3.overlayComponent, ContentComponent = _a3.contentComponent, SheetComponent = _a3.sheetComponent, arrowComponent = _a3.arrowComponent;
    var target = this.state.target;
    return (0, import_react2.createElement)(
      Plugin,
      { name: "Tooltip", dependencies },
      (0, import_react2.createElement)(Getter, { name: "pointerMoveHandlers", computed: this.getPointerMoveHandlers }),
      (0, import_react2.createElement)(
        Template,
        { name: "series" },
        (0, import_react2.createElement)(TemplatePlaceholder, null),
        (0, import_react2.createElement)(TemplateConnector, null, function(_a4) {
          var series2 = _a4.series, rootRef = _a4.rootRef, rotated = _a4.rotated;
          if (!target) {
            return null;
          }
          var _b2 = getParameters(series2, target), text = _b2.text, element = _b2.element;
          return (0, import_react2.createElement)(
            OverlayComponent,
            { key: "".concat(target.series).concat(target.point), target: createReference(element, rootRef), rotated, arrowComponent },
            (0, import_react2.createElement)(
              SheetComponent,
              null,
              (0, import_react2.createElement)(ContentComponent, { text, targetItem: target })
            )
          );
        })
      )
    );
  };
  TooltipBase2.components = {
    overlayComponent: "Overlay",
    contentComponent: "Content",
    arrowComponent: "Arrow",
    sheetComponent: "Sheet"
  };
  return TooltipBase2;
}(import_react2.PureComponent);
var Tooltip = TooltipBase;
var DragBox = function(_super) {
  __extends2(DragBox3, _super);
  function DragBox3() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  DragBox3.prototype.render = function() {
    var _a3 = this.props, rect = _a3.rect, restProps = __rest3(_a3, ["rect"]);
    return (0, import_react2.createElement)("rect", __assign3({ x: rect.x, y: rect.y, width: rect.width, height: rect.height }, restProps));
  };
  return DragBox3;
}(import_react2.PureComponent);
var events = {
  wheel: { func: "onWheel" },
  mousedown: {
    func: "onStart",
    extraEvents: ["mousemove", "mouseup"]
  },
  touchstart: {
    func: "onStart",
    extraEvents: ["touchmove", "touchend"]
  }
};
var ZoomPanProvider = function(_super) {
  __extends2(ZoomPanProvider2, _super);
  function ZoomPanProvider2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  ZoomPanProvider2.prototype.componentDidMount = function() {
    var _this = this;
    this.svgElement = this.props.rootRef.current;
    setCursorType(this.svgElement);
    this.windowHandlers = Object.keys(events).reduce(function(prev, key) {
      var _a3, _b2;
      var extraEvents = events[key].extraEvents;
      if (extraEvents) {
        return __assign3(__assign3({}, prev), (_a3 = {}, _a3[key] = (_b2 = {}, _b2[extraEvents[0]] = function(event) {
          _this.props.onMove(event);
        }, _b2[extraEvents[1]] = function(event) {
          _this.props.onEnd(event);
          setCursorType(_this.svgElement);
          detachEvents(window, _this.windowHandlers[key]);
        }, _b2), _a3));
      }
      return prev;
    }, {});
    this.handlers = Object.keys(events).reduce(function(prev, key) {
      var _a3;
      return __assign3(__assign3({}, prev), (_a3 = {}, _a3[key] = function(e) {
        _this.props[events[key].func](e);
        if (events[key].extraEvents) {
          attachEvents(window, _this.windowHandlers[key]);
        }
      }, _a3));
    }, {});
    attachEvents(this.svgElement, this.handlers);
  };
  ZoomPanProvider2.prototype.componentWillUnmount = function() {
    var _this = this;
    detachEvents(this.svgElement, this.handlers);
    Object.keys(this.windowHandlers).forEach(function(el) {
      detachEvents(window, _this.windowHandlers[el]);
    });
  };
  ZoomPanProvider2.prototype.render = function() {
    return null;
  };
  return ZoomPanProvider2;
}(import_react2.PureComponent);
var ZoomAndPanBase = function(_super) {
  __extends2(ZoomAndPanBase2, _super);
  function ZoomAndPanBase2(props) {
    var _this = _super.call(this, props) || this;
    _this.multiTouchDelta = null;
    _this.lastCoordinates = null;
    _this.rectOrigin = null;
    _this.offset = [0, 0];
    _this.state = {
      viewport: props.viewport || props.defaultViewport,
      rectBox: null
    };
    return _this;
  }
  ZoomAndPanBase2.getDerivedStateFromProps = function(props, state) {
    return {
      viewport: props.viewport !== void 0 ? props.viewport : state.viewport
    };
  };
  ZoomAndPanBase2.prototype.handleStart = function(zoomRegionKey, e) {
    e.preventDefault();
    this.offset = getOffset(e.currentTarget);
    var coords = getEventCoords(e, this.offset);
    if (isKeyPressed(e, zoomRegionKey)) {
      this.rectOrigin = coords;
    } else {
      setCursorType(e.currentTarget, "grabbing");
    }
    if (isMultiTouch(e)) {
      this.multiTouchDelta = getDeltaForTouches(e.touches).delta;
    }
    this.lastCoordinates = coords;
  };
  ZoomAndPanBase2.prototype.handleMove = function(scales, rotated, e, pane) {
    e.preventDefault();
    clear();
    if (isMultiTouch(e)) {
      var current = getDeltaForTouches(e.touches);
      this.zoom(scales, rotated, current.delta - this.multiTouchDelta, current.center);
      this.multiTouchDelta = current.delta;
    } else {
      this.scroll(scales, rotated, e, pane);
    }
  };
  ZoomAndPanBase2.prototype.scroll = function(scales, rotated, e, pane) {
    var _this = this;
    var coords = getEventCoords(e, this.offset);
    var deltaX = coords[0] - this.lastCoordinates[0];
    var deltaY = coords[1] - this.lastCoordinates[1];
    this.lastCoordinates = coords;
    this.setState(function(_a3, _b2) {
      var viewport = _a3.viewport;
      var onViewportChange = _b2.onViewportChange, interactionWithArguments = _b2.interactionWithArguments, interactionWithValues = _b2.interactionWithValues;
      if (_this.rectOrigin) {
        return {
          rectBox: getRect$1(rotated, interactionWithArguments, interactionWithValues, _this.rectOrigin, coords, pane)
        };
      }
      return getViewport(scales, rotated, [interactionWithArguments, interactionWithValues], "pan", [-deltaX, -deltaY], null, null, viewport, onViewportChange);
    });
  };
  ZoomAndPanBase2.prototype.handleEnd = function(scales, rotated) {
    var _this = this;
    this.lastCoordinates = null;
    this.multiTouchDelta = null;
    if (this.rectOrigin) {
      this.setState(function(_a3, _b2) {
        var viewport = _a3.viewport, rectBox = _a3.rectBox;
        var onViewportChange = _b2.onViewportChange, interactionWithArguments = _b2.interactionWithArguments, interactionWithValues = _b2.interactionWithValues;
        if (rectBox === null)
          return {};
        _this.rectOrigin = null;
        return __assign3({ rectBox: null }, getViewport(scales, rotated, [interactionWithArguments, interactionWithValues], "zoom", null, null, [
          [rectBox.x, rectBox.x + rectBox.width],
          [rectBox.y, rectBox.y + rectBox.height]
        ], viewport, onViewportChange));
      });
    }
  };
  ZoomAndPanBase2.prototype.zoom = function(scales, rotated, delta, anchors) {
    this.setState(function(_a3, _b2) {
      var viewport = _a3.viewport;
      var onViewportChange = _b2.onViewportChange, interactionWithArguments = _b2.interactionWithArguments, interactionWithValues = _b2.interactionWithValues;
      return getViewport(scales, rotated, [interactionWithArguments, interactionWithValues], "zoom", [delta, delta], anchors, null, viewport, onViewportChange);
    });
  };
  ZoomAndPanBase2.prototype.handleZoom = function(scales, rotated, e) {
    e.preventDefault();
    var center = getEventCoords(e, getOffset(e.currentTarget));
    this.zoom(scales, rotated, getWheelDelta(e), center);
  };
  ZoomAndPanBase2.prototype.render = function() {
    var _this = this;
    var _a3 = this.state, viewport = _a3.viewport, rectBox = _a3.rectBox;
    var _b2 = this.props, DragBoxComponent = _b2.dragBoxComponent, zoomRegionKey = _b2.zoomRegionKey;
    var getAdjustedLayout = function(_a4) {
      var domains = _a4.domains, ranges = _a4.ranges;
      return adjustLayout(domains, ranges, viewport);
    };
    return (0, import_react2.createElement)(
      Plugin,
      { name: "zoomAndPan" },
      (0, import_react2.createElement)(Getter, { name: "ranges", computed: getAdjustedLayout }),
      (0, import_react2.createElement)(
        Template,
        { name: "root" },
        (0, import_react2.createElement)(TemplatePlaceholder, null),
        (0, import_react2.createElement)(TemplateConnector, null, function(_a4) {
          var scales = _a4.scales, rotated = _a4.rotated, rootRef = _a4.rootRef, layouts = _a4.layouts;
          return (0, import_react2.createElement)(ZoomPanProvider, { rootRef, onWheel: function(e) {
            return _this.handleZoom(scales, rotated, e);
          }, onStart: function(e) {
            return _this.handleStart(zoomRegionKey, e);
          }, onMove: function(e) {
            return _this.handleMove(scales, rotated, e, layouts.pane);
          }, onEnd: function(e) {
            return _this.handleEnd(scales, rotated);
          } });
        })
      ),
      (0, import_react2.createElement)(
        Template,
        { name: "series" },
        (0, import_react2.createElement)(TemplatePlaceholder, null),
        rectBox ? (0, import_react2.createElement)(DragBoxComponent, { rect: rectBox }) : null
      )
    );
  };
  ZoomAndPanBase2.components = {
    dragBoxComponent: "DragBox"
  };
  ZoomAndPanBase2.defaultProps = {
    interactionWithValues: "none",
    interactionWithArguments: "both",
    zoomRegionKey: "shift"
  };
  return ZoomAndPanBase2;
}(import_react2.PureComponent);
var ZoomAndPan = withComponents({ DragBox })(ZoomAndPanBase);
var wrapToList = function(arg) {
  return arg ? [arg] : [];
};
var EVENT_NAME_TO_REACT_MAP = {
  click: "onClick",
  mousemove: "onMouseMove",
  mouseleave: "onMouseLeave",
  touchstart: "onTouchStart"
};
var translateEventNames = function(handlers) {
  var result = {};
  Object.entries(handlers).forEach(function(_a3) {
    var _b2 = __read4(_a3, 2), name = _b2[0], handler = _b2[1];
    result[EVENT_NAME_TO_REACT_MAP[name]] = handler;
  });
  return result;
};
var EventTrackerBase = function(_super) {
  __extends2(EventTrackerBase2, _super);
  function EventTrackerBase2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  EventTrackerBase2.prototype.render = function() {
    var _a3 = this.props, onClick = _a3.onClick, onPointerMove = _a3.onPointerMove;
    return (0, import_react2.createElement)(
      Plugin,
      { name: "EventTracker" },
      (0, import_react2.createElement)(Getter, { name: "clickHandlers", value: wrapToList(onClick) }),
      (0, import_react2.createElement)(Getter, { name: "pointerMoveHandlers", value: wrapToList(onPointerMove) }),
      (0, import_react2.createElement)(Template, { name: "canvas" }, function(params) {
        return (0, import_react2.createElement)(TemplateConnector, null, function(_a4) {
          var series2 = _a4.series, clickHandlers = _a4.clickHandlers, pointerMoveHandlers = _a4.pointerMoveHandlers;
          var handlers = buildEventHandlers(series2, { clickHandlers, pointerMoveHandlers });
          return (0, import_react2.createElement)(TemplatePlaceholder, { params: __assign3(__assign3({}, params), translateEventNames(handlers)) });
        });
      })
    );
  };
  return EventTrackerBase2;
}(import_react2.PureComponent);
var dependencies$1 = [{ name: "EventTracker", optional: true }];
var HoverStateBase = function(_super) {
  __extends2(HoverStateBase2, _super);
  function HoverStateBase2(props) {
    var _this = _super.call(this, props) || this;
    _this.state = {
      hover: props.hover || props.defaultHover
    };
    var handlePointerMove = _this.handlePointerMove.bind(_this);
    _this.getPointerMoveHandlers = function(_a3) {
      var _b2 = _a3.pointerMoveHandlers, pointerMoveHandlers = _b2 === void 0 ? [] : _b2;
      return __spreadArray4(__spreadArray4([], __read4(pointerMoveHandlers), false), [
        handlePointerMove
      ], false);
    };
    return _this;
  }
  HoverStateBase2.getDerivedStateFromProps = function(props, state) {
    return { hover: props.hover !== void 0 ? props.hover : state.hover };
  };
  HoverStateBase2.prototype.handlePointerMove = function(_a3) {
    var targets = _a3.targets;
    this.setState(function(_a4, _b2) {
      var currentTarget = _a4.hover;
      var onHoverChange = _b2.onHoverChange;
      var hover = processPointerMove(targets, currentTarget, onHoverChange);
      return hover !== void 0 ? { hover } : null;
    });
  };
  HoverStateBase2.prototype.render = function() {
    var hover = this.state.hover;
    var targets = hover ? [hover] : [];
    var getSeries2 = function(_a3) {
      var series2 = _a3.series;
      return changeSeriesState(series2, targets, HOVERED);
    };
    return (0, import_react2.createElement)(
      Plugin,
      { name: "HoverState", dependencies: dependencies$1 },
      (0, import_react2.createElement)(Getter, { name: "pointerMoveHandlers", computed: this.getPointerMoveHandlers }),
      (0, import_react2.createElement)(Getter, { name: "series", computed: getSeries2 })
    );
  };
  return HoverStateBase2;
}(import_react2.PureComponent);
var SelectionStateBase = function(_super) {
  __extends2(SelectionStateBase2, _super);
  function SelectionStateBase2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  SelectionStateBase2.prototype.render = function() {
    var selection = this.props.selection;
    var targets = selection || [];
    var getSeries2 = function(_a3) {
      var series2 = _a3.series;
      return changeSeriesState(series2, targets, SELECTED);
    };
    return (0, import_react2.createElement)(
      Plugin,
      { name: "SelectionState" },
      (0, import_react2.createElement)(Getter, { name: "series", computed: getSeries2 })
    );
  };
  return SelectionStateBase2;
}(import_react2.PureComponent);

// node_modules/@mui/material/colors/index.js
init_common();
init_red();
init_purple();
init_blue();
init_lightBlue();
init_green();
init_orange();
init_grey();

// node_modules/@mui/material/index.js
init_utils();

// node_modules/@mui/material/Accordion/Accordion.js
init_objectWithoutPropertiesLoose();
init_extends();
var React3 = __toESM(require_react());
var import_react_is = __toESM(require_react_is());
var import_prop_types3 = __toESM(require_prop_types());
init_clsx_m();
init_esm();
init_base();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/Collapse/Collapse.js
init_objectWithoutPropertiesLoose();
init_extends();
var React = __toESM(require_react());
init_clsx_m();
var import_prop_types2 = __toESM(require_prop_types());
init_esm();
init_base();
init_styled();
init_useThemeProps();
init_createTransitions();
init_utils();

// node_modules/@mui/material/Collapse/collapseClasses.js
init_esm();
init_generateUtilityClass();
function getCollapseUtilityClass(slot) {
  return generateUtilityClass("MuiCollapse", slot);
}
var collapseClasses = generateUtilityClasses("MuiCollapse", ["root", "horizontal", "vertical", "entered", "hidden", "wrapper", "wrapperInner"]);

// node_modules/@mui/material/Collapse/Collapse.js
var import_jsx_runtime = __toESM(require_jsx_runtime());
var _excluded = ["addEndListener", "children", "className", "collapsedSize", "component", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "orientation", "style", "timeout", "TransitionComponent"];
var useUtilityClasses = (ownerState) => {
  const {
    orientation,
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root", `${orientation}`],
    entered: ["entered"],
    hidden: ["hidden"],
    wrapper: ["wrapper", `${orientation}`],
    wrapperInner: ["wrapperInner", `${orientation}`]
  };
  return composeClasses(slots, getCollapseUtilityClass, classes2);
};
var CollapseRoot = styled_default("div", {
  name: "MuiCollapse",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, styles20[ownerState.orientation], ownerState.state === "entered" && styles20.entered, ownerState.state === "exited" && !ownerState.in && ownerState.collapsedSize === "0px" && styles20.hidden];
  }
})(({
  theme,
  ownerState
}) => _extends({
  height: 0,
  overflow: "hidden",
  transition: theme.transitions.create("height")
}, ownerState.orientation === "horizontal" && {
  height: "auto",
  width: 0,
  transition: theme.transitions.create("width")
}, ownerState.state === "entered" && _extends({
  height: "auto",
  overflow: "visible"
}, ownerState.orientation === "horizontal" && {
  width: "auto"
}), ownerState.state === "exited" && !ownerState.in && ownerState.collapsedSize === "0px" && {
  visibility: "hidden"
}));
var CollapseWrapper = styled_default("div", {
  name: "MuiCollapse",
  slot: "Wrapper",
  overridesResolver: (props, styles20) => styles20.wrapper
})(({
  ownerState
}) => _extends({
  // Hack to get children with a negative margin to not falsify the height computation.
  display: "flex",
  width: "100%"
}, ownerState.orientation === "horizontal" && {
  width: "auto",
  height: "100%"
}));
var CollapseWrapperInner = styled_default("div", {
  name: "MuiCollapse",
  slot: "WrapperInner",
  overridesResolver: (props, styles20) => styles20.wrapperInner
})(({
  ownerState
}) => _extends({
  width: "100%"
}, ownerState.orientation === "horizontal" && {
  width: "auto",
  height: "100%"
}));
var Collapse = React.forwardRef(function Collapse2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiCollapse"
  });
  const {
    addEndListener,
    children,
    className,
    collapsedSize: collapsedSizeProp = "0px",
    component,
    easing,
    in: inProp,
    onEnter,
    onEntered,
    onEntering,
    onExit,
    onExited,
    onExiting,
    orientation = "vertical",
    style: style2,
    timeout = duration.standard,
    // eslint-disable-next-line react/prop-types
    TransitionComponent = Transition_default
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);
  const ownerState = _extends({}, props, {
    orientation,
    collapsedSize: collapsedSizeProp
  });
  const classes2 = useUtilityClasses(ownerState);
  const theme = useTheme();
  const timer = React.useRef();
  const wrapperRef = React.useRef(null);
  const autoTransitionDuration = React.useRef();
  const collapsedSize = typeof collapsedSizeProp === "number" ? `${collapsedSizeProp}px` : collapsedSizeProp;
  const isHorizontal3 = orientation === "horizontal";
  const size = isHorizontal3 ? "width" : "height";
  React.useEffect(() => {
    return () => {
      clearTimeout(timer.current);
    };
  }, []);
  const nodeRef = React.useRef(null);
  const handleRef = useForkRef_default(ref, nodeRef);
  const normalizedTransitionCallback = (callback) => (maybeIsAppearing) => {
    if (callback) {
      const node = nodeRef.current;
      if (maybeIsAppearing === void 0) {
        callback(node);
      } else {
        callback(node, maybeIsAppearing);
      }
    }
  };
  const getWrapperSize = () => wrapperRef.current ? wrapperRef.current[isHorizontal3 ? "clientWidth" : "clientHeight"] : 0;
  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {
    if (wrapperRef.current && isHorizontal3) {
      wrapperRef.current.style.position = "absolute";
    }
    node.style[size] = collapsedSize;
    if (onEnter) {
      onEnter(node, isAppearing);
    }
  });
  const handleEntering = normalizedTransitionCallback((node, isAppearing) => {
    const wrapperSize = getWrapperSize();
    if (wrapperRef.current && isHorizontal3) {
      wrapperRef.current.style.position = "";
    }
    const {
      duration: transitionDuration,
      easing: transitionTimingFunction
    } = getTransitionProps({
      style: style2,
      timeout,
      easing
    }, {
      mode: "enter"
    });
    if (timeout === "auto") {
      const duration2 = theme.transitions.getAutoHeightDuration(wrapperSize);
      node.style.transitionDuration = `${duration2}ms`;
      autoTransitionDuration.current = duration2;
    } else {
      node.style.transitionDuration = typeof transitionDuration === "string" ? transitionDuration : `${transitionDuration}ms`;
    }
    node.style[size] = `${wrapperSize}px`;
    node.style.transitionTimingFunction = transitionTimingFunction;
    if (onEntering) {
      onEntering(node, isAppearing);
    }
  });
  const handleEntered = normalizedTransitionCallback((node, isAppearing) => {
    node.style[size] = "auto";
    if (onEntered) {
      onEntered(node, isAppearing);
    }
  });
  const handleExit = normalizedTransitionCallback((node) => {
    node.style[size] = `${getWrapperSize()}px`;
    if (onExit) {
      onExit(node);
    }
  });
  const handleExited = normalizedTransitionCallback(onExited);
  const handleExiting = normalizedTransitionCallback((node) => {
    const wrapperSize = getWrapperSize();
    const {
      duration: transitionDuration,
      easing: transitionTimingFunction
    } = getTransitionProps({
      style: style2,
      timeout,
      easing
    }, {
      mode: "exit"
    });
    if (timeout === "auto") {
      const duration2 = theme.transitions.getAutoHeightDuration(wrapperSize);
      node.style.transitionDuration = `${duration2}ms`;
      autoTransitionDuration.current = duration2;
    } else {
      node.style.transitionDuration = typeof transitionDuration === "string" ? transitionDuration : `${transitionDuration}ms`;
    }
    node.style[size] = collapsedSize;
    node.style.transitionTimingFunction = transitionTimingFunction;
    if (onExiting) {
      onExiting(node);
    }
  });
  const handleAddEndListener = (next) => {
    if (timeout === "auto") {
      timer.current = setTimeout(next, autoTransitionDuration.current || 0);
    }
    if (addEndListener) {
      addEndListener(nodeRef.current, next);
    }
  };
  return (0, import_jsx_runtime.jsx)(TransitionComponent, _extends({
    in: inProp,
    onEnter: handleEnter,
    onEntered: handleEntered,
    onEntering: handleEntering,
    onExit: handleExit,
    onExited: handleExited,
    onExiting: handleExiting,
    addEndListener: handleAddEndListener,
    nodeRef,
    timeout: timeout === "auto" ? null : timeout
  }, other, {
    children: (state, childProps) => (0, import_jsx_runtime.jsx)(CollapseRoot, _extends({
      as: component,
      className: clsx_m_default(classes2.root, className, {
        "entered": classes2.entered,
        "exited": !inProp && collapsedSize === "0px" && classes2.hidden
      }[state]),
      style: _extends({
        [isHorizontal3 ? "minWidth" : "minHeight"]: collapsedSize
      }, style2),
      ownerState: _extends({}, ownerState, {
        state
      }),
      ref: handleRef
    }, childProps, {
      children: (0, import_jsx_runtime.jsx)(CollapseWrapper, {
        ownerState: _extends({}, ownerState, {
          state
        }),
        className: classes2.wrapper,
        ref: wrapperRef,
        children: (0, import_jsx_runtime.jsx)(CollapseWrapperInner, {
          ownerState: _extends({}, ownerState, {
            state
          }),
          className: classes2.wrapperInner,
          children
        })
      })
    }))
  }));
});
true ? Collapse.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: import_prop_types2.default.func,
  /**
   * The content node to be collapsed.
   */
  children: import_prop_types2.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types2.default.object,
  /**
   * @ignore
   */
  className: import_prop_types2.default.string,
  /**
   * The width (horizontal) or height (vertical) of the container when collapsed.
   * @default '0px'
   */
  collapsedSize: import_prop_types2.default.oneOfType([import_prop_types2.default.number, import_prop_types2.default.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: elementTypeAcceptingRef_default,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: import_prop_types2.default.oneOfType([import_prop_types2.default.shape({
    enter: import_prop_types2.default.string,
    exit: import_prop_types2.default.string
  }), import_prop_types2.default.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: import_prop_types2.default.bool,
  /**
   * @ignore
   */
  onEnter: import_prop_types2.default.func,
  /**
   * @ignore
   */
  onEntered: import_prop_types2.default.func,
  /**
   * @ignore
   */
  onEntering: import_prop_types2.default.func,
  /**
   * @ignore
   */
  onExit: import_prop_types2.default.func,
  /**
   * @ignore
   */
  onExited: import_prop_types2.default.func,
  /**
   * @ignore
   */
  onExiting: import_prop_types2.default.func,
  /**
   * The transition orientation.
   * @default 'vertical'
   */
  orientation: import_prop_types2.default.oneOf(["horizontal", "vertical"]),
  /**
   * @ignore
   */
  style: import_prop_types2.default.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types2.default.oneOfType([import_prop_types2.default.arrayOf(import_prop_types2.default.oneOfType([import_prop_types2.default.func, import_prop_types2.default.object, import_prop_types2.default.bool])), import_prop_types2.default.func, import_prop_types2.default.object]),
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default duration.standard
   */
  timeout: import_prop_types2.default.oneOfType([import_prop_types2.default.oneOf(["auto"]), import_prop_types2.default.number, import_prop_types2.default.shape({
    appear: import_prop_types2.default.number,
    enter: import_prop_types2.default.number,
    exit: import_prop_types2.default.number
  })])
} : void 0;
Collapse.muiSupportAuto = true;
var Collapse_default = Collapse;

// node_modules/@mui/material/Accordion/AccordionContext.js
var React2 = __toESM(require_react());
var AccordionContext = React2.createContext({});
if (true) {
  AccordionContext.displayName = "AccordionContext";
}
var AccordionContext_default = AccordionContext;

// node_modules/@mui/material/Accordion/Accordion.js
init_useControlled();

// node_modules/@mui/material/Accordion/accordionClasses.js
init_esm();
init_generateUtilityClass();
function getAccordionUtilityClass(slot) {
  return generateUtilityClass("MuiAccordion", slot);
}
var accordionClasses = generateUtilityClasses("MuiAccordion", ["root", "rounded", "expanded", "disabled", "gutters", "region"]);
var accordionClasses_default = accordionClasses;

// node_modules/@mui/material/Accordion/Accordion.js
var import_jsx_runtime2 = __toESM(require_jsx_runtime());
var import_jsx_runtime3 = __toESM(require_jsx_runtime());
var _excluded2 = ["children", "className", "defaultExpanded", "disabled", "disableGutters", "expanded", "onChange", "square", "TransitionComponent", "TransitionProps"];
var useUtilityClasses2 = (ownerState) => {
  const {
    classes: classes2,
    square,
    expanded,
    disabled,
    disableGutters
  } = ownerState;
  const slots = {
    root: ["root", !square && "rounded", expanded && "expanded", disabled && "disabled", !disableGutters && "gutters"],
    region: ["region"]
  };
  return composeClasses(slots, getAccordionUtilityClass, classes2);
};
var AccordionRoot = styled_default(Paper_default, {
  name: "MuiAccordion",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [{
      [`& .${accordionClasses_default.region}`]: styles20.region
    }, styles20.root, !ownerState.square && styles20.rounded, !ownerState.disableGutters && styles20.gutters];
  }
})(({
  theme
}) => {
  const transition = {
    duration: theme.transitions.duration.shortest
  };
  return {
    position: "relative",
    transition: theme.transitions.create(["margin"], transition),
    overflowAnchor: "none",
    // Keep the same scrolling position
    "&:before": {
      position: "absolute",
      left: 0,
      top: -1,
      right: 0,
      height: 1,
      content: '""',
      opacity: 1,
      backgroundColor: (theme.vars || theme).palette.divider,
      transition: theme.transitions.create(["opacity", "background-color"], transition)
    },
    "&:first-of-type": {
      "&:before": {
        display: "none"
      }
    },
    [`&.${accordionClasses_default.expanded}`]: {
      "&:before": {
        opacity: 0
      },
      "&:first-of-type": {
        marginTop: 0
      },
      "&:last-of-type": {
        marginBottom: 0
      },
      "& + &": {
        "&:before": {
          display: "none"
        }
      }
    },
    [`&.${accordionClasses_default.disabled}`]: {
      backgroundColor: (theme.vars || theme).palette.action.disabledBackground
    }
  };
}, ({
  theme,
  ownerState
}) => _extends({}, !ownerState.square && {
  borderRadius: 0,
  "&:first-of-type": {
    borderTopLeftRadius: (theme.vars || theme).shape.borderRadius,
    borderTopRightRadius: (theme.vars || theme).shape.borderRadius
  },
  "&:last-of-type": {
    borderBottomLeftRadius: (theme.vars || theme).shape.borderRadius,
    borderBottomRightRadius: (theme.vars || theme).shape.borderRadius,
    // Fix a rendering issue on Edge
    "@supports (-ms-ime-align: auto)": {
      borderBottomLeftRadius: 0,
      borderBottomRightRadius: 0
    }
  }
}, !ownerState.disableGutters && {
  [`&.${accordionClasses_default.expanded}`]: {
    margin: "16px 0"
  }
}));
var Accordion = React3.forwardRef(function Accordion2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiAccordion"
  });
  const {
    children: childrenProp,
    className,
    defaultExpanded = false,
    disabled = false,
    disableGutters = false,
    expanded: expandedProp,
    onChange,
    square = false,
    TransitionComponent = Collapse_default,
    TransitionProps
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded2);
  const [expanded, setExpandedState] = useControlled_default({
    controlled: expandedProp,
    default: defaultExpanded,
    name: "Accordion",
    state: "expanded"
  });
  const handleChange = React3.useCallback((event) => {
    setExpandedState(!expanded);
    if (onChange) {
      onChange(event, !expanded);
    }
  }, [expanded, onChange, setExpandedState]);
  const [summary, ...children] = React3.Children.toArray(childrenProp);
  const contextValue = React3.useMemo(() => ({
    expanded,
    disabled,
    disableGutters,
    toggle: handleChange
  }), [expanded, disabled, disableGutters, handleChange]);
  const ownerState = _extends({}, props, {
    square,
    disabled,
    disableGutters,
    expanded
  });
  const classes2 = useUtilityClasses2(ownerState);
  return (0, import_jsx_runtime3.jsxs)(AccordionRoot, _extends({
    className: clsx_m_default(classes2.root, className),
    ref,
    ownerState,
    square
  }, other, {
    children: [(0, import_jsx_runtime2.jsx)(AccordionContext_default.Provider, {
      value: contextValue,
      children: summary
    }), (0, import_jsx_runtime2.jsx)(TransitionComponent, _extends({
      in: expanded,
      timeout: "auto"
    }, TransitionProps, {
      children: (0, import_jsx_runtime2.jsx)("div", {
        "aria-labelledby": summary.props.id,
        id: summary.props["aria-controls"],
        role: "region",
        className: classes2.region,
        children
      })
    }))]
  }));
});
true ? Accordion.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: chainPropTypes(import_prop_types3.default.node.isRequired, (props) => {
    const summary = React3.Children.toArray(props.children)[0];
    if ((0, import_react_is.isFragment)(summary)) {
      return new Error("MUI: The Accordion doesn't accept a Fragment as a child. Consider providing an array instead.");
    }
    if (!React3.isValidElement(summary)) {
      return new Error("MUI: Expected the first child of Accordion to be a valid element.");
    }
    return null;
  }),
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types3.default.object,
  /**
   * @ignore
   */
  className: import_prop_types3.default.string,
  /**
   * If `true`, expands the accordion by default.
   * @default false
   */
  defaultExpanded: import_prop_types3.default.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types3.default.bool,
  /**
   * If `true`, it removes the margin between two expanded accordion items and the increase of height.
   * @default false
   */
  disableGutters: import_prop_types3.default.bool,
  /**
   * If `true`, expands the accordion, otherwise collapse it.
   * Setting this prop enables control over the accordion.
   */
  expanded: import_prop_types3.default.bool,
  /**
   * Callback fired when the expand/collapse state is changed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.
   * @param {boolean} expanded The `expanded` state of the accordion.
   */
  onChange: import_prop_types3.default.func,
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: import_prop_types3.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types3.default.oneOfType([import_prop_types3.default.arrayOf(import_prop_types3.default.oneOfType([import_prop_types3.default.func, import_prop_types3.default.object, import_prop_types3.default.bool])), import_prop_types3.default.func, import_prop_types3.default.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Collapse
   */
  TransitionComponent: import_prop_types3.default.elementType,
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.
   */
  TransitionProps: import_prop_types3.default.object
} : void 0;

// node_modules/@mui/material/AccordionActions/AccordionActions.js
init_objectWithoutPropertiesLoose();
init_extends();
var React4 = __toESM(require_react());
var import_prop_types4 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/AccordionActions/accordionActionsClasses.js
init_esm();
init_generateUtilityClass();
function getAccordionActionsUtilityClass(slot) {
  return generateUtilityClass("MuiAccordionActions", slot);
}
var accordionActionsClasses = generateUtilityClasses("MuiAccordionActions", ["root", "spacing"]);

// node_modules/@mui/material/AccordionActions/AccordionActions.js
var import_jsx_runtime4 = __toESM(require_jsx_runtime());
var _excluded3 = ["className", "disableSpacing"];
var useUtilityClasses3 = (ownerState) => {
  const {
    classes: classes2,
    disableSpacing
  } = ownerState;
  const slots = {
    root: ["root", !disableSpacing && "spacing"]
  };
  return composeClasses(slots, getAccordionActionsUtilityClass, classes2);
};
var AccordionActionsRoot = styled_default("div", {
  name: "MuiAccordionActions",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, !ownerState.disableSpacing && styles20.spacing];
  }
})(({
  ownerState
}) => _extends({
  display: "flex",
  alignItems: "center",
  padding: 8,
  justifyContent: "flex-end"
}, !ownerState.disableSpacing && {
  "& > :not(:first-of-type)": {
    marginLeft: 8
  }
}));
var AccordionActions = React4.forwardRef(function AccordionActions2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiAccordionActions"
  });
  const {
    className,
    disableSpacing = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded3);
  const ownerState = _extends({}, props, {
    disableSpacing
  });
  const classes2 = useUtilityClasses3(ownerState);
  return (0, import_jsx_runtime4.jsx)(AccordionActionsRoot, _extends({
    className: clsx_m_default(classes2.root, className),
    ref,
    ownerState
  }, other));
});
true ? AccordionActions.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types4.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types4.default.object,
  /**
   * @ignore
   */
  className: import_prop_types4.default.string,
  /**
   * If `true`, the actions do not have additional margin.
   * @default false
   */
  disableSpacing: import_prop_types4.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types4.default.oneOfType([import_prop_types4.default.arrayOf(import_prop_types4.default.oneOfType([import_prop_types4.default.func, import_prop_types4.default.object, import_prop_types4.default.bool])), import_prop_types4.default.func, import_prop_types4.default.object])
} : void 0;

// node_modules/@mui/material/AccordionDetails/AccordionDetails.js
init_extends();
init_objectWithoutPropertiesLoose();
var React5 = __toESM(require_react());
var import_prop_types5 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/AccordionDetails/accordionDetailsClasses.js
init_esm();
init_generateUtilityClass();
function getAccordionDetailsUtilityClass(slot) {
  return generateUtilityClass("MuiAccordionDetails", slot);
}
var accordionDetailsClasses = generateUtilityClasses("MuiAccordionDetails", ["root"]);

// node_modules/@mui/material/AccordionDetails/AccordionDetails.js
var import_jsx_runtime5 = __toESM(require_jsx_runtime());
var _excluded4 = ["className"];
var useUtilityClasses4 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getAccordionDetailsUtilityClass, classes2);
};
var AccordionDetailsRoot = styled_default("div", {
  name: "MuiAccordionDetails",
  slot: "Root",
  overridesResolver: (props, styles20) => styles20.root
})(({
  theme
}) => ({
  padding: theme.spacing(1, 2, 2)
}));
var AccordionDetails = React5.forwardRef(function AccordionDetails2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiAccordionDetails"
  });
  const {
    className
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded4);
  const ownerState = props;
  const classes2 = useUtilityClasses4(ownerState);
  return (0, import_jsx_runtime5.jsx)(AccordionDetailsRoot, _extends({
    className: clsx_m_default(classes2.root, className),
    ref,
    ownerState
  }, other));
});
true ? AccordionDetails.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types5.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types5.default.object,
  /**
   * @ignore
   */
  className: import_prop_types5.default.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types5.default.oneOfType([import_prop_types5.default.arrayOf(import_prop_types5.default.oneOfType([import_prop_types5.default.func, import_prop_types5.default.object, import_prop_types5.default.bool])), import_prop_types5.default.func, import_prop_types5.default.object])
} : void 0;

// node_modules/@mui/material/AccordionSummary/AccordionSummary.js
init_objectWithoutPropertiesLoose();
init_extends();
var React6 = __toESM(require_react());
var import_prop_types6 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/AccordionSummary/accordionSummaryClasses.js
init_esm();
init_generateUtilityClass();
function getAccordionSummaryUtilityClass(slot) {
  return generateUtilityClass("MuiAccordionSummary", slot);
}
var accordionSummaryClasses = generateUtilityClasses("MuiAccordionSummary", ["root", "expanded", "focusVisible", "disabled", "gutters", "contentGutters", "content", "expandIconWrapper"]);
var accordionSummaryClasses_default = accordionSummaryClasses;

// node_modules/@mui/material/AccordionSummary/AccordionSummary.js
var import_jsx_runtime6 = __toESM(require_jsx_runtime());
var import_jsx_runtime7 = __toESM(require_jsx_runtime());
var _excluded5 = ["children", "className", "expandIcon", "focusVisibleClassName", "onClick"];
var useUtilityClasses5 = (ownerState) => {
  const {
    classes: classes2,
    expanded,
    disabled,
    disableGutters
  } = ownerState;
  const slots = {
    root: ["root", expanded && "expanded", disabled && "disabled", !disableGutters && "gutters"],
    focusVisible: ["focusVisible"],
    content: ["content", expanded && "expanded", !disableGutters && "contentGutters"],
    expandIconWrapper: ["expandIconWrapper", expanded && "expanded"]
  };
  return composeClasses(slots, getAccordionSummaryUtilityClass, classes2);
};
var AccordionSummaryRoot = styled_default(ButtonBase_default, {
  name: "MuiAccordionSummary",
  slot: "Root",
  overridesResolver: (props, styles20) => styles20.root
})(({
  theme,
  ownerState
}) => {
  const transition = {
    duration: theme.transitions.duration.shortest
  };
  return _extends({
    display: "flex",
    minHeight: 48,
    padding: theme.spacing(0, 2),
    transition: theme.transitions.create(["min-height", "background-color"], transition),
    [`&.${accordionSummaryClasses_default.focusVisible}`]: {
      backgroundColor: (theme.vars || theme).palette.action.focus
    },
    [`&.${accordionSummaryClasses_default.disabled}`]: {
      opacity: (theme.vars || theme).palette.action.disabledOpacity
    },
    [`&:hover:not(.${accordionSummaryClasses_default.disabled})`]: {
      cursor: "pointer"
    }
  }, !ownerState.disableGutters && {
    [`&.${accordionSummaryClasses_default.expanded}`]: {
      minHeight: 64
    }
  });
});
var AccordionSummaryContent = styled_default("div", {
  name: "MuiAccordionSummary",
  slot: "Content",
  overridesResolver: (props, styles20) => styles20.content
})(({
  theme,
  ownerState
}) => _extends({
  display: "flex",
  flexGrow: 1,
  margin: "12px 0"
}, !ownerState.disableGutters && {
  transition: theme.transitions.create(["margin"], {
    duration: theme.transitions.duration.shortest
  }),
  [`&.${accordionSummaryClasses_default.expanded}`]: {
    margin: "20px 0"
  }
}));
var AccordionSummaryExpandIconWrapper = styled_default("div", {
  name: "MuiAccordionSummary",
  slot: "ExpandIconWrapper",
  overridesResolver: (props, styles20) => styles20.expandIconWrapper
})(({
  theme
}) => ({
  display: "flex",
  color: (theme.vars || theme).palette.action.active,
  transform: "rotate(0deg)",
  transition: theme.transitions.create("transform", {
    duration: theme.transitions.duration.shortest
  }),
  [`&.${accordionSummaryClasses_default.expanded}`]: {
    transform: "rotate(180deg)"
  }
}));
var AccordionSummary = React6.forwardRef(function AccordionSummary2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiAccordionSummary"
  });
  const {
    children,
    className,
    expandIcon,
    focusVisibleClassName,
    onClick
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded5);
  const {
    disabled = false,
    disableGutters,
    expanded,
    toggle
  } = React6.useContext(AccordionContext_default);
  const handleChange = (event) => {
    if (toggle) {
      toggle(event);
    }
    if (onClick) {
      onClick(event);
    }
  };
  const ownerState = _extends({}, props, {
    expanded,
    disabled,
    disableGutters
  });
  const classes2 = useUtilityClasses5(ownerState);
  return (0, import_jsx_runtime7.jsxs)(AccordionSummaryRoot, _extends({
    focusRipple: false,
    disableRipple: true,
    disabled,
    component: "div",
    "aria-expanded": expanded,
    className: clsx_m_default(classes2.root, className),
    focusVisibleClassName: clsx_m_default(classes2.focusVisible, focusVisibleClassName),
    onClick: handleChange,
    ref,
    ownerState
  }, other, {
    children: [(0, import_jsx_runtime6.jsx)(AccordionSummaryContent, {
      className: classes2.content,
      ownerState,
      children
    }), expandIcon && (0, import_jsx_runtime6.jsx)(AccordionSummaryExpandIconWrapper, {
      className: classes2.expandIconWrapper,
      ownerState,
      children: expandIcon
    })]
  }));
});
true ? AccordionSummary.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types6.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types6.default.object,
  /**
   * @ignore
   */
  className: import_prop_types6.default.string,
  /**
   * The icon to display as the expand indicator.
   */
  expandIcon: import_prop_types6.default.node,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: import_prop_types6.default.string,
  /**
   * @ignore
   */
  onClick: import_prop_types6.default.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types6.default.oneOfType([import_prop_types6.default.arrayOf(import_prop_types6.default.oneOfType([import_prop_types6.default.func, import_prop_types6.default.object, import_prop_types6.default.bool])), import_prop_types6.default.func, import_prop_types6.default.object])
} : void 0;

// node_modules/@mui/material/Alert/Alert.js
init_objectWithoutPropertiesLoose();
init_extends();
var React11 = __toESM(require_react());
var import_prop_types7 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_esm2();
init_styled();
init_useThemeProps();
init_capitalize();

// node_modules/@mui/material/Alert/alertClasses.js
init_esm();
init_generateUtilityClass();
function getAlertUtilityClass(slot) {
  return generateUtilityClass("MuiAlert", slot);
}
var alertClasses = generateUtilityClasses("MuiAlert", ["root", "action", "icon", "message", "filled", "filledSuccess", "filledInfo", "filledWarning", "filledError", "outlined", "outlinedSuccess", "outlinedInfo", "outlinedWarning", "outlinedError", "standard", "standardSuccess", "standardInfo", "standardWarning", "standardError"]);
var alertClasses_default = alertClasses;

// node_modules/@mui/material/internal/svg-icons/SuccessOutlined.js
var React7 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime8 = __toESM(require_jsx_runtime());
var SuccessOutlined_default = createSvgIcon((0, import_jsx_runtime8.jsx)("path", {
  d: "M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"
}), "SuccessOutlined");

// node_modules/@mui/material/internal/svg-icons/ReportProblemOutlined.js
var React8 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime9 = __toESM(require_jsx_runtime());
var ReportProblemOutlined_default = createSvgIcon((0, import_jsx_runtime9.jsx)("path", {
  d: "M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z"
}), "ReportProblemOutlined");

// node_modules/@mui/material/internal/svg-icons/ErrorOutline.js
var React9 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime10 = __toESM(require_jsx_runtime());
var ErrorOutline_default = createSvgIcon((0, import_jsx_runtime10.jsx)("path", {
  d: "M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), "ErrorOutline");

// node_modules/@mui/material/internal/svg-icons/InfoOutlined.js
var React10 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime11 = __toESM(require_jsx_runtime());
var InfoOutlined_default = createSvgIcon((0, import_jsx_runtime11.jsx)("path", {
  d: "M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z"
}), "InfoOutlined");

// node_modules/@mui/material/Alert/Alert.js
var import_jsx_runtime12 = __toESM(require_jsx_runtime());
var import_jsx_runtime13 = __toESM(require_jsx_runtime());
var _excluded6 = ["action", "children", "className", "closeText", "color", "components", "componentsProps", "icon", "iconMapping", "onClose", "role", "severity", "slotProps", "slots", "variant"];
var useUtilityClasses6 = (ownerState) => {
  const {
    variant,
    color: color2,
    severity,
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root", `${variant}${capitalize_default(color2 || severity)}`, `${variant}`],
    icon: ["icon"],
    message: ["message"],
    action: ["action"]
  };
  return composeClasses(slots, getAlertUtilityClass, classes2);
};
var AlertRoot = styled_default(Paper_default, {
  name: "MuiAlert",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, styles20[ownerState.variant], styles20[`${ownerState.variant}${capitalize_default(ownerState.color || ownerState.severity)}`]];
  }
})(({
  theme,
  ownerState
}) => {
  const getColor = theme.palette.mode === "light" ? darken : lighten;
  const getBackgroundColor = theme.palette.mode === "light" ? lighten : darken;
  const color2 = ownerState.color || ownerState.severity;
  return _extends({}, theme.typography.body2, {
    backgroundColor: "transparent",
    display: "flex",
    padding: "6px 16px"
  }, color2 && ownerState.variant === "standard" && {
    color: theme.vars ? theme.vars.palette.Alert[`${color2}Color`] : getColor(theme.palette[color2].light, 0.6),
    backgroundColor: theme.vars ? theme.vars.palette.Alert[`${color2}StandardBg`] : getBackgroundColor(theme.palette[color2].light, 0.9),
    [`& .${alertClasses_default.icon}`]: theme.vars ? {
      color: theme.vars.palette.Alert[`${color2}IconColor`]
    } : {
      color: theme.palette[color2].main
    }
  }, color2 && ownerState.variant === "outlined" && {
    color: theme.vars ? theme.vars.palette.Alert[`${color2}Color`] : getColor(theme.palette[color2].light, 0.6),
    border: `1px solid ${(theme.vars || theme).palette[color2].light}`,
    [`& .${alertClasses_default.icon}`]: theme.vars ? {
      color: theme.vars.palette.Alert[`${color2}IconColor`]
    } : {
      color: theme.palette[color2].main
    }
  }, color2 && ownerState.variant === "filled" && _extends({
    fontWeight: theme.typography.fontWeightMedium
  }, theme.vars ? {
    color: theme.vars.palette.Alert[`${color2}FilledColor`],
    backgroundColor: theme.vars.palette.Alert[`${color2}FilledBg`]
  } : {
    backgroundColor: theme.palette.mode === "dark" ? theme.palette[color2].dark : theme.palette[color2].main,
    color: theme.palette.getContrastText(theme.palette[color2].main)
  }));
});
var AlertIcon = styled_default("div", {
  name: "MuiAlert",
  slot: "Icon",
  overridesResolver: (props, styles20) => styles20.icon
})({
  marginRight: 12,
  padding: "7px 0",
  display: "flex",
  fontSize: 22,
  opacity: 0.9
});
var AlertMessage = styled_default("div", {
  name: "MuiAlert",
  slot: "Message",
  overridesResolver: (props, styles20) => styles20.message
})({
  padding: "8px 0",
  minWidth: 0,
  overflow: "auto"
});
var AlertAction = styled_default("div", {
  name: "MuiAlert",
  slot: "Action",
  overridesResolver: (props, styles20) => styles20.action
})({
  display: "flex",
  alignItems: "flex-start",
  padding: "4px 0 0 16px",
  marginLeft: "auto",
  marginRight: -8
});
var defaultIconMapping = {
  success: (0, import_jsx_runtime12.jsx)(SuccessOutlined_default, {
    fontSize: "inherit"
  }),
  warning: (0, import_jsx_runtime12.jsx)(ReportProblemOutlined_default, {
    fontSize: "inherit"
  }),
  error: (0, import_jsx_runtime12.jsx)(ErrorOutline_default, {
    fontSize: "inherit"
  }),
  info: (0, import_jsx_runtime12.jsx)(InfoOutlined_default, {
    fontSize: "inherit"
  })
};
var Alert = React11.forwardRef(function Alert2(inProps, ref) {
  var _ref, _slots$closeButton, _ref2, _slots$closeIcon, _slotProps$closeButto, _slotProps$closeIcon;
  const props = useThemeProps2({
    props: inProps,
    name: "MuiAlert"
  });
  const {
    action,
    children,
    className,
    closeText = "Close",
    color: color2,
    components = {},
    componentsProps = {},
    icon,
    iconMapping = defaultIconMapping,
    onClose,
    role = "alert",
    severity = "success",
    slotProps = {},
    slots = {},
    variant = "standard"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded6);
  const ownerState = _extends({}, props, {
    color: color2,
    severity,
    variant
  });
  const classes2 = useUtilityClasses6(ownerState);
  const AlertCloseButton = (_ref = (_slots$closeButton = slots.closeButton) != null ? _slots$closeButton : components.CloseButton) != null ? _ref : IconButton_default;
  const AlertCloseIcon = (_ref2 = (_slots$closeIcon = slots.closeIcon) != null ? _slots$closeIcon : components.CloseIcon) != null ? _ref2 : Close_default;
  const closeButtonProps = (_slotProps$closeButto = slotProps.closeButton) != null ? _slotProps$closeButto : componentsProps.closeButton;
  const closeIconProps = (_slotProps$closeIcon = slotProps.closeIcon) != null ? _slotProps$closeIcon : componentsProps.closeIcon;
  return (0, import_jsx_runtime13.jsxs)(AlertRoot, _extends({
    role,
    elevation: 0,
    ownerState,
    className: clsx_m_default(classes2.root, className),
    ref
  }, other, {
    children: [icon !== false ? (0, import_jsx_runtime12.jsx)(AlertIcon, {
      ownerState,
      className: classes2.icon,
      children: icon || iconMapping[severity] || defaultIconMapping[severity]
    }) : null, (0, import_jsx_runtime12.jsx)(AlertMessage, {
      ownerState,
      className: classes2.message,
      children
    }), action != null ? (0, import_jsx_runtime12.jsx)(AlertAction, {
      ownerState,
      className: classes2.action,
      children: action
    }) : null, action == null && onClose ? (0, import_jsx_runtime12.jsx)(AlertAction, {
      ownerState,
      className: classes2.action,
      children: (0, import_jsx_runtime12.jsx)(AlertCloseButton, _extends({
        size: "small",
        "aria-label": closeText,
        title: closeText,
        color: "inherit",
        onClick: onClose
      }, closeButtonProps, {
        children: (0, import_jsx_runtime12.jsx)(AlertCloseIcon, _extends({
          fontSize: "small"
        }, closeIconProps))
      }))
    }) : null]
  }));
});
true ? Alert.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The action to display. It renders after the message, at the end of the alert.
   */
  action: import_prop_types7.default.node,
  /**
   * The content of the component.
   */
  children: import_prop_types7.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types7.default.object,
  /**
   * @ignore
   */
  className: import_prop_types7.default.string,
  /**
   * Override the default label for the *close popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Close'
   */
  closeText: import_prop_types7.default.string,
  /**
   * The color of the component. Unless provided, the value is taken from the `severity` prop.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   */
  color: import_prop_types7.default.oneOfType([import_prop_types7.default.oneOf(["error", "info", "success", "warning"]), import_prop_types7.default.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: import_prop_types7.default.shape({
    CloseButton: import_prop_types7.default.elementType,
    CloseIcon: import_prop_types7.default.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: import_prop_types7.default.shape({
    closeButton: import_prop_types7.default.object,
    closeIcon: import_prop_types7.default.object
  }),
  /**
   * Override the icon displayed before the children.
   * Unless provided, the icon is mapped to the value of the `severity` prop.
   * Set to `false` to remove the `icon`.
   */
  icon: import_prop_types7.default.node,
  /**
   * The component maps the `severity` prop to a range of different icons,
   * for instance success to `<SuccessOutlined>`.
   * If you wish to change this mapping, you can provide your own.
   * Alternatively, you can use the `icon` prop to override the icon displayed.
   */
  iconMapping: import_prop_types7.default.shape({
    error: import_prop_types7.default.node,
    info: import_prop_types7.default.node,
    success: import_prop_types7.default.node,
    warning: import_prop_types7.default.node
  }),
  /**
   * Callback fired when the component requests to be closed.
   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: import_prop_types7.default.func,
  /**
   * The ARIA role attribute of the element.
   * @default 'alert'
   */
  role: import_prop_types7.default.string,
  /**
   * The severity of the alert. This defines the color and icon used.
   * @default 'success'
   */
  severity: import_prop_types7.default.oneOf(["error", "info", "success", "warning"]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: import_prop_types7.default.shape({
    closeButton: import_prop_types7.default.object,
    closeIcon: import_prop_types7.default.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: import_prop_types7.default.shape({
    closeButton: import_prop_types7.default.elementType,
    closeIcon: import_prop_types7.default.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types7.default.oneOfType([import_prop_types7.default.arrayOf(import_prop_types7.default.oneOfType([import_prop_types7.default.func, import_prop_types7.default.object, import_prop_types7.default.bool])), import_prop_types7.default.func, import_prop_types7.default.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: import_prop_types7.default.oneOfType([import_prop_types7.default.oneOf(["filled", "outlined", "standard"]), import_prop_types7.default.string])
} : void 0;

// node_modules/@mui/material/AlertTitle/AlertTitle.js
init_extends();
init_objectWithoutPropertiesLoose();
var React12 = __toESM(require_react());
var import_prop_types8 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/AlertTitle/alertTitleClasses.js
init_esm();
init_generateUtilityClass();
function getAlertTitleUtilityClass(slot) {
  return generateUtilityClass("MuiAlertTitle", slot);
}
var alertTitleClasses = generateUtilityClasses("MuiAlertTitle", ["root"]);

// node_modules/@mui/material/AlertTitle/AlertTitle.js
var import_jsx_runtime14 = __toESM(require_jsx_runtime());
var _excluded7 = ["className"];
var useUtilityClasses7 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getAlertTitleUtilityClass, classes2);
};
var AlertTitleRoot = styled_default(Typography_default, {
  name: "MuiAlertTitle",
  slot: "Root",
  overridesResolver: (props, styles20) => styles20.root
})(({
  theme
}) => {
  return {
    fontWeight: theme.typography.fontWeightMedium,
    marginTop: -2
  };
});
var AlertTitle = React12.forwardRef(function AlertTitle2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiAlertTitle"
  });
  const {
    className
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded7);
  const ownerState = props;
  const classes2 = useUtilityClasses7(ownerState);
  return (0, import_jsx_runtime14.jsx)(AlertTitleRoot, _extends({
    gutterBottom: true,
    component: "div",
    ownerState,
    ref,
    className: clsx_m_default(classes2.root, className)
  }, other));
});
true ? AlertTitle.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types8.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types8.default.object,
  /**
   * @ignore
   */
  className: import_prop_types8.default.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types8.default.oneOfType([import_prop_types8.default.arrayOf(import_prop_types8.default.oneOfType([import_prop_types8.default.func, import_prop_types8.default.object, import_prop_types8.default.bool])), import_prop_types8.default.func, import_prop_types8.default.object])
} : void 0;

// node_modules/@mui/material/AppBar/AppBar.js
init_objectWithoutPropertiesLoose();
init_extends();
var React13 = __toESM(require_react());
var import_prop_types9 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_styled();
init_useThemeProps();
init_capitalize();

// node_modules/@mui/material/AppBar/appBarClasses.js
init_esm();
init_generateUtilityClass();
function getAppBarUtilityClass(slot) {
  return generateUtilityClass("MuiAppBar", slot);
}
var appBarClasses = generateUtilityClasses("MuiAppBar", ["root", "positionFixed", "positionAbsolute", "positionSticky", "positionStatic", "positionRelative", "colorDefault", "colorPrimary", "colorSecondary", "colorInherit", "colorTransparent"]);

// node_modules/@mui/material/AppBar/AppBar.js
var import_jsx_runtime15 = __toESM(require_jsx_runtime());
var _excluded8 = ["className", "color", "enableColorOnDark", "position"];
var useUtilityClasses8 = (ownerState) => {
  const {
    color: color2,
    position,
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root", `color${capitalize_default(color2)}`, `position${capitalize_default(position)}`]
  };
  return composeClasses(slots, getAppBarUtilityClass, classes2);
};
var joinVars = (var1, var2) => `${var1 == null ? void 0 : var1.replace(")", "")}, ${var2})`;
var AppBarRoot = styled_default(Paper_default, {
  name: "MuiAppBar",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, styles20[`position${capitalize_default(ownerState.position)}`], styles20[`color${capitalize_default(ownerState.color)}`]];
  }
})(({
  theme,
  ownerState
}) => {
  const backgroundColorDefault = theme.palette.mode === "light" ? theme.palette.grey[100] : theme.palette.grey[900];
  return _extends({
    display: "flex",
    flexDirection: "column",
    width: "100%",
    boxSizing: "border-box",
    // Prevent padding issue with the Modal and fixed positioned AppBar.
    flexShrink: 0
  }, ownerState.position === "fixed" && {
    position: "fixed",
    zIndex: (theme.vars || theme).zIndex.appBar,
    top: 0,
    left: "auto",
    right: 0,
    "@media print": {
      // Prevent the app bar to be visible on each printed page.
      position: "absolute"
    }
  }, ownerState.position === "absolute" && {
    position: "absolute",
    zIndex: (theme.vars || theme).zIndex.appBar,
    top: 0,
    left: "auto",
    right: 0
  }, ownerState.position === "sticky" && {
    // ⚠️ sticky is not supported by IE11.
    position: "sticky",
    zIndex: (theme.vars || theme).zIndex.appBar,
    top: 0,
    left: "auto",
    right: 0
  }, ownerState.position === "static" && {
    position: "static"
  }, ownerState.position === "relative" && {
    position: "relative"
  }, !theme.vars && _extends({}, ownerState.color === "default" && {
    backgroundColor: backgroundColorDefault,
    color: theme.palette.getContrastText(backgroundColorDefault)
  }, ownerState.color && ownerState.color !== "default" && ownerState.color !== "inherit" && ownerState.color !== "transparent" && {
    backgroundColor: theme.palette[ownerState.color].main,
    color: theme.palette[ownerState.color].contrastText
  }, ownerState.color === "inherit" && {
    color: "inherit"
  }, theme.palette.mode === "dark" && !ownerState.enableColorOnDark && {
    backgroundColor: null,
    color: null
  }, ownerState.color === "transparent" && _extends({
    backgroundColor: "transparent",
    color: "inherit"
  }, theme.palette.mode === "dark" && {
    backgroundImage: "none"
  })), theme.vars && _extends({}, ownerState.color === "default" && {
    "--AppBar-background": ownerState.enableColorOnDark ? theme.vars.palette.AppBar.defaultBg : joinVars(theme.vars.palette.AppBar.darkBg, theme.vars.palette.AppBar.defaultBg),
    "--AppBar-color": ownerState.enableColorOnDark ? theme.vars.palette.text.primary : joinVars(theme.vars.palette.AppBar.darkColor, theme.vars.palette.text.primary)
  }, ownerState.color && !ownerState.color.match(/^(default|inherit|transparent)$/) && {
    "--AppBar-background": ownerState.enableColorOnDark ? theme.vars.palette[ownerState.color].main : joinVars(theme.vars.palette.AppBar.darkBg, theme.vars.palette[ownerState.color].main),
    "--AppBar-color": ownerState.enableColorOnDark ? theme.vars.palette[ownerState.color].contrastText : joinVars(theme.vars.palette.AppBar.darkColor, theme.vars.palette[ownerState.color].contrastText)
  }, {
    backgroundColor: "var(--AppBar-background)",
    color: ownerState.color === "inherit" ? "inherit" : "var(--AppBar-color)"
  }, ownerState.color === "transparent" && {
    backgroundImage: "none",
    backgroundColor: "transparent",
    color: "inherit"
  }));
});
var AppBar = React13.forwardRef(function AppBar2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiAppBar"
  });
  const {
    className,
    color: color2 = "primary",
    enableColorOnDark = false,
    position = "fixed"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded8);
  const ownerState = _extends({}, props, {
    color: color2,
    position,
    enableColorOnDark
  });
  const classes2 = useUtilityClasses8(ownerState);
  return (0, import_jsx_runtime15.jsx)(AppBarRoot, _extends({
    square: true,
    component: "header",
    ownerState,
    elevation: 4,
    className: clsx_m_default(classes2.root, className, position === "fixed" && "mui-fixed"),
    ref
  }, other));
});
true ? AppBar.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types9.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types9.default.object,
  /**
   * @ignore
   */
  className: import_prop_types9.default.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'primary'
   */
  color: import_prop_types9.default.oneOfType([import_prop_types9.default.oneOf(["default", "inherit", "primary", "secondary", "transparent"]), import_prop_types9.default.string]),
  /**
   * If true, the `color` prop is applied in dark mode.
   * @default false
   */
  enableColorOnDark: import_prop_types9.default.bool,
  /**
   * The positioning type. The behavior of the different options is described
   * [in the MDN web docs](https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Positioning).
   * Note: `sticky` is not universally supported and will fall back to `static` when unavailable.
   * @default 'fixed'
   */
  position: import_prop_types9.default.oneOf(["absolute", "fixed", "relative", "static", "sticky"]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types9.default.oneOfType([import_prop_types9.default.arrayOf(import_prop_types9.default.oneOfType([import_prop_types9.default.func, import_prop_types9.default.object, import_prop_types9.default.bool])), import_prop_types9.default.func, import_prop_types9.default.object])
} : void 0;

// node_modules/@mui/material/Avatar/Avatar.js
init_objectWithoutPropertiesLoose();
init_extends();
var React15 = __toESM(require_react());
var import_prop_types10 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/internal/svg-icons/Person.js
var React14 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime16 = __toESM(require_jsx_runtime());
var Person_default = createSvgIcon((0, import_jsx_runtime16.jsx)("path", {
  d: "M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
}), "Person");

// node_modules/@mui/material/Avatar/avatarClasses.js
init_esm();
init_generateUtilityClass();
function getAvatarUtilityClass(slot) {
  return generateUtilityClass("MuiAvatar", slot);
}
var avatarClasses = generateUtilityClasses("MuiAvatar", ["root", "colorDefault", "circular", "rounded", "square", "img", "fallback"]);
var avatarClasses_default = avatarClasses;

// node_modules/@mui/material/Avatar/Avatar.js
var import_jsx_runtime17 = __toESM(require_jsx_runtime());
var _excluded9 = ["alt", "children", "className", "component", "imgProps", "sizes", "src", "srcSet", "variant"];
var useUtilityClasses9 = (ownerState) => {
  const {
    classes: classes2,
    variant,
    colorDefault
  } = ownerState;
  const slots = {
    root: ["root", variant, colorDefault && "colorDefault"],
    img: ["img"],
    fallback: ["fallback"]
  };
  return composeClasses(slots, getAvatarUtilityClass, classes2);
};
var AvatarRoot = styled_default("div", {
  name: "MuiAvatar",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, styles20[ownerState.variant], ownerState.colorDefault && styles20.colorDefault];
  }
})(({
  theme,
  ownerState
}) => _extends({
  position: "relative",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  flexShrink: 0,
  width: 40,
  height: 40,
  fontFamily: theme.typography.fontFamily,
  fontSize: theme.typography.pxToRem(20),
  lineHeight: 1,
  borderRadius: "50%",
  overflow: "hidden",
  userSelect: "none"
}, ownerState.variant === "rounded" && {
  borderRadius: (theme.vars || theme).shape.borderRadius
}, ownerState.variant === "square" && {
  borderRadius: 0
}, ownerState.colorDefault && _extends({
  color: (theme.vars || theme).palette.background.default
}, theme.vars ? {
  backgroundColor: theme.vars.palette.Avatar.defaultBg
} : {
  backgroundColor: theme.palette.mode === "light" ? theme.palette.grey[400] : theme.palette.grey[600]
})));
var AvatarImg = styled_default("img", {
  name: "MuiAvatar",
  slot: "Img",
  overridesResolver: (props, styles20) => styles20.img
})({
  width: "100%",
  height: "100%",
  textAlign: "center",
  // Handle non-square image. The property isn't supported by IE11.
  objectFit: "cover",
  // Hide alt text.
  color: "transparent",
  // Hide the image broken icon, only works on Chrome.
  textIndent: 1e4
});
var AvatarFallback = styled_default(Person_default, {
  name: "MuiAvatar",
  slot: "Fallback",
  overridesResolver: (props, styles20) => styles20.fallback
})({
  width: "75%",
  height: "75%"
});
function useLoaded({
  crossOrigin,
  referrerPolicy,
  src,
  srcSet
}) {
  const [loaded, setLoaded] = React15.useState(false);
  React15.useEffect(() => {
    if (!src && !srcSet) {
      return void 0;
    }
    setLoaded(false);
    let active = true;
    const image = new Image();
    image.onload = () => {
      if (!active) {
        return;
      }
      setLoaded("loaded");
    };
    image.onerror = () => {
      if (!active) {
        return;
      }
      setLoaded("error");
    };
    image.crossOrigin = crossOrigin;
    image.referrerPolicy = referrerPolicy;
    image.src = src;
    if (srcSet) {
      image.srcset = srcSet;
    }
    return () => {
      active = false;
    };
  }, [crossOrigin, referrerPolicy, src, srcSet]);
  return loaded;
}
var Avatar = React15.forwardRef(function Avatar2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiAvatar"
  });
  const {
    alt,
    children: childrenProp,
    className,
    component = "div",
    imgProps,
    sizes,
    src,
    srcSet,
    variant = "circular"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded9);
  let children = null;
  const loaded = useLoaded(_extends({}, imgProps, {
    src,
    srcSet
  }));
  const hasImg = src || srcSet;
  const hasImgNotFailing = hasImg && loaded !== "error";
  const ownerState = _extends({}, props, {
    colorDefault: !hasImgNotFailing,
    component,
    variant
  });
  const classes2 = useUtilityClasses9(ownerState);
  if (hasImgNotFailing) {
    children = (0, import_jsx_runtime17.jsx)(AvatarImg, _extends({
      alt,
      src,
      srcSet,
      sizes,
      ownerState,
      className: classes2.img
    }, imgProps));
  } else if (childrenProp != null) {
    children = childrenProp;
  } else if (hasImg && alt) {
    children = alt[0];
  } else {
    children = (0, import_jsx_runtime17.jsx)(AvatarFallback, {
      className: classes2.fallback
    });
  }
  return (0, import_jsx_runtime17.jsx)(AvatarRoot, _extends({
    as: component,
    ownerState,
    className: clsx_m_default(classes2.root, className),
    ref
  }, other, {
    children
  }));
});
true ? Avatar.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Used in combination with `src` or `srcSet` to
   * provide an alt attribute for the rendered `img` element.
   */
  alt: import_prop_types10.default.string,
  /**
   * Used to render icon or text elements inside the Avatar if `src` is not set.
   * This can be an element, or just a string.
   */
  children: import_prop_types10.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types10.default.object,
  /**
   * @ignore
   */
  className: import_prop_types10.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types10.default.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.
   * It can be used to listen for the loading error event.
   */
  imgProps: import_prop_types10.default.object,
  /**
   * The `sizes` attribute for the `img` element.
   */
  sizes: import_prop_types10.default.string,
  /**
   * The `src` attribute for the `img` element.
   */
  src: import_prop_types10.default.string,
  /**
   * The `srcSet` attribute for the `img` element.
   * Use this attribute for responsive image display.
   */
  srcSet: import_prop_types10.default.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types10.default.oneOfType([import_prop_types10.default.arrayOf(import_prop_types10.default.oneOfType([import_prop_types10.default.func, import_prop_types10.default.object, import_prop_types10.default.bool])), import_prop_types10.default.func, import_prop_types10.default.object]),
  /**
   * The shape of the avatar.
   * @default 'circular'
   */
  variant: import_prop_types10.default.oneOfType([import_prop_types10.default.oneOf(["circular", "rounded", "square"]), import_prop_types10.default.string])
} : void 0;
var Avatar_default = Avatar;

// node_modules/@mui/material/AvatarGroup/AvatarGroup.js
init_objectWithoutPropertiesLoose();
init_extends();
var React16 = __toESM(require_react());
var import_prop_types11 = __toESM(require_prop_types());
var import_react_is2 = __toESM(require_react_is());
init_clsx_m();
init_esm();
init_base();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/AvatarGroup/avatarGroupClasses.js
init_esm();
init_generateUtilityClass();
function getAvatarGroupUtilityClass(slot) {
  return generateUtilityClass("MuiAvatarGroup", slot);
}
var avatarGroupClasses = generateUtilityClasses("MuiAvatarGroup", ["root", "avatar"]);
var avatarGroupClasses_default = avatarGroupClasses;

// node_modules/@mui/material/AvatarGroup/AvatarGroup.js
var import_jsx_runtime18 = __toESM(require_jsx_runtime());
var _excluded10 = ["children", "className", "component", "componentsProps", "max", "slotProps", "spacing", "total", "variant"];
var SPACINGS = {
  small: -16,
  medium: null
};
var useUtilityClasses10 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"],
    avatar: ["avatar"]
  };
  return composeClasses(slots, getAvatarGroupUtilityClass, classes2);
};
var AvatarGroupRoot = styled_default("div", {
  name: "MuiAvatarGroup",
  slot: "Root",
  overridesResolver: (props, styles20) => _extends({
    [`& .${avatarGroupClasses_default.avatar}`]: styles20.avatar
  }, styles20.root)
})(({
  theme
}) => ({
  [`& .${avatarClasses_default.root}`]: {
    border: `2px solid ${(theme.vars || theme).palette.background.default}`,
    boxSizing: "content-box",
    marginLeft: -8,
    "&:last-child": {
      marginLeft: 0
    }
  },
  display: "flex",
  flexDirection: "row-reverse"
}));
var AvatarGroupAvatar = styled_default(Avatar_default, {
  name: "MuiAvatarGroup",
  slot: "Avatar",
  overridesResolver: (props, styles20) => styles20.avatar
})(({
  theme
}) => ({
  border: `2px solid ${(theme.vars || theme).palette.background.default}`,
  boxSizing: "content-box",
  marginLeft: -8,
  "&:last-child": {
    marginLeft: 0
  }
}));
var AvatarGroup = React16.forwardRef(function AvatarGroup2(inProps, ref) {
  var _slotProps$additional;
  const props = useThemeProps2({
    props: inProps,
    name: "MuiAvatarGroup"
  });
  const {
    children: childrenProp,
    className,
    component = "div",
    componentsProps = {},
    max: max3 = 5,
    slotProps = {},
    spacing = "medium",
    total,
    variant = "circular"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded10);
  let clampedMax = max3 < 2 ? 2 : max3;
  const ownerState = _extends({}, props, {
    max: max3,
    spacing,
    component,
    variant
  });
  const classes2 = useUtilityClasses10(ownerState);
  const children = React16.Children.toArray(childrenProp).filter((child) => {
    if (true) {
      if ((0, import_react_is2.isFragment)(child)) {
        console.error(["MUI: The AvatarGroup component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join("\n"));
      }
    }
    return React16.isValidElement(child);
  });
  const totalAvatars = total || children.length;
  if (totalAvatars === clampedMax) {
    clampedMax += 1;
  }
  clampedMax = Math.min(totalAvatars + 1, clampedMax);
  const maxAvatars = Math.min(children.length, clampedMax - 1);
  const extraAvatars = Math.max(totalAvatars - clampedMax, totalAvatars - maxAvatars, 0);
  const marginLeft = spacing && SPACINGS[spacing] !== void 0 ? SPACINGS[spacing] : -spacing;
  const additionalAvatarSlotProps = (_slotProps$additional = slotProps.additionalAvatar) != null ? _slotProps$additional : componentsProps.additionalAvatar;
  return (0, import_jsx_runtime18.jsxs)(AvatarGroupRoot, _extends({
    as: component,
    ownerState,
    className: clsx_m_default(classes2.root, className),
    ref
  }, other, {
    children: [extraAvatars ? (0, import_jsx_runtime18.jsxs)(AvatarGroupAvatar, _extends({
      ownerState,
      variant
    }, additionalAvatarSlotProps, {
      className: clsx_m_default(classes2.avatar, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.className),
      style: _extends({
        marginLeft
      }, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.style),
      children: ["+", extraAvatars]
    })) : null, children.slice(0, maxAvatars).reverse().map((child, index2) => {
      return React16.cloneElement(child, {
        className: clsx_m_default(child.props.className, classes2.avatar),
        style: _extends({
          // Consistent with "&:last-child" styling for the default spacing,
          // we do not apply custom marginLeft spacing on the last child
          marginLeft: index2 === maxAvatars - 1 ? void 0 : marginLeft
        }, child.props.style),
        variant: child.props.variant || variant
      });
    })]
  }));
});
true ? AvatarGroup.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The avatars to stack.
   */
  children: import_prop_types11.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types11.default.object,
  /**
   * @ignore
   */
  className: import_prop_types11.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types11.default.elementType,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: import_prop_types11.default.shape({
    additionalAvatar: import_prop_types11.default.object
  }),
  /**
   * Max avatars to show before +x.
   * @default 5
   */
  max: chainPropTypes(import_prop_types11.default.number, (props) => {
    if (props.max < 2) {
      return new Error(["MUI: The prop `max` should be equal to 2 or above.", "A value below is clamped to 2."].join("\n"));
    }
    return null;
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: import_prop_types11.default.shape({
    additionalAvatar: import_prop_types11.default.object
  }),
  /**
   * Spacing between avatars.
   * @default 'medium'
   */
  spacing: import_prop_types11.default.oneOfType([import_prop_types11.default.oneOf(["medium", "small"]), import_prop_types11.default.number]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types11.default.oneOfType([import_prop_types11.default.arrayOf(import_prop_types11.default.oneOfType([import_prop_types11.default.func, import_prop_types11.default.object, import_prop_types11.default.bool])), import_prop_types11.default.func, import_prop_types11.default.object]),
  /**
   * The total number of avatars. Used for calculating the number of extra avatars.
   * @default children.length
   */
  total: import_prop_types11.default.number,
  /**
   * The variant to use.
   * @default 'circular'
   */
  variant: import_prop_types11.default.oneOfType([import_prop_types11.default.oneOf(["circular", "rounded", "square"]), import_prop_types11.default.string])
} : void 0;

// node_modules/@mui/material/Badge/Badge.js
init_objectWithoutPropertiesLoose();
init_extends();
var React17 = __toESM(require_react());
var import_prop_types12 = __toESM(require_prop_types());
init_clsx_m();
init_esm();
init_composeClasses();
init_BadgeUnstyled();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/utils/shouldSpreadAdditionalProps.js
init_base();
var shouldSpreadAdditionalProps = (Slot) => {
  return !Slot || !isHostComponent_default(Slot);
};
var shouldSpreadAdditionalProps_default = shouldSpreadAdditionalProps;

// node_modules/@mui/material/Badge/Badge.js
init_capitalize();

// node_modules/@mui/material/Badge/badgeClasses.js
init_esm();
init_generateUtilityClass();
function getBadgeUtilityClass(slot) {
  return generateUtilityClass("MuiBadge", slot);
}
var badgeClasses = generateUtilityClasses("MuiBadge", [
  "root",
  "badge",
  "dot",
  "standard",
  "anchorOriginTopRight",
  "anchorOriginBottomRight",
  "anchorOriginTopLeft",
  "anchorOriginBottomLeft",
  "invisible",
  "colorError",
  "colorInfo",
  "colorPrimary",
  "colorSecondary",
  "colorSuccess",
  "colorWarning",
  "overlapRectangular",
  "overlapCircular",
  // TODO: v6 remove the overlap value from these class keys
  "anchorOriginTopLeftCircular",
  "anchorOriginTopLeftRectangular",
  "anchorOriginTopRightCircular",
  "anchorOriginTopRightRectangular",
  "anchorOriginBottomLeftCircular",
  "anchorOriginBottomLeftRectangular",
  "anchorOriginBottomRightCircular",
  "anchorOriginBottomRightRectangular"
]);
var badgeClasses_default = badgeClasses;

// node_modules/@mui/material/Badge/Badge.js
var import_jsx_runtime19 = __toESM(require_jsx_runtime());
var _excluded11 = ["anchorOrigin", "className", "component", "components", "componentsProps", "overlap", "color", "invisible", "max", "badgeContent", "slots", "slotProps", "showZero", "variant"];
var RADIUS_STANDARD = 10;
var RADIUS_DOT = 4;
var useUtilityClasses11 = (ownerState) => {
  const {
    color: color2,
    anchorOrigin,
    invisible,
    overlap,
    variant,
    classes: classes2 = {}
  } = ownerState;
  const slots = {
    root: ["root"],
    badge: ["badge", variant, invisible && "invisible", `anchorOrigin${capitalize_default(anchorOrigin.vertical)}${capitalize_default(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize_default(anchorOrigin.vertical)}${capitalize_default(anchorOrigin.horizontal)}${capitalize_default(overlap)}`, `overlap${capitalize_default(overlap)}`, color2 !== "default" && `color${capitalize_default(color2)}`]
  };
  return composeClasses(slots, getBadgeUtilityClass, classes2);
};
var BadgeRoot = styled_default("span", {
  name: "MuiBadge",
  slot: "Root",
  overridesResolver: (props, styles20) => styles20.root
})({
  position: "relative",
  display: "inline-flex",
  // For correct alignment with the text.
  verticalAlign: "middle",
  flexShrink: 0
});
var BadgeBadge = styled_default("span", {
  name: "MuiBadge",
  slot: "Badge",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.badge, styles20[ownerState.variant], styles20[`anchorOrigin${capitalize_default(ownerState.anchorOrigin.vertical)}${capitalize_default(ownerState.anchorOrigin.horizontal)}${capitalize_default(ownerState.overlap)}`], ownerState.color !== "default" && styles20[`color${capitalize_default(ownerState.color)}`], ownerState.invisible && styles20.invisible];
  }
})(({
  theme,
  ownerState
}) => _extends({
  display: "flex",
  flexDirection: "row",
  flexWrap: "wrap",
  justifyContent: "center",
  alignContent: "center",
  alignItems: "center",
  position: "absolute",
  boxSizing: "border-box",
  fontFamily: theme.typography.fontFamily,
  fontWeight: theme.typography.fontWeightMedium,
  fontSize: theme.typography.pxToRem(12),
  minWidth: RADIUS_STANDARD * 2,
  lineHeight: 1,
  padding: "0 6px",
  height: RADIUS_STANDARD * 2,
  borderRadius: RADIUS_STANDARD,
  zIndex: 1,
  // Render the badge on top of potential ripples.
  transition: theme.transitions.create("transform", {
    easing: theme.transitions.easing.easeInOut,
    duration: theme.transitions.duration.enteringScreen
  })
}, ownerState.color !== "default" && {
  backgroundColor: (theme.vars || theme).palette[ownerState.color].main,
  color: (theme.vars || theme).palette[ownerState.color].contrastText
}, ownerState.variant === "dot" && {
  borderRadius: RADIUS_DOT,
  height: RADIUS_DOT * 2,
  minWidth: RADIUS_DOT * 2,
  padding: 0
}, ownerState.anchorOrigin.vertical === "top" && ownerState.anchorOrigin.horizontal === "right" && ownerState.overlap === "rectangular" && {
  top: 0,
  right: 0,
  transform: "scale(1) translate(50%, -50%)",
  transformOrigin: "100% 0%",
  [`&.${badgeClasses_default.invisible}`]: {
    transform: "scale(0) translate(50%, -50%)"
  }
}, ownerState.anchorOrigin.vertical === "bottom" && ownerState.anchorOrigin.horizontal === "right" && ownerState.overlap === "rectangular" && {
  bottom: 0,
  right: 0,
  transform: "scale(1) translate(50%, 50%)",
  transformOrigin: "100% 100%",
  [`&.${badgeClasses_default.invisible}`]: {
    transform: "scale(0) translate(50%, 50%)"
  }
}, ownerState.anchorOrigin.vertical === "top" && ownerState.anchorOrigin.horizontal === "left" && ownerState.overlap === "rectangular" && {
  top: 0,
  left: 0,
  transform: "scale(1) translate(-50%, -50%)",
  transformOrigin: "0% 0%",
  [`&.${badgeClasses_default.invisible}`]: {
    transform: "scale(0) translate(-50%, -50%)"
  }
}, ownerState.anchorOrigin.vertical === "bottom" && ownerState.anchorOrigin.horizontal === "left" && ownerState.overlap === "rectangular" && {
  bottom: 0,
  left: 0,
  transform: "scale(1) translate(-50%, 50%)",
  transformOrigin: "0% 100%",
  [`&.${badgeClasses_default.invisible}`]: {
    transform: "scale(0) translate(-50%, 50%)"
  }
}, ownerState.anchorOrigin.vertical === "top" && ownerState.anchorOrigin.horizontal === "right" && ownerState.overlap === "circular" && {
  top: "14%",
  right: "14%",
  transform: "scale(1) translate(50%, -50%)",
  transformOrigin: "100% 0%",
  [`&.${badgeClasses_default.invisible}`]: {
    transform: "scale(0) translate(50%, -50%)"
  }
}, ownerState.anchorOrigin.vertical === "bottom" && ownerState.anchorOrigin.horizontal === "right" && ownerState.overlap === "circular" && {
  bottom: "14%",
  right: "14%",
  transform: "scale(1) translate(50%, 50%)",
  transformOrigin: "100% 100%",
  [`&.${badgeClasses_default.invisible}`]: {
    transform: "scale(0) translate(50%, 50%)"
  }
}, ownerState.anchorOrigin.vertical === "top" && ownerState.anchorOrigin.horizontal === "left" && ownerState.overlap === "circular" && {
  top: "14%",
  left: "14%",
  transform: "scale(1) translate(-50%, -50%)",
  transformOrigin: "0% 0%",
  [`&.${badgeClasses_default.invisible}`]: {
    transform: "scale(0) translate(-50%, -50%)"
  }
}, ownerState.anchorOrigin.vertical === "bottom" && ownerState.anchorOrigin.horizontal === "left" && ownerState.overlap === "circular" && {
  bottom: "14%",
  left: "14%",
  transform: "scale(1) translate(-50%, 50%)",
  transformOrigin: "0% 100%",
  [`&.${badgeClasses_default.invisible}`]: {
    transform: "scale(0) translate(-50%, 50%)"
  }
}, ownerState.invisible && {
  transition: theme.transitions.create("transform", {
    easing: theme.transitions.easing.easeInOut,
    duration: theme.transitions.duration.leavingScreen
  })
}));
var Badge = React17.forwardRef(function Badge2(inProps, ref) {
  var _ref, _slots$root, _ref2, _slots$badge, _slotProps$root, _slotProps$badge;
  const props = useThemeProps2({
    props: inProps,
    name: "MuiBadge"
  });
  const {
    anchorOrigin: anchorOriginProp = {
      vertical: "top",
      horizontal: "right"
    },
    className,
    component = "span",
    components = {},
    componentsProps = {},
    overlap: overlapProp = "rectangular",
    color: colorProp = "default",
    invisible: invisibleProp = false,
    max: max3,
    badgeContent: badgeContentProp,
    slots,
    slotProps,
    showZero = false,
    variant: variantProp = "standard"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded11);
  const prevProps = usePreviousProps_default({
    anchorOrigin: anchorOriginProp,
    color: colorProp,
    overlap: overlapProp,
    variant: variantProp
  });
  let invisible = invisibleProp;
  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== "dot")) {
    invisible = true;
  }
  const {
    color: color2 = colorProp,
    overlap = overlapProp,
    anchorOrigin = anchorOriginProp,
    variant = variantProp
  } = invisible ? prevProps : props;
  const ownerState = _extends({}, props, {
    anchorOrigin,
    invisible,
    color: color2,
    overlap,
    variant
  });
  const classes2 = useUtilityClasses11(ownerState);
  let displayValue;
  if (variant !== "dot") {
    displayValue = badgeContentProp && Number(badgeContentProp) > max3 ? `${max3}+` : badgeContentProp;
  }
  const RootSlot = (_ref = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components.Root) != null ? _ref : BadgeRoot;
  const BadgeSlot = (_ref2 = (_slots$badge = slots == null ? void 0 : slots.badge) != null ? _slots$badge : components.Badge) != null ? _ref2 : BadgeBadge;
  const rootSlotProps = (_slotProps$root = slotProps == null ? void 0 : slotProps.root) != null ? _slotProps$root : componentsProps.root;
  const badgeSlotProps = (_slotProps$badge = slotProps == null ? void 0 : slotProps.badge) != null ? _slotProps$badge : componentsProps.badge;
  return (0, import_jsx_runtime19.jsx)(BadgeUnstyled_default, _extends({
    invisible: invisibleProp,
    badgeContent: displayValue,
    showZero,
    max: max3
  }, other, {
    slots: {
      root: RootSlot,
      badge: BadgeSlot
    },
    className: clsx_m_default(rootSlotProps == null ? void 0 : rootSlotProps.className, classes2.root, className),
    slotProps: {
      root: _extends({}, rootSlotProps, shouldSpreadAdditionalProps_default(RootSlot) && {
        as: component,
        ownerState: _extends({}, rootSlotProps == null ? void 0 : rootSlotProps.ownerState, {
          anchorOrigin,
          color: color2,
          overlap,
          variant
        })
      }),
      badge: _extends({}, badgeSlotProps, {
        className: clsx_m_default(classes2.badge, badgeSlotProps == null ? void 0 : badgeSlotProps.className)
      }, shouldSpreadAdditionalProps_default(BadgeSlot) && {
        ownerState: _extends({}, badgeSlotProps == null ? void 0 : badgeSlotProps.ownerState, {
          anchorOrigin,
          color: color2,
          overlap,
          variant
        })
      })
    },
    ref
  }));
});
true ? Badge.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The anchor of the badge.
   * @default {
   *   vertical: 'top',
   *   horizontal: 'right',
   * }
   */
  anchorOrigin: import_prop_types12.default.shape({
    horizontal: import_prop_types12.default.oneOf(["left", "right"]).isRequired,
    vertical: import_prop_types12.default.oneOf(["bottom", "top"]).isRequired
  }),
  /**
   * The content rendered within the badge.
   */
  badgeContent: import_prop_types12.default.node,
  /**
   * The badge will be added relative to this node.
   */
  children: import_prop_types12.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types12.default.object,
  /**
   * @ignore
   */
  className: import_prop_types12.default.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'default'
   */
  color: import_prop_types12.default.oneOfType([import_prop_types12.default.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), import_prop_types12.default.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types12.default.elementType,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: import_prop_types12.default.shape({
    Badge: import_prop_types12.default.elementType,
    Root: import_prop_types12.default.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: import_prop_types12.default.shape({
    badge: import_prop_types12.default.oneOfType([import_prop_types12.default.func, import_prop_types12.default.object]),
    root: import_prop_types12.default.oneOfType([import_prop_types12.default.func, import_prop_types12.default.object])
  }),
  /**
   * If `true`, the badge is invisible.
   * @default false
   */
  invisible: import_prop_types12.default.bool,
  /**
   * Max count to show.
   * @default 99
   */
  max: import_prop_types12.default.number,
  /**
   * Wrapped shape the badge should overlap.
   * @default 'rectangular'
   */
  overlap: import_prop_types12.default.oneOf(["circular", "rectangular"]),
  /**
   * Controls whether the badge is hidden when `badgeContent` is zero.
   * @default false
   */
  showZero: import_prop_types12.default.bool,
  /**
   * The props used for each slot inside the Badge.
   * @default {}
   */
  slotProps: import_prop_types12.default.shape({
    badge: import_prop_types12.default.oneOfType([import_prop_types12.default.func, import_prop_types12.default.object]),
    root: import_prop_types12.default.oneOfType([import_prop_types12.default.func, import_prop_types12.default.object])
  }),
  /**
   * The components used for each slot inside the Badge.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: import_prop_types12.default.shape({
    badge: import_prop_types12.default.elementType,
    root: import_prop_types12.default.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types12.default.oneOfType([import_prop_types12.default.arrayOf(import_prop_types12.default.oneOfType([import_prop_types12.default.func, import_prop_types12.default.object, import_prop_types12.default.bool])), import_prop_types12.default.func, import_prop_types12.default.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: import_prop_types12.default.oneOfType([import_prop_types12.default.oneOf(["dot", "standard"]), import_prop_types12.default.string])
} : void 0;

// node_modules/@mui/material/BottomNavigation/BottomNavigation.js
init_extends();
init_objectWithoutPropertiesLoose();
var React18 = __toESM(require_react());
var import_react_is3 = __toESM(require_react_is());
var import_prop_types13 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/BottomNavigation/bottomNavigationClasses.js
init_esm();
init_generateUtilityClass();
function getBottomNavigationUtilityClass(slot) {
  return generateUtilityClass("MuiBottomNavigation", slot);
}
var bottomNavigationClasses = generateUtilityClasses("MuiBottomNavigation", ["root"]);

// node_modules/@mui/material/BottomNavigation/BottomNavigation.js
var import_jsx_runtime20 = __toESM(require_jsx_runtime());
var _excluded12 = ["children", "className", "component", "onChange", "showLabels", "value"];
var useUtilityClasses12 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getBottomNavigationUtilityClass, classes2);
};
var BottomNavigationRoot = styled_default("div", {
  name: "MuiBottomNavigation",
  slot: "Root",
  overridesResolver: (props, styles20) => styles20.root
})(({
  theme
}) => ({
  display: "flex",
  justifyContent: "center",
  height: 56,
  backgroundColor: (theme.vars || theme).palette.background.paper
}));
var BottomNavigation = React18.forwardRef(function BottomNavigation2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiBottomNavigation"
  });
  const {
    children,
    className,
    component = "div",
    onChange,
    showLabels = false,
    value
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded12);
  const ownerState = _extends({}, props, {
    component,
    showLabels
  });
  const classes2 = useUtilityClasses12(ownerState);
  return (0, import_jsx_runtime20.jsx)(BottomNavigationRoot, _extends({
    as: component,
    className: clsx_m_default(classes2.root, className),
    ref,
    ownerState
  }, other, {
    children: React18.Children.map(children, (child, childIndex) => {
      if (!React18.isValidElement(child)) {
        return null;
      }
      if (true) {
        if ((0, import_react_is3.isFragment)(child)) {
          console.error(["MUI: The BottomNavigation component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join("\n"));
        }
      }
      const childValue = child.props.value === void 0 ? childIndex : child.props.value;
      return React18.cloneElement(child, {
        selected: childValue === value,
        showLabel: child.props.showLabel !== void 0 ? child.props.showLabel : showLabels,
        value: childValue,
        onChange
      });
    })
  }));
});
true ? BottomNavigation.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types13.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types13.default.object,
  /**
   * @ignore
   */
  className: import_prop_types13.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types13.default.elementType,
  /**
   * Callback fired when the value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.
   * @param {any} value We default to the index of the child.
   */
  onChange: import_prop_types13.default.func,
  /**
   * If `true`, all `BottomNavigationAction`s will show their labels.
   * By default, only the selected `BottomNavigationAction` will show its label.
   * @default false
   */
  showLabels: import_prop_types13.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types13.default.oneOfType([import_prop_types13.default.arrayOf(import_prop_types13.default.oneOfType([import_prop_types13.default.func, import_prop_types13.default.object, import_prop_types13.default.bool])), import_prop_types13.default.func, import_prop_types13.default.object]),
  /**
   * The value of the currently selected `BottomNavigationAction`.
   */
  value: import_prop_types13.default.any
} : void 0;

// node_modules/@mui/material/BottomNavigationAction/BottomNavigationAction.js
init_objectWithoutPropertiesLoose();
init_extends();
var React19 = __toESM(require_react());
var import_prop_types14 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_styled();
init_useThemeProps();
init_unsupportedProp();

// node_modules/@mui/material/BottomNavigationAction/bottomNavigationActionClasses.js
init_esm();
init_generateUtilityClass();
function getBottomNavigationActionUtilityClass(slot) {
  return generateUtilityClass("MuiBottomNavigationAction", slot);
}
var bottomNavigationActionClasses = generateUtilityClasses("MuiBottomNavigationAction", ["root", "iconOnly", "selected", "label"]);
var bottomNavigationActionClasses_default = bottomNavigationActionClasses;

// node_modules/@mui/material/BottomNavigationAction/BottomNavigationAction.js
var import_jsx_runtime21 = __toESM(require_jsx_runtime());
var import_jsx_runtime22 = __toESM(require_jsx_runtime());
var _excluded13 = ["className", "icon", "label", "onChange", "onClick", "selected", "showLabel", "value"];
var useUtilityClasses13 = (ownerState) => {
  const {
    classes: classes2,
    showLabel,
    selected
  } = ownerState;
  const slots = {
    root: ["root", !showLabel && !selected && "iconOnly", selected && "selected"],
    label: ["label", !showLabel && !selected && "iconOnly", selected && "selected"]
  };
  return composeClasses(slots, getBottomNavigationActionUtilityClass, classes2);
};
var BottomNavigationActionRoot = styled_default(ButtonBase_default, {
  name: "MuiBottomNavigationAction",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, !ownerState.showLabel && !ownerState.selected && styles20.iconOnly];
  }
})(({
  theme,
  ownerState
}) => _extends({
  transition: theme.transitions.create(["color", "padding-top"], {
    duration: theme.transitions.duration.short
  }),
  padding: "0px 12px",
  minWidth: 80,
  maxWidth: 168,
  color: (theme.vars || theme).palette.text.secondary,
  flexDirection: "column",
  flex: "1"
}, !ownerState.showLabel && !ownerState.selected && {
  paddingTop: 14
}, !ownerState.showLabel && !ownerState.selected && !ownerState.label && {
  paddingTop: 0
}, {
  [`&.${bottomNavigationActionClasses_default.selected}`]: {
    color: (theme.vars || theme).palette.primary.main
  }
}));
var BottomNavigationActionLabel = styled_default("span", {
  name: "MuiBottomNavigationAction",
  slot: "Label",
  overridesResolver: (props, styles20) => styles20.label
})(({
  theme,
  ownerState
}) => _extends({
  fontFamily: theme.typography.fontFamily,
  fontSize: theme.typography.pxToRem(12),
  opacity: 1,
  transition: "font-size 0.2s, opacity 0.2s",
  transitionDelay: "0.1s"
}, !ownerState.showLabel && !ownerState.selected && {
  opacity: 0,
  transitionDelay: "0s"
}, {
  [`&.${bottomNavigationActionClasses_default.selected}`]: {
    fontSize: theme.typography.pxToRem(14)
  }
}));
var BottomNavigationAction = React19.forwardRef(function BottomNavigationAction2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiBottomNavigationAction"
  });
  const {
    className,
    icon,
    label,
    onChange,
    onClick,
    value
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded13);
  const ownerState = props;
  const classes2 = useUtilityClasses13(ownerState);
  const handleChange = (event) => {
    if (onChange) {
      onChange(event, value);
    }
    if (onClick) {
      onClick(event);
    }
  };
  return (0, import_jsx_runtime22.jsxs)(BottomNavigationActionRoot, _extends({
    ref,
    className: clsx_m_default(classes2.root, className),
    focusRipple: true,
    onClick: handleChange,
    ownerState
  }, other, {
    children: [icon, (0, import_jsx_runtime21.jsx)(BottomNavigationActionLabel, {
      className: classes2.label,
      ownerState,
      children: label
    })]
  }));
});
true ? BottomNavigationAction.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * This prop isn't supported.
   * Use the `component` prop if you need to change the children structure.
   */
  children: unsupportedProp_default,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types14.default.object,
  /**
   * @ignore
   */
  className: import_prop_types14.default.string,
  /**
   * The icon to display.
   */
  icon: import_prop_types14.default.node,
  /**
   * The label element.
   */
  label: import_prop_types14.default.node,
  /**
   * @ignore
   */
  onChange: import_prop_types14.default.func,
  /**
   * @ignore
   */
  onClick: import_prop_types14.default.func,
  /**
   * If `true`, the `BottomNavigationAction` will show its label.
   * By default, only the selected `BottomNavigationAction`
   * inside `BottomNavigation` will show its label.
   *
   * The prop defaults to the value (`false`) inherited from the parent BottomNavigation component.
   */
  showLabel: import_prop_types14.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types14.default.oneOfType([import_prop_types14.default.arrayOf(import_prop_types14.default.oneOfType([import_prop_types14.default.func, import_prop_types14.default.object, import_prop_types14.default.bool])), import_prop_types14.default.func, import_prop_types14.default.object]),
  /**
   * You can provide your own value. Otherwise, we fallback to the child position index.
   */
  value: import_prop_types14.default.any
} : void 0;

// node_modules/@mui/material/Box/Box.js
init_esm2();
var import_prop_types15 = __toESM(require_prop_types());

// node_modules/@mui/material/className/index.js
init_esm();

// node_modules/@mui/material/Box/Box.js
var defaultTheme = createTheme_default();
var Box = createBox({
  defaultTheme,
  defaultClassName: "MuiBox-root",
  generateClassName: ClassNameGenerator_default.generate
});
true ? Box.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  children: import_prop_types15.default.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types15.default.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types15.default.oneOfType([import_prop_types15.default.arrayOf(import_prop_types15.default.oneOfType([import_prop_types15.default.func, import_prop_types15.default.object, import_prop_types15.default.bool])), import_prop_types15.default.func, import_prop_types15.default.object])
} : void 0;

// node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js
init_extends();
init_objectWithoutPropertiesLoose();
var React22 = __toESM(require_react());
var import_react_is4 = __toESM(require_react_is());
var import_prop_types17 = __toESM(require_prop_types());
init_clsx_m();
init_esm();
init_base();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js
init_extends();
var React21 = __toESM(require_react());
var import_prop_types16 = __toESM(require_prop_types());
init_esm2();
init_styled();

// node_modules/@mui/material/internal/svg-icons/MoreHoriz.js
var React20 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime23 = __toESM(require_jsx_runtime());
var MoreHoriz_default = createSvgIcon((0, import_jsx_runtime23.jsx)("path", {
  d: "M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
}), "MoreHoriz");

// node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js
var import_jsx_runtime24 = __toESM(require_jsx_runtime());
var BreadcrumbCollapsedButton = styled_default(ButtonBase_default)(({
  theme
}) => _extends({
  display: "flex",
  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,
  marginRight: `calc(${theme.spacing(1)} * 0.5)`
}, theme.palette.mode === "light" ? {
  backgroundColor: theme.palette.grey[100],
  color: theme.palette.grey[700]
} : {
  backgroundColor: theme.palette.grey[700],
  color: theme.palette.grey[100]
}, {
  borderRadius: 2,
  "&:hover, &:focus": _extends({}, theme.palette.mode === "light" ? {
    backgroundColor: theme.palette.grey[200]
  } : {
    backgroundColor: theme.palette.grey[600]
  }),
  "&:active": _extends({
    boxShadow: theme.shadows[0]
  }, theme.palette.mode === "light" ? {
    backgroundColor: emphasize(theme.palette.grey[200], 0.12)
  } : {
    backgroundColor: emphasize(theme.palette.grey[600], 0.12)
  })
}));
var BreadcrumbCollapsedIcon = styled_default(MoreHoriz_default)({
  width: 24,
  height: 16
});
function BreadcrumbCollapsed(props) {
  const ownerState = props;
  return (0, import_jsx_runtime24.jsx)("li", {
    children: (0, import_jsx_runtime24.jsx)(BreadcrumbCollapsedButton, _extends({
      focusRipple: true
    }, props, {
      ownerState,
      children: (0, import_jsx_runtime24.jsx)(BreadcrumbCollapsedIcon, {
        ownerState
      })
    }))
  });
}
true ? BreadcrumbCollapsed.propTypes = {
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types16.default.object
} : void 0;
var BreadcrumbCollapsed_default = BreadcrumbCollapsed;

// node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js
init_esm();
init_generateUtilityClass();
function getBreadcrumbsUtilityClass(slot) {
  return generateUtilityClass("MuiBreadcrumbs", slot);
}
var breadcrumbsClasses = generateUtilityClasses("MuiBreadcrumbs", ["root", "ol", "li", "separator"]);
var breadcrumbsClasses_default = breadcrumbsClasses;

// node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js
var import_jsx_runtime25 = __toESM(require_jsx_runtime());
var _excluded14 = ["children", "className", "component", "expandText", "itemsAfterCollapse", "itemsBeforeCollapse", "maxItems", "separator"];
var useUtilityClasses14 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"],
    li: ["li"],
    ol: ["ol"],
    separator: ["separator"]
  };
  return composeClasses(slots, getBreadcrumbsUtilityClass, classes2);
};
var BreadcrumbsRoot = styled_default(Typography_default, {
  name: "MuiBreadcrumbs",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    return [{
      [`& .${breadcrumbsClasses_default.li}`]: styles20.li
    }, styles20.root];
  }
})({});
var BreadcrumbsOl = styled_default("ol", {
  name: "MuiBreadcrumbs",
  slot: "Ol",
  overridesResolver: (props, styles20) => styles20.ol
})({
  display: "flex",
  flexWrap: "wrap",
  alignItems: "center",
  padding: 0,
  margin: 0,
  listStyle: "none"
});
var BreadcrumbsSeparator = styled_default("li", {
  name: "MuiBreadcrumbs",
  slot: "Separator",
  overridesResolver: (props, styles20) => styles20.separator
})({
  display: "flex",
  userSelect: "none",
  marginLeft: 8,
  marginRight: 8
});
function insertSeparators(items, className, separator, ownerState) {
  return items.reduce((acc, current, index2) => {
    if (index2 < items.length - 1) {
      acc = acc.concat(current, (0, import_jsx_runtime25.jsx)(BreadcrumbsSeparator, {
        "aria-hidden": true,
        className,
        ownerState,
        children: separator
      }, `separator-${index2}`));
    } else {
      acc.push(current);
    }
    return acc;
  }, []);
}
var Breadcrumbs = React22.forwardRef(function Breadcrumbs2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiBreadcrumbs"
  });
  const {
    children,
    className,
    component = "nav",
    expandText = "Show path",
    itemsAfterCollapse = 1,
    itemsBeforeCollapse = 1,
    maxItems = 8,
    separator = "/"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded14);
  const [expanded, setExpanded] = React22.useState(false);
  const ownerState = _extends({}, props, {
    component,
    expanded,
    expandText,
    itemsAfterCollapse,
    itemsBeforeCollapse,
    maxItems,
    separator
  });
  const classes2 = useUtilityClasses14(ownerState);
  const listRef = React22.useRef(null);
  const renderItemsBeforeAndAfter = (allItems2) => {
    const handleClickExpand = () => {
      setExpanded(true);
      const focusable = listRef.current.querySelector("a[href],button,[tabindex]");
      if (focusable) {
        focusable.focus();
      }
    };
    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems2.length) {
      if (true) {
        console.error(["MUI: You have provided an invalid combination of props to the Breadcrumbs.", `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join("\n"));
      }
      return allItems2;
    }
    return [...allItems2.slice(0, itemsBeforeCollapse), (0, import_jsx_runtime25.jsx)(BreadcrumbCollapsed_default, {
      "aria-label": expandText,
      onClick: handleClickExpand
    }, "ellipsis"), ...allItems2.slice(allItems2.length - itemsAfterCollapse, allItems2.length)];
  };
  const allItems = React22.Children.toArray(children).filter((child) => {
    if (true) {
      if ((0, import_react_is4.isFragment)(child)) {
        console.error(["MUI: The Breadcrumbs component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join("\n"));
      }
    }
    return React22.isValidElement(child);
  }).map((child, index2) => (0, import_jsx_runtime25.jsx)("li", {
    className: classes2.li,
    children: child
  }, `child-${index2}`));
  return (0, import_jsx_runtime25.jsx)(BreadcrumbsRoot, _extends({
    ref,
    component,
    color: "text.secondary",
    className: clsx_m_default(classes2.root, className),
    ownerState
  }, other, {
    children: (0, import_jsx_runtime25.jsx)(BreadcrumbsOl, {
      className: classes2.ol,
      ref: listRef,
      ownerState,
      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes2.separator, separator, ownerState)
    })
  }));
});
true ? Breadcrumbs.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types17.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types17.default.object,
  /**
   * @ignore
   */
  className: import_prop_types17.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types17.default.elementType,
  /**
   * Override the default label for the expand button.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Show path'
   */
  expandText: import_prop_types17.default.string,
  /**
   * If max items is exceeded, the number of items to show after the ellipsis.
   * @default 1
   */
  itemsAfterCollapse: integerPropType_default,
  /**
   * If max items is exceeded, the number of items to show before the ellipsis.
   * @default 1
   */
  itemsBeforeCollapse: integerPropType_default,
  /**
   * Specifies the maximum number of breadcrumbs to display. When there are more
   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`
   * will be shown, with an ellipsis in between.
   * @default 8
   */
  maxItems: integerPropType_default,
  /**
   * Custom separator node.
   * @default '/'
   */
  separator: import_prop_types17.default.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types17.default.oneOfType([import_prop_types17.default.arrayOf(import_prop_types17.default.oneOfType([import_prop_types17.default.func, import_prop_types17.default.object, import_prop_types17.default.bool])), import_prop_types17.default.func, import_prop_types17.default.object])
} : void 0;

// node_modules/@mui/material/ButtonGroup/ButtonGroup.js
init_objectWithoutPropertiesLoose();
init_extends();
var React23 = __toESM(require_react());
var import_prop_types18 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_esm2();
init_capitalize();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/ButtonGroup/buttonGroupClasses.js
init_esm();
init_generateUtilityClass();
function getButtonGroupUtilityClass(slot) {
  return generateUtilityClass("MuiButtonGroup", slot);
}
var buttonGroupClasses = generateUtilityClasses("MuiButtonGroup", ["root", "contained", "outlined", "text", "disableElevation", "disabled", "fullWidth", "vertical", "grouped", "groupedHorizontal", "groupedVertical", "groupedText", "groupedTextHorizontal", "groupedTextVertical", "groupedTextPrimary", "groupedTextSecondary", "groupedOutlined", "groupedOutlinedHorizontal", "groupedOutlinedVertical", "groupedOutlinedPrimary", "groupedOutlinedSecondary", "groupedContained", "groupedContainedHorizontal", "groupedContainedVertical", "groupedContainedPrimary", "groupedContainedSecondary"]);
var buttonGroupClasses_default = buttonGroupClasses;

// node_modules/@mui/material/ButtonGroup/ButtonGroup.js
var import_jsx_runtime26 = __toESM(require_jsx_runtime());
var _excluded15 = ["children", "className", "color", "component", "disabled", "disableElevation", "disableFocusRipple", "disableRipple", "fullWidth", "orientation", "size", "variant"];
var overridesResolver = (props, styles20) => {
  const {
    ownerState
  } = props;
  return [{
    [`& .${buttonGroupClasses_default.grouped}`]: styles20.grouped
  }, {
    [`& .${buttonGroupClasses_default.grouped}`]: styles20[`grouped${capitalize_default(ownerState.orientation)}`]
  }, {
    [`& .${buttonGroupClasses_default.grouped}`]: styles20[`grouped${capitalize_default(ownerState.variant)}`]
  }, {
    [`& .${buttonGroupClasses_default.grouped}`]: styles20[`grouped${capitalize_default(ownerState.variant)}${capitalize_default(ownerState.orientation)}`]
  }, {
    [`& .${buttonGroupClasses_default.grouped}`]: styles20[`grouped${capitalize_default(ownerState.variant)}${capitalize_default(ownerState.color)}`]
  }, styles20.root, styles20[ownerState.variant], ownerState.disableElevation === true && styles20.disableElevation, ownerState.fullWidth && styles20.fullWidth, ownerState.orientation === "vertical" && styles20.vertical];
};
var useUtilityClasses15 = (ownerState) => {
  const {
    classes: classes2,
    color: color2,
    disabled,
    disableElevation,
    fullWidth,
    orientation,
    variant
  } = ownerState;
  const slots = {
    root: ["root", variant, orientation === "vertical" && "vertical", fullWidth && "fullWidth", disableElevation && "disableElevation"],
    grouped: ["grouped", `grouped${capitalize_default(orientation)}`, `grouped${capitalize_default(variant)}`, `grouped${capitalize_default(variant)}${capitalize_default(orientation)}`, `grouped${capitalize_default(variant)}${capitalize_default(color2)}`, disabled && "disabled"]
  };
  return composeClasses(slots, getButtonGroupUtilityClass, classes2);
};
var ButtonGroupRoot = styled_default("div", {
  name: "MuiButtonGroup",
  slot: "Root",
  overridesResolver
})(({
  theme,
  ownerState
}) => _extends({
  display: "inline-flex",
  borderRadius: (theme.vars || theme).shape.borderRadius
}, ownerState.variant === "contained" && {
  boxShadow: (theme.vars || theme).shadows[2]
}, ownerState.disableElevation && {
  boxShadow: "none"
}, ownerState.fullWidth && {
  width: "100%"
}, ownerState.orientation === "vertical" && {
  flexDirection: "column"
}, {
  [`& .${buttonGroupClasses_default.grouped}`]: _extends({
    minWidth: 40,
    "&:not(:first-of-type)": _extends({}, ownerState.orientation === "horizontal" && {
      borderTopLeftRadius: 0,
      borderBottomLeftRadius: 0
    }, ownerState.orientation === "vertical" && {
      borderTopRightRadius: 0,
      borderTopLeftRadius: 0
    }, ownerState.variant === "outlined" && ownerState.orientation === "horizontal" && {
      marginLeft: -1
    }, ownerState.variant === "outlined" && ownerState.orientation === "vertical" && {
      marginTop: -1
    }),
    "&:not(:last-of-type)": _extends({}, ownerState.orientation === "horizontal" && {
      borderTopRightRadius: 0,
      borderBottomRightRadius: 0
    }, ownerState.orientation === "vertical" && {
      borderBottomRightRadius: 0,
      borderBottomLeftRadius: 0
    }, ownerState.variant === "text" && ownerState.orientation === "horizontal" && {
      borderRight: theme.vars ? `1px solid rgba(${theme.vars.palette.common.onBackgroundChannel} / 0.23)` : `1px solid ${theme.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)"}`
    }, ownerState.variant === "text" && ownerState.orientation === "vertical" && {
      borderBottom: theme.vars ? `1px solid rgba(${theme.vars.palette.common.onBackgroundChannel} / 0.23)` : `1px solid ${theme.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)"}`
    }, ownerState.variant === "text" && ownerState.color !== "inherit" && {
      borderColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.5)` : alpha(theme.palette[ownerState.color].main, 0.5)
    }, ownerState.variant === "outlined" && ownerState.orientation === "horizontal" && {
      borderRightColor: "transparent"
    }, ownerState.variant === "outlined" && ownerState.orientation === "vertical" && {
      borderBottomColor: "transparent"
    }, ownerState.variant === "contained" && ownerState.orientation === "horizontal" && {
      borderRight: `1px solid ${(theme.vars || theme).palette.grey[400]}`,
      [`&.${buttonGroupClasses_default.disabled}`]: {
        borderRight: `1px solid ${(theme.vars || theme).palette.action.disabled}`
      }
    }, ownerState.variant === "contained" && ownerState.orientation === "vertical" && {
      borderBottom: `1px solid ${(theme.vars || theme).palette.grey[400]}`,
      [`&.${buttonGroupClasses_default.disabled}`]: {
        borderBottom: `1px solid ${(theme.vars || theme).palette.action.disabled}`
      }
    }, ownerState.variant === "contained" && ownerState.color !== "inherit" && {
      borderColor: (theme.vars || theme).palette[ownerState.color].dark
    }, {
      "&:hover": _extends({}, ownerState.variant === "outlined" && ownerState.orientation === "horizontal" && {
        borderRightColor: "currentColor"
      }, ownerState.variant === "outlined" && ownerState.orientation === "vertical" && {
        borderBottomColor: "currentColor"
      })
    }),
    "&:hover": _extends({}, ownerState.variant === "contained" && {
      boxShadow: "none"
    })
  }, ownerState.variant === "contained" && {
    boxShadow: "none"
  })
}));
var ButtonGroup = React23.forwardRef(function ButtonGroup2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiButtonGroup"
  });
  const {
    children,
    className,
    color: color2 = "primary",
    component = "div",
    disabled = false,
    disableElevation = false,
    disableFocusRipple = false,
    disableRipple = false,
    fullWidth = false,
    orientation = "horizontal",
    size = "medium",
    variant = "outlined"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded15);
  const ownerState = _extends({}, props, {
    color: color2,
    component,
    disabled,
    disableElevation,
    disableFocusRipple,
    disableRipple,
    fullWidth,
    orientation,
    size,
    variant
  });
  const classes2 = useUtilityClasses15(ownerState);
  const context = React23.useMemo(() => ({
    className: classes2.grouped,
    color: color2,
    disabled,
    disableElevation,
    disableFocusRipple,
    disableRipple,
    fullWidth,
    size,
    variant
  }), [color2, disabled, disableElevation, disableFocusRipple, disableRipple, fullWidth, size, variant, classes2.grouped]);
  return (0, import_jsx_runtime26.jsx)(ButtonGroupRoot, _extends({
    as: component,
    role: "group",
    className: clsx_m_default(classes2.root, className),
    ref,
    ownerState
  }, other, {
    children: (0, import_jsx_runtime26.jsx)(ButtonGroupContext_default.Provider, {
      value: context,
      children
    })
  }));
});
true ? ButtonGroup.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types18.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types18.default.object,
  /**
   * @ignore
   */
  className: import_prop_types18.default.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'primary'
   */
  color: import_prop_types18.default.oneOfType([import_prop_types18.default.oneOf(["inherit", "primary", "secondary", "error", "info", "success", "warning"]), import_prop_types18.default.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types18.default.elementType,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types18.default.bool,
  /**
   * If `true`, no elevation is used.
   * @default false
   */
  disableElevation: import_prop_types18.default.bool,
  /**
   * If `true`, the button keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: import_prop_types18.default.bool,
  /**
   * If `true`, the button ripple effect is disabled.
   * @default false
   */
  disableRipple: import_prop_types18.default.bool,
  /**
   * If `true`, the buttons will take up the full width of its container.
   * @default false
   */
  fullWidth: import_prop_types18.default.bool,
  /**
   * The component orientation (layout flow direction).
   * @default 'horizontal'
   */
  orientation: import_prop_types18.default.oneOf(["horizontal", "vertical"]),
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: import_prop_types18.default.oneOfType([import_prop_types18.default.oneOf(["small", "medium", "large"]), import_prop_types18.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types18.default.oneOfType([import_prop_types18.default.arrayOf(import_prop_types18.default.oneOfType([import_prop_types18.default.func, import_prop_types18.default.object, import_prop_types18.default.bool])), import_prop_types18.default.func, import_prop_types18.default.object]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: import_prop_types18.default.oneOfType([import_prop_types18.default.oneOf(["contained", "outlined", "text"]), import_prop_types18.default.string])
} : void 0;

// node_modules/@mui/material/CardActionArea/CardActionArea.js
init_extends();
init_objectWithoutPropertiesLoose();
var React24 = __toESM(require_react());
var import_prop_types19 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_useThemeProps();
init_styled();

// node_modules/@mui/material/CardActionArea/cardActionAreaClasses.js
init_esm();
init_generateUtilityClass();
function getCardActionAreaUtilityClass(slot) {
  return generateUtilityClass("MuiCardActionArea", slot);
}
var cardActionAreaClasses = generateUtilityClasses("MuiCardActionArea", ["root", "focusVisible", "focusHighlight"]);
var cardActionAreaClasses_default = cardActionAreaClasses;

// node_modules/@mui/material/CardActionArea/CardActionArea.js
var import_jsx_runtime27 = __toESM(require_jsx_runtime());
var import_jsx_runtime28 = __toESM(require_jsx_runtime());
var _excluded16 = ["children", "className", "focusVisibleClassName"];
var useUtilityClasses16 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"],
    focusHighlight: ["focusHighlight"]
  };
  return composeClasses(slots, getCardActionAreaUtilityClass, classes2);
};
var CardActionAreaRoot = styled_default(ButtonBase_default, {
  name: "MuiCardActionArea",
  slot: "Root",
  overridesResolver: (props, styles20) => styles20.root
})(({
  theme
}) => ({
  display: "block",
  textAlign: "inherit",
  width: "100%",
  [`&:hover .${cardActionAreaClasses_default.focusHighlight}`]: {
    opacity: (theme.vars || theme).palette.action.hoverOpacity,
    "@media (hover: none)": {
      opacity: 0
    }
  },
  [`&.${cardActionAreaClasses_default.focusVisible} .${cardActionAreaClasses_default.focusHighlight}`]: {
    opacity: (theme.vars || theme).palette.action.focusOpacity
  }
}));
var CardActionAreaFocusHighlight = styled_default("span", {
  name: "MuiCardActionArea",
  slot: "FocusHighlight",
  overridesResolver: (props, styles20) => styles20.focusHighlight
})(({
  theme
}) => ({
  overflow: "hidden",
  pointerEvents: "none",
  position: "absolute",
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: "inherit",
  opacity: 0,
  backgroundColor: "currentcolor",
  transition: theme.transitions.create("opacity", {
    duration: theme.transitions.duration.short
  })
}));
var CardActionArea = React24.forwardRef(function CardActionArea2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiCardActionArea"
  });
  const {
    children,
    className,
    focusVisibleClassName
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded16);
  const ownerState = props;
  const classes2 = useUtilityClasses16(ownerState);
  return (0, import_jsx_runtime28.jsxs)(CardActionAreaRoot, _extends({
    className: clsx_m_default(classes2.root, className),
    focusVisibleClassName: clsx_m_default(focusVisibleClassName, classes2.focusVisible),
    ref,
    ownerState
  }, other, {
    children: [children, (0, import_jsx_runtime27.jsx)(CardActionAreaFocusHighlight, {
      className: classes2.focusHighlight,
      ownerState
    })]
  }));
});
true ? CardActionArea.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types19.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types19.default.object,
  /**
   * @ignore
   */
  className: import_prop_types19.default.string,
  /**
   * @ignore
   */
  focusVisibleClassName: import_prop_types19.default.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types19.default.oneOfType([import_prop_types19.default.arrayOf(import_prop_types19.default.oneOfType([import_prop_types19.default.func, import_prop_types19.default.object, import_prop_types19.default.bool])), import_prop_types19.default.func, import_prop_types19.default.object])
} : void 0;

// node_modules/@mui/material/CardActions/CardActions.js
init_objectWithoutPropertiesLoose();
init_extends();
var React25 = __toESM(require_react());
var import_prop_types20 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/CardActions/cardActionsClasses.js
init_esm();
init_generateUtilityClass();
function getCardActionsUtilityClass(slot) {
  return generateUtilityClass("MuiCardActions", slot);
}
var cardActionsClasses = generateUtilityClasses("MuiCardActions", ["root", "spacing"]);

// node_modules/@mui/material/CardActions/CardActions.js
var import_jsx_runtime29 = __toESM(require_jsx_runtime());
var _excluded17 = ["disableSpacing", "className"];
var useUtilityClasses17 = (ownerState) => {
  const {
    classes: classes2,
    disableSpacing
  } = ownerState;
  const slots = {
    root: ["root", !disableSpacing && "spacing"]
  };
  return composeClasses(slots, getCardActionsUtilityClass, classes2);
};
var CardActionsRoot = styled_default("div", {
  name: "MuiCardActions",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, !ownerState.disableSpacing && styles20.spacing];
  }
})(({
  ownerState
}) => _extends({
  display: "flex",
  alignItems: "center",
  padding: 8
}, !ownerState.disableSpacing && {
  "& > :not(:first-of-type)": {
    marginLeft: 8
  }
}));
var CardActions = React25.forwardRef(function CardActions2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiCardActions"
  });
  const {
    disableSpacing = false,
    className
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded17);
  const ownerState = _extends({}, props, {
    disableSpacing
  });
  const classes2 = useUtilityClasses17(ownerState);
  return (0, import_jsx_runtime29.jsx)(CardActionsRoot, _extends({
    className: clsx_m_default(classes2.root, className),
    ownerState,
    ref
  }, other));
});
true ? CardActions.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types20.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types20.default.object,
  /**
   * @ignore
   */
  className: import_prop_types20.default.string,
  /**
   * If `true`, the actions do not have additional margin.
   * @default false
   */
  disableSpacing: import_prop_types20.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types20.default.oneOfType([import_prop_types20.default.arrayOf(import_prop_types20.default.oneOfType([import_prop_types20.default.func, import_prop_types20.default.object, import_prop_types20.default.bool])), import_prop_types20.default.func, import_prop_types20.default.object])
} : void 0;

// node_modules/@mui/material/CardHeader/CardHeader.js
init_objectWithoutPropertiesLoose();
init_extends();
var React26 = __toESM(require_react());
var import_prop_types21 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_useThemeProps();
init_styled();

// node_modules/@mui/material/CardHeader/cardHeaderClasses.js
init_esm();
init_generateUtilityClass();
function getCardHeaderUtilityClass(slot) {
  return generateUtilityClass("MuiCardHeader", slot);
}
var cardHeaderClasses = generateUtilityClasses("MuiCardHeader", ["root", "avatar", "action", "content", "title", "subheader"]);
var cardHeaderClasses_default = cardHeaderClasses;

// node_modules/@mui/material/CardHeader/CardHeader.js
var import_jsx_runtime30 = __toESM(require_jsx_runtime());
var import_jsx_runtime31 = __toESM(require_jsx_runtime());
var _excluded18 = ["action", "avatar", "className", "component", "disableTypography", "subheader", "subheaderTypographyProps", "title", "titleTypographyProps"];
var useUtilityClasses18 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"],
    avatar: ["avatar"],
    action: ["action"],
    content: ["content"],
    title: ["title"],
    subheader: ["subheader"]
  };
  return composeClasses(slots, getCardHeaderUtilityClass, classes2);
};
var CardHeaderRoot = styled_default("div", {
  name: "MuiCardHeader",
  slot: "Root",
  overridesResolver: (props, styles20) => _extends({
    [`& .${cardHeaderClasses_default.title}`]: styles20.title,
    [`& .${cardHeaderClasses_default.subheader}`]: styles20.subheader
  }, styles20.root)
})({
  display: "flex",
  alignItems: "center",
  padding: 16
});
var CardHeaderAvatar = styled_default("div", {
  name: "MuiCardHeader",
  slot: "Avatar",
  overridesResolver: (props, styles20) => styles20.avatar
})({
  display: "flex",
  flex: "0 0 auto",
  marginRight: 16
});
var CardHeaderAction = styled_default("div", {
  name: "MuiCardHeader",
  slot: "Action",
  overridesResolver: (props, styles20) => styles20.action
})({
  flex: "0 0 auto",
  alignSelf: "flex-start",
  marginTop: -4,
  marginRight: -8,
  marginBottom: -4
});
var CardHeaderContent = styled_default("div", {
  name: "MuiCardHeader",
  slot: "Content",
  overridesResolver: (props, styles20) => styles20.content
})({
  flex: "1 1 auto"
});
var CardHeader = React26.forwardRef(function CardHeader2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiCardHeader"
  });
  const {
    action,
    avatar,
    className,
    component = "div",
    disableTypography = false,
    subheader: subheaderProp,
    subheaderTypographyProps,
    title: titleProp,
    titleTypographyProps
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded18);
  const ownerState = _extends({}, props, {
    component,
    disableTypography
  });
  const classes2 = useUtilityClasses18(ownerState);
  let title = titleProp;
  if (title != null && title.type !== Typography_default && !disableTypography) {
    title = (0, import_jsx_runtime30.jsx)(Typography_default, _extends({
      variant: avatar ? "body2" : "h5",
      className: classes2.title,
      component: "span",
      display: "block"
    }, titleTypographyProps, {
      children: title
    }));
  }
  let subheader = subheaderProp;
  if (subheader != null && subheader.type !== Typography_default && !disableTypography) {
    subheader = (0, import_jsx_runtime30.jsx)(Typography_default, _extends({
      variant: avatar ? "body2" : "body1",
      className: classes2.subheader,
      color: "text.secondary",
      component: "span",
      display: "block"
    }, subheaderTypographyProps, {
      children: subheader
    }));
  }
  return (0, import_jsx_runtime31.jsxs)(CardHeaderRoot, _extends({
    className: clsx_m_default(classes2.root, className),
    as: component,
    ref,
    ownerState
  }, other, {
    children: [avatar && (0, import_jsx_runtime30.jsx)(CardHeaderAvatar, {
      className: classes2.avatar,
      ownerState,
      children: avatar
    }), (0, import_jsx_runtime31.jsxs)(CardHeaderContent, {
      className: classes2.content,
      ownerState,
      children: [title, subheader]
    }), action && (0, import_jsx_runtime30.jsx)(CardHeaderAction, {
      className: classes2.action,
      ownerState,
      children: action
    })]
  }));
});
true ? CardHeader.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The action to display in the card header.
   */
  action: import_prop_types21.default.node,
  /**
   * The Avatar element to display.
   */
  avatar: import_prop_types21.default.node,
  /**
   * @ignore
   */
  children: import_prop_types21.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types21.default.object,
  /**
   * @ignore
   */
  className: import_prop_types21.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types21.default.elementType,
  /**
   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.
   * This can be useful to render an alternative Typography variant by wrapping
   * the `title` text, and optional `subheader` text
   * with the Typography component.
   * @default false
   */
  disableTypography: import_prop_types21.default.bool,
  /**
   * The content of the component.
   */
  subheader: import_prop_types21.default.node,
  /**
   * These props will be forwarded to the subheader
   * (as long as disableTypography is not `true`).
   */
  subheaderTypographyProps: import_prop_types21.default.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types21.default.oneOfType([import_prop_types21.default.arrayOf(import_prop_types21.default.oneOfType([import_prop_types21.default.func, import_prop_types21.default.object, import_prop_types21.default.bool])), import_prop_types21.default.func, import_prop_types21.default.object]),
  /**
   * The content of the component.
   */
  title: import_prop_types21.default.node,
  /**
   * These props will be forwarded to the title
   * (as long as disableTypography is not `true`).
   */
  titleTypographyProps: import_prop_types21.default.object
} : void 0;

// node_modules/@mui/material/Checkbox/Checkbox.js
init_objectWithoutPropertiesLoose();
init_extends();
var React31 = __toESM(require_react());
var import_prop_types23 = __toESM(require_prop_types());
init_clsx_m();
init_esm();
init_base();
init_esm2();

// node_modules/@mui/material/internal/SwitchBase.js
init_objectWithoutPropertiesLoose();
init_extends();
var React27 = __toESM(require_react());
var import_prop_types22 = __toESM(require_prop_types());
init_clsx_m();
init_esm();
init_base();
init_capitalize();
init_styled();
init_useControlled();

// node_modules/@mui/material/internal/switchBaseClasses.js
init_esm();
init_generateUtilityClass();
function getSwitchBaseUtilityClass(slot) {
  return generateUtilityClass("PrivateSwitchBase", slot);
}
var switchBaseClasses = generateUtilityClasses("PrivateSwitchBase", ["root", "checked", "disabled", "input", "edgeStart", "edgeEnd"]);

// node_modules/@mui/material/internal/SwitchBase.js
var import_jsx_runtime32 = __toESM(require_jsx_runtime());
var import_jsx_runtime33 = __toESM(require_jsx_runtime());
var _excluded19 = ["autoFocus", "checked", "checkedIcon", "className", "defaultChecked", "disabled", "disableFocusRipple", "edge", "icon", "id", "inputProps", "inputRef", "name", "onBlur", "onChange", "onFocus", "readOnly", "required", "tabIndex", "type", "value"];
var useUtilityClasses19 = (ownerState) => {
  const {
    classes: classes2,
    checked,
    disabled,
    edge
  } = ownerState;
  const slots = {
    root: ["root", checked && "checked", disabled && "disabled", edge && `edge${capitalize_default(edge)}`],
    input: ["input"]
  };
  return composeClasses(slots, getSwitchBaseUtilityClass, classes2);
};
var SwitchBaseRoot = styled_default(ButtonBase_default)(({
  ownerState
}) => _extends({
  padding: 9,
  borderRadius: "50%"
}, ownerState.edge === "start" && {
  marginLeft: ownerState.size === "small" ? -3 : -12
}, ownerState.edge === "end" && {
  marginRight: ownerState.size === "small" ? -3 : -12
}));
var SwitchBaseInput = styled_default("input")({
  cursor: "inherit",
  position: "absolute",
  opacity: 0,
  width: "100%",
  height: "100%",
  top: 0,
  left: 0,
  margin: 0,
  padding: 0,
  zIndex: 1
});
var SwitchBase = React27.forwardRef(function SwitchBase2(props, ref) {
  const {
    autoFocus,
    checked: checkedProp,
    checkedIcon,
    className,
    defaultChecked,
    disabled: disabledProp,
    disableFocusRipple = false,
    edge = false,
    icon,
    id,
    inputProps,
    inputRef,
    name,
    onBlur,
    onChange,
    onFocus,
    readOnly,
    required,
    tabIndex,
    type,
    value
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded19);
  const [checked, setCheckedState] = useControlled_default({
    controlled: checkedProp,
    default: Boolean(defaultChecked),
    name: "SwitchBase",
    state: "checked"
  });
  const muiFormControl = useFormControl();
  const handleFocus = (event) => {
    if (onFocus) {
      onFocus(event);
    }
    if (muiFormControl && muiFormControl.onFocus) {
      muiFormControl.onFocus(event);
    }
  };
  const handleBlur = (event) => {
    if (onBlur) {
      onBlur(event);
    }
    if (muiFormControl && muiFormControl.onBlur) {
      muiFormControl.onBlur(event);
    }
  };
  const handleInputChange = (event) => {
    if (event.nativeEvent.defaultPrevented) {
      return;
    }
    const newChecked = event.target.checked;
    setCheckedState(newChecked);
    if (onChange) {
      onChange(event, newChecked);
    }
  };
  let disabled = disabledProp;
  if (muiFormControl) {
    if (typeof disabled === "undefined") {
      disabled = muiFormControl.disabled;
    }
  }
  const hasLabelFor = type === "checkbox" || type === "radio";
  const ownerState = _extends({}, props, {
    checked,
    disabled,
    disableFocusRipple,
    edge
  });
  const classes2 = useUtilityClasses19(ownerState);
  return (0, import_jsx_runtime33.jsxs)(SwitchBaseRoot, _extends({
    component: "span",
    className: clsx_m_default(classes2.root, className),
    centerRipple: true,
    focusRipple: !disableFocusRipple,
    disabled,
    tabIndex: null,
    role: void 0,
    onFocus: handleFocus,
    onBlur: handleBlur,
    ownerState,
    ref
  }, other, {
    children: [(0, import_jsx_runtime32.jsx)(SwitchBaseInput, _extends({
      autoFocus,
      checked: checkedProp,
      defaultChecked,
      className: classes2.input,
      disabled,
      id: hasLabelFor && id,
      name,
      onChange: handleInputChange,
      readOnly,
      ref: inputRef,
      required,
      ownerState,
      tabIndex,
      type
    }, type === "checkbox" && value === void 0 ? {} : {
      value
    }, inputProps)), checked ? checkedIcon : icon]
  }));
});
true ? SwitchBase.propTypes = {
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: import_prop_types22.default.bool,
  /**
   * If `true`, the component is checked.
   */
  checked: import_prop_types22.default.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: import_prop_types22.default.node.isRequired,
  /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */
  classes: import_prop_types22.default.object,
  /**
   * @ignore
   */
  className: import_prop_types22.default.string,
  /**
   * @ignore
   */
  defaultChecked: import_prop_types22.default.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: import_prop_types22.default.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: import_prop_types22.default.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: import_prop_types22.default.oneOf(["end", "start", false]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: import_prop_types22.default.node.isRequired,
  /**
   * The id of the `input` element.
   */
  id: import_prop_types22.default.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: import_prop_types22.default.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: refType_default,
  /*
   * @ignore
   */
  name: import_prop_types22.default.string,
  /**
   * @ignore
   */
  onBlur: import_prop_types22.default.func,
  /**
   * Callback fired when the state is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: import_prop_types22.default.func,
  /**
   * @ignore
   */
  onFocus: import_prop_types22.default.func,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: import_prop_types22.default.bool,
  /**
   * If `true`, the `input` element is required.
   */
  required: import_prop_types22.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types22.default.object,
  /**
   * @ignore
   */
  tabIndex: import_prop_types22.default.oneOfType([import_prop_types22.default.number, import_prop_types22.default.string]),
  /**
   * The input component prop `type`.
   */
  type: import_prop_types22.default.string.isRequired,
  /**
   * The value of the component.
   */
  value: import_prop_types22.default.any
} : void 0;
var SwitchBase_default = SwitchBase;

// node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js
var React28 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime34 = __toESM(require_jsx_runtime());
var CheckBoxOutlineBlank_default = createSvgIcon((0, import_jsx_runtime34.jsx)("path", {
  d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
}), "CheckBoxOutlineBlank");

// node_modules/@mui/material/internal/svg-icons/CheckBox.js
var React29 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime35 = __toESM(require_jsx_runtime());
var CheckBox_default = createSvgIcon((0, import_jsx_runtime35.jsx)("path", {
  d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
}), "CheckBox");

// node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js
var React30 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime36 = __toESM(require_jsx_runtime());
var IndeterminateCheckBox_default = createSvgIcon((0, import_jsx_runtime36.jsx)("path", {
  d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"
}), "IndeterminateCheckBox");

// node_modules/@mui/material/Checkbox/Checkbox.js
init_capitalize();
init_useThemeProps();
init_styled();

// node_modules/@mui/material/Checkbox/checkboxClasses.js
init_esm();
init_generateUtilityClass();
function getCheckboxUtilityClass(slot) {
  return generateUtilityClass("MuiCheckbox", slot);
}
var checkboxClasses = generateUtilityClasses("MuiCheckbox", ["root", "checked", "disabled", "indeterminate", "colorPrimary", "colorSecondary"]);
var checkboxClasses_default = checkboxClasses;

// node_modules/@mui/material/Checkbox/Checkbox.js
var import_jsx_runtime37 = __toESM(require_jsx_runtime());
var _excluded20 = ["checkedIcon", "color", "icon", "indeterminate", "indeterminateIcon", "inputProps", "size", "className"];
var useUtilityClasses20 = (ownerState) => {
  const {
    classes: classes2,
    indeterminate,
    color: color2
  } = ownerState;
  const slots = {
    root: ["root", indeterminate && "indeterminate", `color${capitalize_default(color2)}`]
  };
  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes2);
  return _extends({}, classes2, composedClasses);
};
var CheckboxRoot = styled_default(SwitchBase_default, {
  shouldForwardProp: (prop) => rootShouldForwardProp(prop) || prop === "classes",
  name: "MuiCheckbox",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, ownerState.indeterminate && styles20.indeterminate, ownerState.color !== "default" && styles20[`color${capitalize_default(ownerState.color)}`]];
  }
})(({
  theme,
  ownerState
}) => _extends({
  color: (theme.vars || theme).palette.text.secondary
}, !ownerState.disableRipple && {
  "&:hover": {
    backgroundColor: theme.vars ? `rgba(${ownerState.color === "default" ? theme.vars.palette.action.activeChannel : theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === "default" ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  }
}, ownerState.color !== "default" && {
  [`&.${checkboxClasses_default.checked}, &.${checkboxClasses_default.indeterminate}`]: {
    color: (theme.vars || theme).palette[ownerState.color].main
  },
  [`&.${checkboxClasses_default.disabled}`]: {
    color: (theme.vars || theme).palette.action.disabled
  }
}));
var defaultCheckedIcon = (0, import_jsx_runtime37.jsx)(CheckBox_default, {});
var defaultIcon = (0, import_jsx_runtime37.jsx)(CheckBoxOutlineBlank_default, {});
var defaultIndeterminateIcon = (0, import_jsx_runtime37.jsx)(IndeterminateCheckBox_default, {});
var Checkbox = React31.forwardRef(function Checkbox2(inProps, ref) {
  var _icon$props$fontSize, _indeterminateIcon$pr;
  const props = useThemeProps2({
    props: inProps,
    name: "MuiCheckbox"
  });
  const {
    checkedIcon = defaultCheckedIcon,
    color: color2 = "primary",
    icon: iconProp = defaultIcon,
    indeterminate = false,
    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,
    inputProps,
    size = "medium",
    className
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded20);
  const icon = indeterminate ? indeterminateIconProp : iconProp;
  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;
  const ownerState = _extends({}, props, {
    color: color2,
    indeterminate,
    size
  });
  const classes2 = useUtilityClasses20(ownerState);
  return (0, import_jsx_runtime37.jsx)(CheckboxRoot, _extends({
    type: "checkbox",
    inputProps: _extends({
      "data-indeterminate": indeterminate
    }, inputProps),
    icon: React31.cloneElement(icon, {
      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size
    }),
    checkedIcon: React31.cloneElement(indeterminateIcon, {
      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size
    }),
    ownerState,
    ref,
    className: clsx_m_default(classes2.root, className)
  }, other, {
    classes: classes2
  }));
});
true ? Checkbox.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the component is checked.
   */
  checked: import_prop_types23.default.bool,
  /**
   * The icon to display when the component is checked.
   * @default <CheckBoxIcon />
   */
  checkedIcon: import_prop_types23.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types23.default.object,
  /**
   * @ignore
   */
  className: import_prop_types23.default.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'primary'
   */
  color: import_prop_types23.default.oneOfType([import_prop_types23.default.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), import_prop_types23.default.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: import_prop_types23.default.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: import_prop_types23.default.bool,
  /**
   * If `true`, the ripple effect is disabled.
   */
  disableRipple: import_prop_types23.default.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <CheckBoxOutlineBlankIcon />
   */
  icon: import_prop_types23.default.node,
  /**
   * The id of the `input` element.
   */
  id: import_prop_types23.default.string,
  /**
   * If `true`, the component appears indeterminate.
   * This does not set the native input element to indeterminate due
   * to inconsistent behavior across browsers.
   * However, we set a `data-indeterminate` attribute on the `input`.
   * @default false
   */
  indeterminate: import_prop_types23.default.bool,
  /**
   * The icon to display when the component is indeterminate.
   * @default <IndeterminateCheckBoxIcon />
   */
  indeterminateIcon: import_prop_types23.default.node,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: import_prop_types23.default.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: refType_default,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: import_prop_types23.default.func,
  /**
   * If `true`, the `input` element is required.
   */
  required: import_prop_types23.default.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense checkbox styling.
   * @default 'medium'
   */
  size: import_prop_types23.default.oneOfType([import_prop_types23.default.oneOf(["medium", "small"]), import_prop_types23.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types23.default.oneOfType([import_prop_types23.default.arrayOf(import_prop_types23.default.oneOfType([import_prop_types23.default.func, import_prop_types23.default.object, import_prop_types23.default.bool])), import_prop_types23.default.func, import_prop_types23.default.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: import_prop_types23.default.any
} : void 0;

// node_modules/@mui/material/CircularProgress/CircularProgress.js
init_objectWithoutPropertiesLoose();
init_extends();
var React32 = __toESM(require_react());
var import_prop_types24 = __toESM(require_prop_types());
init_clsx_m();
init_esm();
init_base();
init_esm2();
init_capitalize();
init_useThemeProps();
init_styled();

// node_modules/@mui/material/CircularProgress/circularProgressClasses.js
init_esm();
init_generateUtilityClass();
function getCircularProgressUtilityClass(slot) {
  return generateUtilityClass("MuiCircularProgress", slot);
}
var circularProgressClasses = generateUtilityClasses("MuiCircularProgress", ["root", "determinate", "indeterminate", "colorPrimary", "colorSecondary", "svg", "circle", "circleDeterminate", "circleIndeterminate", "circleDisableShrink"]);

// node_modules/@mui/material/CircularProgress/CircularProgress.js
var import_jsx_runtime38 = __toESM(require_jsx_runtime());
var _excluded21 = ["className", "color", "disableShrink", "size", "style", "thickness", "value", "variant"];
var _ = (t) => t;
var _t;
var _t2;
var _t3;
var _t4;
var SIZE = 44;
var circularRotateKeyframe = keyframes(_t || (_t = _`
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
`));
var circularDashKeyframe = keyframes(_t2 || (_t2 = _`
  0% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -15px;
  }

  100% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -125px;
  }
`));
var useUtilityClasses21 = (ownerState) => {
  const {
    classes: classes2,
    variant,
    color: color2,
    disableShrink
  } = ownerState;
  const slots = {
    root: ["root", variant, `color${capitalize_default(color2)}`],
    svg: ["svg"],
    circle: ["circle", `circle${capitalize_default(variant)}`, disableShrink && "circleDisableShrink"]
  };
  return composeClasses(slots, getCircularProgressUtilityClass, classes2);
};
var CircularProgressRoot = styled_default("span", {
  name: "MuiCircularProgress",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, styles20[ownerState.variant], styles20[`color${capitalize_default(ownerState.color)}`]];
  }
})(({
  ownerState,
  theme
}) => _extends({
  display: "inline-block"
}, ownerState.variant === "determinate" && {
  transition: theme.transitions.create("transform")
}, ownerState.color !== "inherit" && {
  color: (theme.vars || theme).palette[ownerState.color].main
}), ({
  ownerState
}) => ownerState.variant === "indeterminate" && css(_t3 || (_t3 = _`
      animation: ${0} 1.4s linear infinite;
    `), circularRotateKeyframe));
var CircularProgressSVG = styled_default("svg", {
  name: "MuiCircularProgress",
  slot: "Svg",
  overridesResolver: (props, styles20) => styles20.svg
})({
  display: "block"
  // Keeps the progress centered
});
var CircularProgressCircle = styled_default("circle", {
  name: "MuiCircularProgress",
  slot: "Circle",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.circle, styles20[`circle${capitalize_default(ownerState.variant)}`], ownerState.disableShrink && styles20.circleDisableShrink];
  }
})(({
  ownerState,
  theme
}) => _extends({
  stroke: "currentColor"
}, ownerState.variant === "determinate" && {
  transition: theme.transitions.create("stroke-dashoffset")
}, ownerState.variant === "indeterminate" && {
  // Some default value that looks fine waiting for the animation to kicks in.
  strokeDasharray: "80px, 200px",
  strokeDashoffset: 0
  // Add the unit to fix a Edge 16 and below bug.
}), ({
  ownerState
}) => ownerState.variant === "indeterminate" && !ownerState.disableShrink && css(_t4 || (_t4 = _`
      animation: ${0} 1.4s ease-in-out infinite;
    `), circularDashKeyframe));
var CircularProgress = React32.forwardRef(function CircularProgress2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiCircularProgress"
  });
  const {
    className,
    color: color2 = "primary",
    disableShrink = false,
    size = 40,
    style: style2,
    thickness = 3.6,
    value = 0,
    variant = "indeterminate"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded21);
  const ownerState = _extends({}, props, {
    color: color2,
    disableShrink,
    size,
    thickness,
    value,
    variant
  });
  const classes2 = useUtilityClasses21(ownerState);
  const circleStyle = {};
  const rootStyle = {};
  const rootProps = {};
  if (variant === "determinate") {
    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);
    circleStyle.strokeDasharray = circumference.toFixed(3);
    rootProps["aria-valuenow"] = Math.round(value);
    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;
    rootStyle.transform = "rotate(-90deg)";
  }
  return (0, import_jsx_runtime38.jsx)(CircularProgressRoot, _extends({
    className: clsx_m_default(classes2.root, className),
    style: _extends({
      width: size,
      height: size
    }, rootStyle, style2),
    ownerState,
    ref,
    role: "progressbar"
  }, rootProps, other, {
    children: (0, import_jsx_runtime38.jsx)(CircularProgressSVG, {
      className: classes2.svg,
      ownerState,
      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,
      children: (0, import_jsx_runtime38.jsx)(CircularProgressCircle, {
        className: classes2.circle,
        style: circleStyle,
        ownerState,
        cx: SIZE,
        cy: SIZE,
        r: (SIZE - thickness) / 2,
        fill: "none",
        strokeWidth: thickness
      })
    })
  }));
});
true ? CircularProgress.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types24.default.object,
  /**
   * @ignore
   */
  className: import_prop_types24.default.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'primary'
   */
  color: import_prop_types24.default.oneOfType([import_prop_types24.default.oneOf(["inherit", "primary", "secondary", "error", "info", "success", "warning"]), import_prop_types24.default.string]),
  /**
   * If `true`, the shrink animation is disabled.
   * This only works if variant is `indeterminate`.
   * @default false
   */
  disableShrink: chainPropTypes(import_prop_types24.default.bool, (props) => {
    if (props.disableShrink && props.variant && props.variant !== "indeterminate") {
      return new Error("MUI: You have provided the `disableShrink` prop with a variant other than `indeterminate`. This will have no effect.");
    }
    return null;
  }),
  /**
   * The size of the component.
   * If using a number, the pixel unit is assumed.
   * If using a string, you need to provide the CSS unit, e.g '3rem'.
   * @default 40
   */
  size: import_prop_types24.default.oneOfType([import_prop_types24.default.number, import_prop_types24.default.string]),
  /**
   * @ignore
   */
  style: import_prop_types24.default.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types24.default.oneOfType([import_prop_types24.default.arrayOf(import_prop_types24.default.oneOfType([import_prop_types24.default.func, import_prop_types24.default.object, import_prop_types24.default.bool])), import_prop_types24.default.func, import_prop_types24.default.object]),
  /**
   * The thickness of the circle.
   * @default 3.6
   */
  thickness: import_prop_types24.default.number,
  /**
   * The value of the progress indicator for the determinate variant.
   * Value between 0 and 100.
   * @default 0
   */
  value: import_prop_types24.default.number,
  /**
   * The variant to use.
   * Use indeterminate when there is no progress value.
   * @default 'indeterminate'
   */
  variant: import_prop_types24.default.oneOf(["determinate", "indeterminate"])
} : void 0;

// node_modules/@mui/material/ClickAwayListener/index.js
init_ClickAwayListener();
init_ClickAwayListener();

// node_modules/@mui/material/Container/Container.js
var import_prop_types25 = __toESM(require_prop_types());
init_esm2();
init_capitalize();
init_styled();
init_useThemeProps();
var Container = createContainer({
  createStyledComponent: styled_default("div", {
    name: "MuiContainer",
    slot: "Root",
    overridesResolver: (props, styles20) => {
      const {
        ownerState
      } = props;
      return [styles20.root, styles20[`maxWidth${capitalize_default(String(ownerState.maxWidth))}`], ownerState.fixed && styles20.fixed, ownerState.disableGutters && styles20.disableGutters];
    }
  }),
  useThemeProps: (inProps) => useThemeProps2({
    props: inProps,
    name: "MuiContainer"
  })
});
true ? Container.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  children: import_prop_types25.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types25.default.object,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types25.default.elementType,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: import_prop_types25.default.bool,
  /**
   * Set the max-width to match the min-width of the current breakpoint.
   * This is useful if you'd prefer to design for a fixed set of sizes
   * instead of trying to accommodate a fully fluid viewport.
   * It's fluid by default.
   * @default false
   */
  fixed: import_prop_types25.default.bool,
  /**
   * Determine the max-width of the container.
   * The container width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'lg'
   */
  maxWidth: import_prop_types25.default.oneOfType([import_prop_types25.default.oneOf(["xs", "sm", "md", "lg", "xl", false]), import_prop_types25.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types25.default.oneOfType([import_prop_types25.default.arrayOf(import_prop_types25.default.oneOfType([import_prop_types25.default.func, import_prop_types25.default.object, import_prop_types25.default.bool])), import_prop_types25.default.func, import_prop_types25.default.object])
} : void 0;

// node_modules/@mui/material/Container/containerClasses.js
init_esm();
init_generateUtilityClass();
var containerClasses = generateUtilityClasses("MuiContainer", ["root", "disableGutters", "fixed", "maxWidthXs", "maxWidthSm", "maxWidthMd", "maxWidthLg", "maxWidthXl"]);

// node_modules/@mui/material/CssBaseline/CssBaseline.js
init_extends();
var React33 = __toESM(require_react());
var import_prop_types26 = __toESM(require_prop_types());
init_useThemeProps();
var import_jsx_runtime39 = __toESM(require_jsx_runtime());
var import_jsx_runtime40 = __toESM(require_jsx_runtime());
var html = (theme, enableColorScheme) => _extends({
  WebkitFontSmoothing: "antialiased",
  // Antialiasing.
  MozOsxFontSmoothing: "grayscale",
  // Antialiasing.
  // Change from `box-sizing: content-box` so that `width`
  // is not affected by `padding` or `border`.
  boxSizing: "border-box",
  // Fix font resize problem in iOS
  WebkitTextSizeAdjust: "100%"
}, enableColorScheme && !theme.vars && {
  colorScheme: theme.palette.mode
});
var body = (theme) => _extends({
  color: (theme.vars || theme).palette.text.primary
}, theme.typography.body1, {
  backgroundColor: (theme.vars || theme).palette.background.default,
  "@media print": {
    // Save printer ink.
    backgroundColor: (theme.vars || theme).palette.common.white
  }
});
var styles2 = (theme, enableColorScheme = false) => {
  var _theme$components, _theme$components$Mui;
  const colorSchemeStyles = {};
  if (enableColorScheme && theme.colorSchemes) {
    Object.entries(theme.colorSchemes).forEach(([key, scheme2]) => {
      var _scheme$palette;
      colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\s*&/, "")] = {
        colorScheme: (_scheme$palette = scheme2.palette) == null ? void 0 : _scheme$palette.mode
      };
    });
  }
  let defaultStyles = _extends({
    html: html(theme, enableColorScheme),
    "*, *::before, *::after": {
      boxSizing: "inherit"
    },
    "strong, b": {
      fontWeight: theme.typography.fontWeightBold
    },
    body: _extends({
      margin: 0
    }, body(theme), {
      // Add support for document.body.requestFullScreen().
      // Other elements, if background transparent, are not supported.
      "&::backdrop": {
        backgroundColor: (theme.vars || theme).palette.background.default
      }
    })
  }, colorSchemeStyles);
  const themeOverrides = (_theme$components = theme.components) == null ? void 0 : (_theme$components$Mui = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components$Mui.styleOverrides;
  if (themeOverrides) {
    defaultStyles = [defaultStyles, themeOverrides];
  }
  return defaultStyles;
};
function CssBaseline(inProps) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiCssBaseline"
  });
  const {
    children,
    enableColorScheme = false
  } = props;
  return (0, import_jsx_runtime40.jsxs)(React33.Fragment, {
    children: [(0, import_jsx_runtime39.jsx)(GlobalStyles_default, {
      styles: (theme) => styles2(theme, enableColorScheme)
    }), children]
  });
}
true ? CssBaseline.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * You can wrap a node.
   */
  children: import_prop_types26.default.node,
  /**
   * Enable `color-scheme` CSS property to use `theme.palette.mode`.
   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme
   * For browser support, check out https://caniuse.com/?search=color-scheme
   * @default false
   */
  enableColorScheme: import_prop_types26.default.bool
} : void 0;

// node_modules/@mui/material/Dialog/Dialog.js
init_objectWithoutPropertiesLoose();
init_extends();
var React34 = __toESM(require_react());
var import_prop_types27 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_esm();
init_capitalize();
init_useThemeProps();
init_styled();

// node_modules/@mui/material/Dialog/dialogClasses.js
init_esm();
init_generateUtilityClass();
function getDialogUtilityClass(slot) {
  return generateUtilityClass("MuiDialog", slot);
}
var dialogClasses = generateUtilityClasses("MuiDialog", ["root", "scrollPaper", "scrollBody", "container", "paper", "paperScrollPaper", "paperScrollBody", "paperWidthFalse", "paperWidthXs", "paperWidthSm", "paperWidthMd", "paperWidthLg", "paperWidthXl", "paperFullWidth", "paperFullScreen"]);
var dialogClasses_default = dialogClasses;

// node_modules/@mui/material/Dialog/DialogContext.js
var import_react3 = __toESM(require_react());
var DialogContext = (0, import_react3.createContext)({});
if (true) {
  DialogContext.displayName = "DialogContext";
}
var DialogContext_default = DialogContext;

// node_modules/@mui/material/Dialog/Dialog.js
var import_jsx_runtime41 = __toESM(require_jsx_runtime());
var _excluded22 = ["aria-describedby", "aria-labelledby", "BackdropComponent", "BackdropProps", "children", "className", "disableEscapeKeyDown", "fullScreen", "fullWidth", "maxWidth", "onBackdropClick", "onClose", "open", "PaperComponent", "PaperProps", "scroll", "TransitionComponent", "transitionDuration", "TransitionProps"];
var DialogBackdrop = styled_default(Backdrop_default, {
  name: "MuiDialog",
  slot: "Backdrop",
  overrides: (props, styles20) => styles20.backdrop
})({
  // Improve scrollable dialog support.
  zIndex: -1
});
var useUtilityClasses22 = (ownerState) => {
  const {
    classes: classes2,
    scroll,
    maxWidth,
    fullWidth,
    fullScreen
  } = ownerState;
  const slots = {
    root: ["root"],
    container: ["container", `scroll${capitalize_default(scroll)}`],
    paper: ["paper", `paperScroll${capitalize_default(scroll)}`, `paperWidth${capitalize_default(String(maxWidth))}`, fullWidth && "paperFullWidth", fullScreen && "paperFullScreen"]
  };
  return composeClasses(slots, getDialogUtilityClass, classes2);
};
var DialogRoot = styled_default(Modal_default, {
  name: "MuiDialog",
  slot: "Root",
  overridesResolver: (props, styles20) => styles20.root
})({
  "@media print": {
    // Use !important to override the Modal inline-style.
    position: "absolute !important"
  }
});
var DialogContainer = styled_default("div", {
  name: "MuiDialog",
  slot: "Container",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.container, styles20[`scroll${capitalize_default(ownerState.scroll)}`]];
  }
})(({
  ownerState
}) => _extends({
  height: "100%",
  "@media print": {
    height: "auto"
  },
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}, ownerState.scroll === "paper" && {
  display: "flex",
  justifyContent: "center",
  alignItems: "center"
}, ownerState.scroll === "body" && {
  overflowY: "auto",
  overflowX: "hidden",
  textAlign: "center",
  "&:after": {
    content: '""',
    display: "inline-block",
    verticalAlign: "middle",
    height: "100%",
    width: "0"
  }
}));
var DialogPaper = styled_default(Paper_default, {
  name: "MuiDialog",
  slot: "Paper",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.paper, styles20[`scrollPaper${capitalize_default(ownerState.scroll)}`], styles20[`paperWidth${capitalize_default(String(ownerState.maxWidth))}`], ownerState.fullWidth && styles20.paperFullWidth, ownerState.fullScreen && styles20.paperFullScreen];
  }
})(({
  theme,
  ownerState
}) => _extends({
  margin: 32,
  position: "relative",
  overflowY: "auto",
  // Fix IE11 issue, to remove at some point.
  "@media print": {
    overflowY: "visible",
    boxShadow: "none"
  }
}, ownerState.scroll === "paper" && {
  display: "flex",
  flexDirection: "column",
  maxHeight: "calc(100% - 64px)"
}, ownerState.scroll === "body" && {
  display: "inline-block",
  verticalAlign: "middle",
  textAlign: "left"
  // 'initial' doesn't work on IE11
}, !ownerState.maxWidth && {
  maxWidth: "calc(100% - 64px)"
}, ownerState.maxWidth === "xs" && {
  maxWidth: theme.breakpoints.unit === "px" ? Math.max(theme.breakpoints.values.xs, 444) : `${theme.breakpoints.values.xs}${theme.breakpoints.unit}`,
  [`&.${dialogClasses_default.paperScrollBody}`]: {
    [theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2)]: {
      maxWidth: "calc(100% - 64px)"
    }
  }
}, ownerState.maxWidth && ownerState.maxWidth !== "xs" && {
  maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`,
  [`&.${dialogClasses_default.paperScrollBody}`]: {
    [theme.breakpoints.down(theme.breakpoints.values[ownerState.maxWidth] + 32 * 2)]: {
      maxWidth: "calc(100% - 64px)"
    }
  }
}, ownerState.fullWidth && {
  width: "calc(100% - 64px)"
}, ownerState.fullScreen && {
  margin: 0,
  width: "100%",
  maxWidth: "100%",
  height: "100%",
  maxHeight: "none",
  borderRadius: 0,
  [`&.${dialogClasses_default.paperScrollBody}`]: {
    margin: 0,
    maxWidth: "100%"
  }
}));
var Dialog = React34.forwardRef(function Dialog2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiDialog"
  });
  const theme = useTheme();
  const defaultTransitionDuration = {
    enter: theme.transitions.duration.enteringScreen,
    exit: theme.transitions.duration.leavingScreen
  };
  const {
    "aria-describedby": ariaDescribedby,
    "aria-labelledby": ariaLabelledbyProp,
    BackdropComponent,
    BackdropProps,
    children,
    className,
    disableEscapeKeyDown = false,
    fullScreen = false,
    fullWidth = false,
    maxWidth = "sm",
    onBackdropClick,
    onClose,
    open,
    PaperComponent = Paper_default,
    PaperProps = {},
    scroll = "paper",
    TransitionComponent = Fade_default,
    transitionDuration = defaultTransitionDuration,
    TransitionProps
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded22);
  const ownerState = _extends({}, props, {
    disableEscapeKeyDown,
    fullScreen,
    fullWidth,
    maxWidth,
    scroll
  });
  const classes2 = useUtilityClasses22(ownerState);
  const backdropClick = React34.useRef();
  const handleMouseDown = (event) => {
    backdropClick.current = event.target === event.currentTarget;
  };
  const handleBackdropClick = (event) => {
    if (!backdropClick.current) {
      return;
    }
    backdropClick.current = null;
    if (onBackdropClick) {
      onBackdropClick(event);
    }
    if (onClose) {
      onClose(event, "backdropClick");
    }
  };
  const ariaLabelledby = useId(ariaLabelledbyProp);
  const dialogContextValue = React34.useMemo(() => {
    return {
      titleId: ariaLabelledby
    };
  }, [ariaLabelledby]);
  return (0, import_jsx_runtime41.jsx)(DialogRoot, _extends({
    className: clsx_m_default(classes2.root, className),
    closeAfterTransition: true,
    components: {
      Backdrop: DialogBackdrop
    },
    componentsProps: {
      backdrop: _extends({
        transitionDuration,
        as: BackdropComponent
      }, BackdropProps)
    },
    disableEscapeKeyDown,
    onClose,
    open,
    ref,
    onClick: handleBackdropClick,
    ownerState
  }, other, {
    children: (0, import_jsx_runtime41.jsx)(TransitionComponent, _extends({
      appear: true,
      in: open,
      timeout: transitionDuration,
      role: "presentation"
    }, TransitionProps, {
      children: (0, import_jsx_runtime41.jsx)(DialogContainer, {
        className: clsx_m_default(classes2.container),
        onMouseDown: handleMouseDown,
        ownerState,
        children: (0, import_jsx_runtime41.jsx)(DialogPaper, _extends({
          as: PaperComponent,
          elevation: 24,
          role: "dialog",
          "aria-describedby": ariaDescribedby,
          "aria-labelledby": ariaLabelledby
        }, PaperProps, {
          className: clsx_m_default(classes2.paper, PaperProps.className),
          ownerState,
          children: (0, import_jsx_runtime41.jsx)(DialogContext_default.Provider, {
            value: dialogContextValue,
            children
          })
        }))
      })
    }))
  }));
});
true ? Dialog.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The id(s) of the element(s) that describe the dialog.
   */
  "aria-describedby": import_prop_types27.default.string,
  /**
   * The id(s) of the element(s) that label the dialog.
   */
  "aria-labelledby": import_prop_types27.default.string,
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: import_prop_types27.default.elementType,
  /**
   * @ignore
   */
  BackdropProps: import_prop_types27.default.object,
  /**
   * Dialog children, usually the included sub-components.
   */
  children: import_prop_types27.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types27.default.object,
  /**
   * @ignore
   */
  className: import_prop_types27.default.string,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: import_prop_types27.default.bool,
  /**
   * If `true`, the dialog is full-screen.
   * @default false
   */
  fullScreen: import_prop_types27.default.bool,
  /**
   * If `true`, the dialog stretches to `maxWidth`.
   *
   * Notice that the dialog width grow is limited by the default margin.
   * @default false
   */
  fullWidth: import_prop_types27.default.bool,
  /**
   * Determine the max-width of the dialog.
   * The dialog width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'sm'
   */
  maxWidth: import_prop_types27.default.oneOfType([import_prop_types27.default.oneOf(["xs", "sm", "md", "lg", "xl", false]), import_prop_types27.default.string]),
  /**
   * Callback fired when the backdrop is clicked.
   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.
   */
  onBackdropClick: import_prop_types27.default.func,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: import_prop_types27.default.func,
  /**
   * If `true`, the component is shown.
   */
  open: import_prop_types27.default.bool.isRequired,
  /**
   * The component used to render the body of the dialog.
   * @default Paper
   */
  PaperComponent: import_prop_types27.default.elementType,
  /**
   * Props applied to the [`Paper`](/material-ui/api/paper/) element.
   * @default {}
   */
  PaperProps: import_prop_types27.default.object,
  /**
   * Determine the container for scrolling the dialog.
   * @default 'paper'
   */
  scroll: import_prop_types27.default.oneOf(["body", "paper"]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types27.default.oneOfType([import_prop_types27.default.arrayOf(import_prop_types27.default.oneOfType([import_prop_types27.default.func, import_prop_types27.default.object, import_prop_types27.default.bool])), import_prop_types27.default.func, import_prop_types27.default.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   */
  TransitionComponent: import_prop_types27.default.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: import_prop_types27.default.oneOfType([import_prop_types27.default.number, import_prop_types27.default.shape({
    appear: import_prop_types27.default.number,
    enter: import_prop_types27.default.number,
    exit: import_prop_types27.default.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.
   */
  TransitionProps: import_prop_types27.default.object
} : void 0;

// node_modules/@mui/material/DialogActions/DialogActions.js
init_objectWithoutPropertiesLoose();
init_extends();
var React35 = __toESM(require_react());
var import_prop_types28 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/DialogActions/dialogActionsClasses.js
init_esm();
init_generateUtilityClass();
function getDialogActionsUtilityClass(slot) {
  return generateUtilityClass("MuiDialogActions", slot);
}
var dialogActionsClasses = generateUtilityClasses("MuiDialogActions", ["root", "spacing"]);

// node_modules/@mui/material/DialogActions/DialogActions.js
var import_jsx_runtime42 = __toESM(require_jsx_runtime());
var _excluded23 = ["className", "disableSpacing"];
var useUtilityClasses23 = (ownerState) => {
  const {
    classes: classes2,
    disableSpacing
  } = ownerState;
  const slots = {
    root: ["root", !disableSpacing && "spacing"]
  };
  return composeClasses(slots, getDialogActionsUtilityClass, classes2);
};
var DialogActionsRoot = styled_default("div", {
  name: "MuiDialogActions",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, !ownerState.disableSpacing && styles20.spacing];
  }
})(({
  ownerState
}) => _extends({
  display: "flex",
  alignItems: "center",
  padding: 8,
  justifyContent: "flex-end",
  flex: "0 0 auto"
}, !ownerState.disableSpacing && {
  "& > :not(:first-of-type)": {
    marginLeft: 8
  }
}));
var DialogActions = React35.forwardRef(function DialogActions2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiDialogActions"
  });
  const {
    className,
    disableSpacing = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded23);
  const ownerState = _extends({}, props, {
    disableSpacing
  });
  const classes2 = useUtilityClasses23(ownerState);
  return (0, import_jsx_runtime42.jsx)(DialogActionsRoot, _extends({
    className: clsx_m_default(classes2.root, className),
    ownerState,
    ref
  }, other));
});
true ? DialogActions.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types28.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types28.default.object,
  /**
   * @ignore
   */
  className: import_prop_types28.default.string,
  /**
   * If `true`, the actions do not have additional margin.
   * @default false
   */
  disableSpacing: import_prop_types28.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types28.default.oneOfType([import_prop_types28.default.arrayOf(import_prop_types28.default.oneOfType([import_prop_types28.default.func, import_prop_types28.default.object, import_prop_types28.default.bool])), import_prop_types28.default.func, import_prop_types28.default.object])
} : void 0;

// node_modules/@mui/material/DialogContent/DialogContent.js
init_objectWithoutPropertiesLoose();
init_extends();
var React36 = __toESM(require_react());
var import_prop_types29 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/DialogContent/dialogContentClasses.js
init_esm();
init_generateUtilityClass();
function getDialogContentUtilityClass(slot) {
  return generateUtilityClass("MuiDialogContent", slot);
}
var dialogContentClasses = generateUtilityClasses("MuiDialogContent", ["root", "dividers"]);

// node_modules/@mui/material/DialogTitle/dialogTitleClasses.js
init_esm();
init_generateUtilityClass();
function getDialogTitleUtilityClass(slot) {
  return generateUtilityClass("MuiDialogTitle", slot);
}
var dialogTitleClasses = generateUtilityClasses("MuiDialogTitle", ["root"]);
var dialogTitleClasses_default = dialogTitleClasses;

// node_modules/@mui/material/DialogContent/DialogContent.js
var import_jsx_runtime43 = __toESM(require_jsx_runtime());
var _excluded24 = ["className", "dividers"];
var useUtilityClasses24 = (ownerState) => {
  const {
    classes: classes2,
    dividers
  } = ownerState;
  const slots = {
    root: ["root", dividers && "dividers"]
  };
  return composeClasses(slots, getDialogContentUtilityClass, classes2);
};
var DialogContentRoot = styled_default("div", {
  name: "MuiDialogContent",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, ownerState.dividers && styles20.dividers];
  }
})(({
  theme,
  ownerState
}) => _extends({
  flex: "1 1 auto",
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  overflowY: "auto",
  padding: "20px 24px"
}, ownerState.dividers ? {
  padding: "16px 24px",
  borderTop: `1px solid ${(theme.vars || theme).palette.divider}`,
  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`
} : {
  [`.${dialogTitleClasses_default.root} + &`]: {
    paddingTop: 0
  }
}));
var DialogContent = React36.forwardRef(function DialogContent2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiDialogContent"
  });
  const {
    className,
    dividers = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded24);
  const ownerState = _extends({}, props, {
    dividers
  });
  const classes2 = useUtilityClasses24(ownerState);
  return (0, import_jsx_runtime43.jsx)(DialogContentRoot, _extends({
    className: clsx_m_default(classes2.root, className),
    ownerState,
    ref
  }, other));
});
true ? DialogContent.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types29.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types29.default.object,
  /**
   * @ignore
   */
  className: import_prop_types29.default.string,
  /**
   * Display the top and bottom dividers.
   * @default false
   */
  dividers: import_prop_types29.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types29.default.oneOfType([import_prop_types29.default.arrayOf(import_prop_types29.default.oneOfType([import_prop_types29.default.func, import_prop_types29.default.object, import_prop_types29.default.bool])), import_prop_types29.default.func, import_prop_types29.default.object])
} : void 0;

// node_modules/@mui/material/DialogContentText/DialogContentText.js
init_objectWithoutPropertiesLoose();
init_extends();
var React37 = __toESM(require_react());
var import_prop_types30 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js
init_esm();
init_generateUtilityClass();
function getDialogContentTextUtilityClass(slot) {
  return generateUtilityClass("MuiDialogContentText", slot);
}
var dialogContentTextClasses = generateUtilityClasses("MuiDialogContentText", ["root"]);

// node_modules/@mui/material/DialogContentText/DialogContentText.js
var import_jsx_runtime44 = __toESM(require_jsx_runtime());
var _excluded25 = ["children", "className"];
var useUtilityClasses25 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes2);
  return _extends({}, classes2, composedClasses);
};
var DialogContentTextRoot = styled_default(Typography_default, {
  shouldForwardProp: (prop) => rootShouldForwardProp(prop) || prop === "classes",
  name: "MuiDialogContentText",
  slot: "Root",
  overridesResolver: (props, styles20) => styles20.root
})({});
var DialogContentText = React37.forwardRef(function DialogContentText2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiDialogContentText"
  });
  const {
    className
  } = props, ownerState = _objectWithoutPropertiesLoose(props, _excluded25);
  const classes2 = useUtilityClasses25(ownerState);
  return (0, import_jsx_runtime44.jsx)(DialogContentTextRoot, _extends({
    component: "p",
    variant: "body1",
    color: "text.secondary",
    ref,
    ownerState,
    className: clsx_m_default(classes2.root, className)
  }, props, {
    classes: classes2
  }));
});
true ? DialogContentText.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types30.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types30.default.object,
  /**
   * @ignore
   */
  className: import_prop_types30.default.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types30.default.oneOfType([import_prop_types30.default.arrayOf(import_prop_types30.default.oneOfType([import_prop_types30.default.func, import_prop_types30.default.object, import_prop_types30.default.bool])), import_prop_types30.default.func, import_prop_types30.default.object])
} : void 0;

// node_modules/@mui/material/DialogTitle/DialogTitle.js
init_extends();
init_objectWithoutPropertiesLoose();
var React38 = __toESM(require_react());
var import_prop_types31 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_styled();
init_useThemeProps();
var import_jsx_runtime45 = __toESM(require_jsx_runtime());
var _excluded26 = ["className", "id"];
var useUtilityClasses26 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getDialogTitleUtilityClass, classes2);
};
var DialogTitleRoot = styled_default(Typography_default, {
  name: "MuiDialogTitle",
  slot: "Root",
  overridesResolver: (props, styles20) => styles20.root
})({
  padding: "16px 24px",
  flex: "0 0 auto"
});
var DialogTitle = React38.forwardRef(function DialogTitle2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiDialogTitle"
  });
  const {
    className,
    id: idProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded26);
  const ownerState = props;
  const classes2 = useUtilityClasses26(ownerState);
  const {
    titleId: id = idProp
  } = React38.useContext(DialogContext_default);
  return (0, import_jsx_runtime45.jsx)(DialogTitleRoot, _extends({
    component: "h2",
    className: clsx_m_default(classes2.root, className),
    ownerState,
    ref,
    variant: "h6",
    id
  }, other));
});
true ? DialogTitle.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types31.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types31.default.object,
  /**
   * @ignore
   */
  className: import_prop_types31.default.string,
  /**
   * @ignore
   */
  id: import_prop_types31.default.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types31.default.oneOfType([import_prop_types31.default.arrayOf(import_prop_types31.default.oneOfType([import_prop_types31.default.func, import_prop_types31.default.object, import_prop_types31.default.bool])), import_prop_types31.default.func, import_prop_types31.default.object])
} : void 0;

// node_modules/@mui/material/Divider/Divider.js
init_objectWithoutPropertiesLoose();
init_extends();
var React39 = __toESM(require_react());
var import_prop_types32 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_esm2();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/Divider/dividerClasses.js
init_esm();
init_generateUtilityClass();
function getDividerUtilityClass(slot) {
  return generateUtilityClass("MuiDivider", slot);
}
var dividerClasses = generateUtilityClasses("MuiDivider", ["root", "absolute", "fullWidth", "inset", "middle", "flexItem", "light", "vertical", "withChildren", "withChildrenVertical", "textAlignRight", "textAlignLeft", "wrapper", "wrapperVertical"]);
var dividerClasses_default = dividerClasses;

// node_modules/@mui/material/Divider/Divider.js
var import_jsx_runtime46 = __toESM(require_jsx_runtime());
var _excluded27 = ["absolute", "children", "className", "component", "flexItem", "light", "orientation", "role", "textAlign", "variant"];
var useUtilityClasses27 = (ownerState) => {
  const {
    absolute,
    children,
    classes: classes2,
    flexItem,
    light,
    orientation,
    textAlign,
    variant
  } = ownerState;
  const slots = {
    root: ["root", absolute && "absolute", variant, light && "light", orientation === "vertical" && "vertical", flexItem && "flexItem", children && "withChildren", children && orientation === "vertical" && "withChildrenVertical", textAlign === "right" && orientation !== "vertical" && "textAlignRight", textAlign === "left" && orientation !== "vertical" && "textAlignLeft"],
    wrapper: ["wrapper", orientation === "vertical" && "wrapperVertical"]
  };
  return composeClasses(slots, getDividerUtilityClass, classes2);
};
var DividerRoot = styled_default("div", {
  name: "MuiDivider",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, ownerState.absolute && styles20.absolute, styles20[ownerState.variant], ownerState.light && styles20.light, ownerState.orientation === "vertical" && styles20.vertical, ownerState.flexItem && styles20.flexItem, ownerState.children && styles20.withChildren, ownerState.children && ownerState.orientation === "vertical" && styles20.withChildrenVertical, ownerState.textAlign === "right" && ownerState.orientation !== "vertical" && styles20.textAlignRight, ownerState.textAlign === "left" && ownerState.orientation !== "vertical" && styles20.textAlignLeft];
  }
})(({
  theme,
  ownerState
}) => _extends({
  margin: 0,
  // Reset browser default style.
  flexShrink: 0,
  borderWidth: 0,
  borderStyle: "solid",
  borderColor: (theme.vars || theme).palette.divider,
  borderBottomWidth: "thin"
}, ownerState.absolute && {
  position: "absolute",
  bottom: 0,
  left: 0,
  width: "100%"
}, ownerState.light && {
  borderColor: theme.vars ? `rgba(${theme.vars.palette.dividerChannel} / 0.08)` : alpha(theme.palette.divider, 0.08)
}, ownerState.variant === "inset" && {
  marginLeft: 72
}, ownerState.variant === "middle" && ownerState.orientation === "horizontal" && {
  marginLeft: theme.spacing(2),
  marginRight: theme.spacing(2)
}, ownerState.variant === "middle" && ownerState.orientation === "vertical" && {
  marginTop: theme.spacing(1),
  marginBottom: theme.spacing(1)
}, ownerState.orientation === "vertical" && {
  height: "100%",
  borderBottomWidth: 0,
  borderRightWidth: "thin"
}, ownerState.flexItem && {
  alignSelf: "stretch",
  height: "auto"
}), ({
  theme,
  ownerState
}) => _extends({}, ownerState.children && {
  display: "flex",
  whiteSpace: "nowrap",
  textAlign: "center",
  border: 0,
  "&::before, &::after": {
    position: "relative",
    width: "100%",
    borderTop: `thin solid ${(theme.vars || theme).palette.divider}`,
    top: "50%",
    content: '""',
    transform: "translateY(50%)"
  }
}), ({
  theme,
  ownerState
}) => _extends({}, ownerState.children && ownerState.orientation === "vertical" && {
  flexDirection: "column",
  "&::before, &::after": {
    height: "100%",
    top: "0%",
    left: "50%",
    borderTop: 0,
    borderLeft: `thin solid ${(theme.vars || theme).palette.divider}`,
    transform: "translateX(0%)"
  }
}), ({
  ownerState
}) => _extends({}, ownerState.textAlign === "right" && ownerState.orientation !== "vertical" && {
  "&::before": {
    width: "90%"
  },
  "&::after": {
    width: "10%"
  }
}, ownerState.textAlign === "left" && ownerState.orientation !== "vertical" && {
  "&::before": {
    width: "10%"
  },
  "&::after": {
    width: "90%"
  }
}));
var DividerWrapper = styled_default("span", {
  name: "MuiDivider",
  slot: "Wrapper",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.wrapper, ownerState.orientation === "vertical" && styles20.wrapperVertical];
  }
})(({
  theme,
  ownerState
}) => _extends({
  display: "inline-block",
  paddingLeft: `calc(${theme.spacing(1)} * 1.2)`,
  paddingRight: `calc(${theme.spacing(1)} * 1.2)`
}, ownerState.orientation === "vertical" && {
  paddingTop: `calc(${theme.spacing(1)} * 1.2)`,
  paddingBottom: `calc(${theme.spacing(1)} * 1.2)`
}));
var Divider = React39.forwardRef(function Divider2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiDivider"
  });
  const {
    absolute = false,
    children,
    className,
    component = children ? "div" : "hr",
    flexItem = false,
    light = false,
    orientation = "horizontal",
    role = component !== "hr" ? "separator" : void 0,
    textAlign = "center",
    variant = "fullWidth"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded27);
  const ownerState = _extends({}, props, {
    absolute,
    component,
    flexItem,
    light,
    orientation,
    role,
    textAlign,
    variant
  });
  const classes2 = useUtilityClasses27(ownerState);
  return (0, import_jsx_runtime46.jsx)(DividerRoot, _extends({
    as: component,
    className: clsx_m_default(classes2.root, className),
    role,
    ref,
    ownerState
  }, other, {
    children: children ? (0, import_jsx_runtime46.jsx)(DividerWrapper, {
      className: classes2.wrapper,
      ownerState,
      children
    }) : null
  }));
});
true ? Divider.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Absolutely position the element.
   * @default false
   */
  absolute: import_prop_types32.default.bool,
  /**
   * The content of the component.
   */
  children: import_prop_types32.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types32.default.object,
  /**
   * @ignore
   */
  className: import_prop_types32.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types32.default.elementType,
  /**
   * If `true`, a vertical divider will have the correct height when used in flex container.
   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)
   * @default false
   */
  flexItem: import_prop_types32.default.bool,
  /**
   * If `true`, the divider will have a lighter color.
   * @default false
   */
  light: import_prop_types32.default.bool,
  /**
   * The component orientation.
   * @default 'horizontal'
   */
  orientation: import_prop_types32.default.oneOf(["horizontal", "vertical"]),
  /**
   * @ignore
   */
  role: import_prop_types32.default.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types32.default.oneOfType([import_prop_types32.default.arrayOf(import_prop_types32.default.oneOfType([import_prop_types32.default.func, import_prop_types32.default.object, import_prop_types32.default.bool])), import_prop_types32.default.func, import_prop_types32.default.object]),
  /**
   * The text alignment.
   * @default 'center'
   */
  textAlign: import_prop_types32.default.oneOf(["center", "left", "right"]),
  /**
   * The variant to use.
   * @default 'fullWidth'
   */
  variant: import_prop_types32.default.oneOfType([import_prop_types32.default.oneOf(["fullWidth", "inset", "middle"]), import_prop_types32.default.string])
} : void 0;

// node_modules/@mui/material/Drawer/Drawer.js
init_objectWithoutPropertiesLoose();
init_extends();
var React41 = __toESM(require_react());
var import_prop_types34 = __toESM(require_prop_types());
init_clsx_m();
init_esm();
init_base();

// node_modules/@mui/material/Slide/Slide.js
init_extends();
init_objectWithoutPropertiesLoose();
var React40 = __toESM(require_react());
var import_prop_types33 = __toESM(require_prop_types());
init_esm();
init_debounce();
init_useForkRef();
init_utils();
var import_jsx_runtime47 = __toESM(require_jsx_runtime());
var _excluded28 = ["addEndListener", "appear", "children", "container", "direction", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"];
function getTranslateValue(direction, node, resolvedContainer) {
  const rect = node.getBoundingClientRect();
  const containerRect = resolvedContainer && resolvedContainer.getBoundingClientRect();
  const containerWindow = ownerWindow_default(node);
  let transform;
  if (node.fakeTransform) {
    transform = node.fakeTransform;
  } else {
    const computedStyle = containerWindow.getComputedStyle(node);
    transform = computedStyle.getPropertyValue("-webkit-transform") || computedStyle.getPropertyValue("transform");
  }
  let offsetX = 0;
  let offsetY = 0;
  if (transform && transform !== "none" && typeof transform === "string") {
    const transformValues = transform.split("(")[1].split(")")[0].split(",");
    offsetX = parseInt(transformValues[4], 10);
    offsetY = parseInt(transformValues[5], 10);
  }
  if (direction === "left") {
    if (containerRect) {
      return `translateX(${containerRect.right + offsetX - rect.left}px)`;
    }
    return `translateX(${containerWindow.innerWidth + offsetX - rect.left}px)`;
  }
  if (direction === "right") {
    if (containerRect) {
      return `translateX(-${rect.right - containerRect.left - offsetX}px)`;
    }
    return `translateX(-${rect.left + rect.width - offsetX}px)`;
  }
  if (direction === "up") {
    if (containerRect) {
      return `translateY(${containerRect.bottom + offsetY - rect.top}px)`;
    }
    return `translateY(${containerWindow.innerHeight + offsetY - rect.top}px)`;
  }
  if (containerRect) {
    return `translateY(-${rect.top - containerRect.top + rect.height - offsetY}px)`;
  }
  return `translateY(-${rect.top + rect.height - offsetY}px)`;
}
function resolveContainer(containerPropProp) {
  return typeof containerPropProp === "function" ? containerPropProp() : containerPropProp;
}
function setTranslateValue(direction, node, containerProp) {
  const resolvedContainer = resolveContainer(containerProp);
  const transform = getTranslateValue(direction, node, resolvedContainer);
  if (transform) {
    node.style.webkitTransform = transform;
    node.style.transform = transform;
  }
}
var Slide = React40.forwardRef(function Slide2(props, ref) {
  const theme = useTheme();
  const defaultEasing = {
    enter: theme.transitions.easing.easeOut,
    exit: theme.transitions.easing.sharp
  };
  const defaultTimeout = {
    enter: theme.transitions.duration.enteringScreen,
    exit: theme.transitions.duration.leavingScreen
  };
  const {
    addEndListener,
    appear = true,
    children,
    container: containerProp,
    direction = "down",
    easing: easingProp = defaultEasing,
    in: inProp,
    onEnter,
    onEntered,
    onEntering,
    onExit,
    onExited,
    onExiting,
    style: style2,
    timeout = defaultTimeout,
    // eslint-disable-next-line react/prop-types
    TransitionComponent = Transition_default
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded28);
  const childrenRef = React40.useRef(null);
  const handleRef = useForkRef_default(children.ref, childrenRef, ref);
  const normalizedTransitionCallback = (callback) => (isAppearing) => {
    if (callback) {
      if (isAppearing === void 0) {
        callback(childrenRef.current);
      } else {
        callback(childrenRef.current, isAppearing);
      }
    }
  };
  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {
    setTranslateValue(direction, node, containerProp);
    reflow(node);
    if (onEnter) {
      onEnter(node, isAppearing);
    }
  });
  const handleEntering = normalizedTransitionCallback((node, isAppearing) => {
    const transitionProps = getTransitionProps({
      timeout,
      style: style2,
      easing: easingProp
    }, {
      mode: "enter"
    });
    node.style.webkitTransition = theme.transitions.create("-webkit-transform", _extends({}, transitionProps));
    node.style.transition = theme.transitions.create("transform", _extends({}, transitionProps));
    node.style.webkitTransform = "none";
    node.style.transform = "none";
    if (onEntering) {
      onEntering(node, isAppearing);
    }
  });
  const handleEntered = normalizedTransitionCallback(onEntered);
  const handleExiting = normalizedTransitionCallback(onExiting);
  const handleExit = normalizedTransitionCallback((node) => {
    const transitionProps = getTransitionProps({
      timeout,
      style: style2,
      easing: easingProp
    }, {
      mode: "exit"
    });
    node.style.webkitTransition = theme.transitions.create("-webkit-transform", transitionProps);
    node.style.transition = theme.transitions.create("transform", transitionProps);
    setTranslateValue(direction, node, containerProp);
    if (onExit) {
      onExit(node);
    }
  });
  const handleExited = normalizedTransitionCallback((node) => {
    node.style.webkitTransition = "";
    node.style.transition = "";
    if (onExited) {
      onExited(node);
    }
  });
  const handleAddEndListener = (next) => {
    if (addEndListener) {
      addEndListener(childrenRef.current, next);
    }
  };
  const updatePosition = React40.useCallback(() => {
    if (childrenRef.current) {
      setTranslateValue(direction, childrenRef.current, containerProp);
    }
  }, [direction, containerProp]);
  React40.useEffect(() => {
    if (inProp || direction === "down" || direction === "right") {
      return void 0;
    }
    const handleResize = debounce_default(() => {
      if (childrenRef.current) {
        setTranslateValue(direction, childrenRef.current, containerProp);
      }
    });
    const containerWindow = ownerWindow_default(childrenRef.current);
    containerWindow.addEventListener("resize", handleResize);
    return () => {
      handleResize.clear();
      containerWindow.removeEventListener("resize", handleResize);
    };
  }, [direction, inProp, containerProp]);
  React40.useEffect(() => {
    if (!inProp) {
      updatePosition();
    }
  }, [inProp, updatePosition]);
  return (0, import_jsx_runtime47.jsx)(TransitionComponent, _extends({
    nodeRef: childrenRef,
    onEnter: handleEnter,
    onEntered: handleEntered,
    onEntering: handleEntering,
    onExit: handleExit,
    onExited: handleExited,
    onExiting: handleExiting,
    addEndListener: handleAddEndListener,
    appear,
    in: inProp,
    timeout
  }, other, {
    children: (state, childProps) => {
      return React40.cloneElement(children, _extends({
        ref: handleRef,
        style: _extends({
          visibility: state === "exited" && !inProp ? "hidden" : void 0
        }, style2, children.props.style)
      }, childProps));
    }
  }));
});
true ? Slide.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: import_prop_types33.default.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: import_prop_types33.default.bool,
  /**
   * A single child content element.
   */
  children: elementAcceptingRef_default.isRequired,
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the container the Slide is transitioning from.
   */
  container: chainPropTypes(import_prop_types33.default.oneOfType([HTMLElementType, import_prop_types33.default.func]), (props) => {
    if (props.open) {
      const resolvedContainer = resolveContainer(props.container);
      if (resolvedContainer && resolvedContainer.nodeType === 1) {
        const box = resolvedContainer.getBoundingClientRect();
        if (box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {
          return new Error(["MUI: The `container` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join("\n"));
        }
      } else if (!resolvedContainer || typeof resolvedContainer.getBoundingClientRect !== "function" || resolvedContainer.contextElement != null && resolvedContainer.contextElement.nodeType !== 1) {
        return new Error(["MUI: The `container` prop provided to the component is invalid.", "It should be an HTML element instance."].join("\n"));
      }
    }
    return null;
  }),
  /**
   * Direction the child node will enter from.
   * @default 'down'
   */
  direction: import_prop_types33.default.oneOf(["down", "left", "right", "up"]),
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   * @default {
   *   enter: theme.transitions.easing.easeOut,
   *   exit: theme.transitions.easing.sharp,
   * }
   */
  easing: import_prop_types33.default.oneOfType([import_prop_types33.default.shape({
    enter: import_prop_types33.default.string,
    exit: import_prop_types33.default.string
  }), import_prop_types33.default.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: import_prop_types33.default.bool,
  /**
   * @ignore
   */
  onEnter: import_prop_types33.default.func,
  /**
   * @ignore
   */
  onEntered: import_prop_types33.default.func,
  /**
   * @ignore
   */
  onEntering: import_prop_types33.default.func,
  /**
   * @ignore
   */
  onExit: import_prop_types33.default.func,
  /**
   * @ignore
   */
  onExited: import_prop_types33.default.func,
  /**
   * @ignore
   */
  onExiting: import_prop_types33.default.func,
  /**
   * @ignore
   */
  style: import_prop_types33.default.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: import_prop_types33.default.oneOfType([import_prop_types33.default.number, import_prop_types33.default.shape({
    appear: import_prop_types33.default.number,
    enter: import_prop_types33.default.number,
    exit: import_prop_types33.default.number
  })])
} : void 0;
var Slide_default = Slide;

// node_modules/@mui/material/Drawer/Drawer.js
init_capitalize();
init_useThemeProps();
init_styled();

// node_modules/@mui/material/Drawer/drawerClasses.js
init_esm();
init_generateUtilityClass();
function getDrawerUtilityClass(slot) {
  return generateUtilityClass("MuiDrawer", slot);
}
var drawerClasses = generateUtilityClasses("MuiDrawer", ["root", "docked", "paper", "paperAnchorLeft", "paperAnchorRight", "paperAnchorTop", "paperAnchorBottom", "paperAnchorDockedLeft", "paperAnchorDockedRight", "paperAnchorDockedTop", "paperAnchorDockedBottom", "modal"]);

// node_modules/@mui/material/Drawer/Drawer.js
var import_jsx_runtime48 = __toESM(require_jsx_runtime());
var _excluded29 = ["BackdropProps"];
var _excluded210 = ["anchor", "BackdropProps", "children", "className", "elevation", "hideBackdrop", "ModalProps", "onClose", "open", "PaperProps", "SlideProps", "TransitionComponent", "transitionDuration", "variant"];
var overridesResolver2 = (props, styles20) => {
  const {
    ownerState
  } = props;
  return [styles20.root, (ownerState.variant === "permanent" || ownerState.variant === "persistent") && styles20.docked, styles20.modal];
};
var useUtilityClasses28 = (ownerState) => {
  const {
    classes: classes2,
    anchor,
    variant
  } = ownerState;
  const slots = {
    root: ["root"],
    docked: [(variant === "permanent" || variant === "persistent") && "docked"],
    modal: ["modal"],
    paper: ["paper", `paperAnchor${capitalize_default(anchor)}`, variant !== "temporary" && `paperAnchorDocked${capitalize_default(anchor)}`]
  };
  return composeClasses(slots, getDrawerUtilityClass, classes2);
};
var DrawerRoot = styled_default(Modal_default, {
  name: "MuiDrawer",
  slot: "Root",
  overridesResolver: overridesResolver2
})(({
  theme
}) => ({
  zIndex: (theme.vars || theme).zIndex.drawer
}));
var DrawerDockedRoot = styled_default("div", {
  shouldForwardProp: rootShouldForwardProp,
  name: "MuiDrawer",
  slot: "Docked",
  skipVariantsResolver: false,
  overridesResolver: overridesResolver2
})({
  flex: "0 0 auto"
});
var DrawerPaper = styled_default(Paper_default, {
  name: "MuiDrawer",
  slot: "Paper",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.paper, styles20[`paperAnchor${capitalize_default(ownerState.anchor)}`], ownerState.variant !== "temporary" && styles20[`paperAnchorDocked${capitalize_default(ownerState.anchor)}`]];
  }
})(({
  theme,
  ownerState
}) => _extends({
  overflowY: "auto",
  display: "flex",
  flexDirection: "column",
  height: "100%",
  flex: "1 0 auto",
  zIndex: (theme.vars || theme).zIndex.drawer,
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  // temporary style
  position: "fixed",
  top: 0,
  // We disable the focus ring for mouse, touch and keyboard users.
  // At some point, it would be better to keep it for keyboard users.
  // :focus-ring CSS pseudo-class will help.
  outline: 0
}, ownerState.anchor === "left" && {
  left: 0
}, ownerState.anchor === "top" && {
  top: 0,
  left: 0,
  right: 0,
  height: "auto",
  maxHeight: "100%"
}, ownerState.anchor === "right" && {
  right: 0
}, ownerState.anchor === "bottom" && {
  top: "auto",
  left: 0,
  bottom: 0,
  right: 0,
  height: "auto",
  maxHeight: "100%"
}, ownerState.anchor === "left" && ownerState.variant !== "temporary" && {
  borderRight: `1px solid ${(theme.vars || theme).palette.divider}`
}, ownerState.anchor === "top" && ownerState.variant !== "temporary" && {
  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`
}, ownerState.anchor === "right" && ownerState.variant !== "temporary" && {
  borderLeft: `1px solid ${(theme.vars || theme).palette.divider}`
}, ownerState.anchor === "bottom" && ownerState.variant !== "temporary" && {
  borderTop: `1px solid ${(theme.vars || theme).palette.divider}`
}));
var oppositeDirection = {
  left: "right",
  right: "left",
  top: "down",
  bottom: "up"
};
function isHorizontal2(anchor) {
  return ["left", "right"].indexOf(anchor) !== -1;
}
function getAnchor(theme, anchor) {
  return theme.direction === "rtl" && isHorizontal2(anchor) ? oppositeDirection[anchor] : anchor;
}
var Drawer = React41.forwardRef(function Drawer2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiDrawer"
  });
  const theme = useTheme();
  const defaultTransitionDuration = {
    enter: theme.transitions.duration.enteringScreen,
    exit: theme.transitions.duration.leavingScreen
  };
  const {
    anchor: anchorProp = "left",
    BackdropProps,
    children,
    className,
    elevation = 16,
    hideBackdrop = false,
    ModalProps: {
      BackdropProps: BackdropPropsProp
    } = {},
    onClose,
    open = false,
    PaperProps = {},
    SlideProps,
    // eslint-disable-next-line react/prop-types
    TransitionComponent = Slide_default,
    transitionDuration = defaultTransitionDuration,
    variant = "temporary"
  } = props, ModalProps = _objectWithoutPropertiesLoose(props.ModalProps, _excluded29), other = _objectWithoutPropertiesLoose(props, _excluded210);
  const mounted = React41.useRef(false);
  React41.useEffect(() => {
    mounted.current = true;
  }, []);
  const anchorInvariant = getAnchor(theme, anchorProp);
  const anchor = anchorProp;
  const ownerState = _extends({}, props, {
    anchor,
    elevation,
    open,
    variant
  }, other);
  const classes2 = useUtilityClasses28(ownerState);
  const drawer = (0, import_jsx_runtime48.jsx)(DrawerPaper, _extends({
    elevation: variant === "temporary" ? elevation : 0,
    square: true
  }, PaperProps, {
    className: clsx_m_default(classes2.paper, PaperProps.className),
    ownerState,
    children
  }));
  if (variant === "permanent") {
    return (0, import_jsx_runtime48.jsx)(DrawerDockedRoot, _extends({
      className: clsx_m_default(classes2.root, classes2.docked, className),
      ownerState,
      ref
    }, other, {
      children: drawer
    }));
  }
  const slidingDrawer = (0, import_jsx_runtime48.jsx)(TransitionComponent, _extends({
    in: open,
    direction: oppositeDirection[anchorInvariant],
    timeout: transitionDuration,
    appear: mounted.current
  }, SlideProps, {
    children: drawer
  }));
  if (variant === "persistent") {
    return (0, import_jsx_runtime48.jsx)(DrawerDockedRoot, _extends({
      className: clsx_m_default(classes2.root, classes2.docked, className),
      ownerState,
      ref
    }, other, {
      children: slidingDrawer
    }));
  }
  return (0, import_jsx_runtime48.jsx)(DrawerRoot, _extends({
    BackdropProps: _extends({}, BackdropProps, BackdropPropsProp, {
      transitionDuration
    }),
    className: clsx_m_default(classes2.root, classes2.modal, className),
    open,
    ownerState,
    onClose,
    hideBackdrop,
    ref
  }, other, ModalProps, {
    children: slidingDrawer
  }));
});
true ? Drawer.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Side from which the drawer will appear.
   * @default 'left'
   */
  anchor: import_prop_types34.default.oneOf(["bottom", "left", "right", "top"]),
  /**
   * @ignore
   */
  BackdropProps: import_prop_types34.default.object,
  /**
   * The content of the component.
   */
  children: import_prop_types34.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types34.default.object,
  /**
   * @ignore
   */
  className: import_prop_types34.default.string,
  /**
   * The elevation of the drawer.
   * @default 16
   */
  elevation: integerPropType_default,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: import_prop_types34.default.bool,
  /**
   * Props applied to the [`Modal`](/material-ui/api/modal/) element.
   * @default {}
   */
  ModalProps: import_prop_types34.default.object,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   */
  onClose: import_prop_types34.default.func,
  /**
   * If `true`, the component is shown.
   * @default false
   */
  open: import_prop_types34.default.bool,
  /**
   * Props applied to the [`Paper`](/material-ui/api/paper/) element.
   * @default {}
   */
  PaperProps: import_prop_types34.default.object,
  /**
   * Props applied to the [`Slide`](/material-ui/api/slide/) element.
   */
  SlideProps: import_prop_types34.default.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types34.default.oneOfType([import_prop_types34.default.arrayOf(import_prop_types34.default.oneOfType([import_prop_types34.default.func, import_prop_types34.default.object, import_prop_types34.default.bool])), import_prop_types34.default.func, import_prop_types34.default.object]),
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: import_prop_types34.default.oneOfType([import_prop_types34.default.number, import_prop_types34.default.shape({
    appear: import_prop_types34.default.number,
    enter: import_prop_types34.default.number,
    exit: import_prop_types34.default.number
  })]),
  /**
   * The variant to use.
   * @default 'temporary'
   */
  variant: import_prop_types34.default.oneOf(["permanent", "persistent", "temporary"])
} : void 0;
var Drawer_default = Drawer;

// node_modules/@mui/material/Fab/Fab.js
init_objectWithoutPropertiesLoose();
init_extends();
var React42 = __toESM(require_react());
var import_prop_types35 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_capitalize();
init_useThemeProps();

// node_modules/@mui/material/Fab/fabClasses.js
init_esm();
init_generateUtilityClass();
function getFabUtilityClass(slot) {
  return generateUtilityClass("MuiFab", slot);
}
var fabClasses = generateUtilityClasses("MuiFab", ["root", "primary", "secondary", "extended", "circular", "focusVisible", "disabled", "colorInherit", "sizeSmall", "sizeMedium", "sizeLarge", "info", "error", "warning", "success"]);
var fabClasses_default = fabClasses;

// node_modules/@mui/material/Fab/Fab.js
init_styled();
var import_jsx_runtime49 = __toESM(require_jsx_runtime());
var _excluded30 = ["children", "className", "color", "component", "disabled", "disableFocusRipple", "focusVisibleClassName", "size", "variant"];
var useUtilityClasses29 = (ownerState) => {
  const {
    color: color2,
    variant,
    classes: classes2,
    size
  } = ownerState;
  const slots = {
    root: ["root", variant, `size${capitalize_default(size)}`, color2 === "inherit" ? "colorInherit" : color2]
  };
  const composedClasses = composeClasses(slots, getFabUtilityClass, classes2);
  return _extends({}, classes2, composedClasses);
};
var FabRoot = styled_default(ButtonBase_default, {
  name: "MuiFab",
  slot: "Root",
  shouldForwardProp: (prop) => rootShouldForwardProp(prop) || prop === "classes",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, styles20[ownerState.variant], styles20[`size${capitalize_default(ownerState.size)}`], ownerState.color === "inherit" && styles20.colorInherit, styles20[capitalize_default(ownerState.size)], styles20[ownerState.color]];
  }
})(({
  theme,
  ownerState
}) => {
  var _theme$palette$getCon, _theme$palette;
  return _extends({}, theme.typography.button, {
    minHeight: 36,
    transition: theme.transitions.create(["background-color", "box-shadow", "border-color"], {
      duration: theme.transitions.duration.short
    }),
    borderRadius: "50%",
    padding: 0,
    minWidth: 0,
    width: 56,
    height: 56,
    zIndex: (theme.vars || theme).zIndex.fab,
    boxShadow: (theme.vars || theme).shadows[6],
    "&:active": {
      boxShadow: (theme.vars || theme).shadows[12]
    },
    color: theme.vars ? theme.vars.palette.text.primary : (_theme$palette$getCon = (_theme$palette = theme.palette).getContrastText) == null ? void 0 : _theme$palette$getCon.call(_theme$palette, theme.palette.grey[300]),
    backgroundColor: (theme.vars || theme).palette.grey[300],
    "&:hover": {
      backgroundColor: (theme.vars || theme).palette.grey.A100,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: (theme.vars || theme).palette.grey[300]
      },
      textDecoration: "none"
    },
    [`&.${fabClasses_default.focusVisible}`]: {
      boxShadow: (theme.vars || theme).shadows[6]
    }
  }, ownerState.size === "small" && {
    width: 40,
    height: 40
  }, ownerState.size === "medium" && {
    width: 48,
    height: 48
  }, ownerState.variant === "extended" && {
    borderRadius: 48 / 2,
    padding: "0 16px",
    width: "auto",
    minHeight: "auto",
    minWidth: 48,
    height: 48
  }, ownerState.variant === "extended" && ownerState.size === "small" && {
    width: "auto",
    padding: "0 8px",
    borderRadius: 34 / 2,
    minWidth: 34,
    height: 34
  }, ownerState.variant === "extended" && ownerState.size === "medium" && {
    width: "auto",
    padding: "0 16px",
    borderRadius: 40 / 2,
    minWidth: 40,
    height: 40
  }, ownerState.color === "inherit" && {
    color: "inherit"
  });
}, ({
  theme,
  ownerState
}) => _extends({}, ownerState.color !== "inherit" && ownerState.color !== "default" && (theme.vars || theme).palette[ownerState.color] != null && {
  color: (theme.vars || theme).palette[ownerState.color].contrastText,
  backgroundColor: (theme.vars || theme).palette[ownerState.color].main,
  "&:hover": {
    backgroundColor: (theme.vars || theme).palette[ownerState.color].dark,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: (theme.vars || theme).palette[ownerState.color].main
    }
  }
}), ({
  theme
}) => ({
  [`&.${fabClasses_default.disabled}`]: {
    color: (theme.vars || theme).palette.action.disabled,
    boxShadow: (theme.vars || theme).shadows[0],
    backgroundColor: (theme.vars || theme).palette.action.disabledBackground
  }
}));
var Fab = React42.forwardRef(function Fab2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiFab"
  });
  const {
    children,
    className,
    color: color2 = "default",
    component = "button",
    disabled = false,
    disableFocusRipple = false,
    focusVisibleClassName,
    size = "large",
    variant = "circular"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded30);
  const ownerState = _extends({}, props, {
    color: color2,
    component,
    disabled,
    disableFocusRipple,
    size,
    variant
  });
  const classes2 = useUtilityClasses29(ownerState);
  return (0, import_jsx_runtime49.jsx)(FabRoot, _extends({
    className: clsx_m_default(classes2.root, className),
    component,
    disabled,
    focusRipple: !disableFocusRipple,
    focusVisibleClassName: clsx_m_default(classes2.focusVisible, focusVisibleClassName),
    ownerState,
    ref
  }, other, {
    classes: classes2,
    children
  }));
});
true ? Fab.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types35.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types35.default.object,
  /**
   * @ignore
   */
  className: import_prop_types35.default.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'default'
   */
  color: import_prop_types35.default.oneOfType([import_prop_types35.default.oneOf(["default", "error", "info", "inherit", "primary", "secondary", "success", "warning"]), import_prop_types35.default.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types35.default.elementType,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types35.default.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: import_prop_types35.default.bool,
  /**
   * If `true`, the ripple effect is disabled.
   */
  disableRipple: import_prop_types35.default.bool,
  /**
   * @ignore
   */
  focusVisibleClassName: import_prop_types35.default.string,
  /**
   * The URL to link to when the button is clicked.
   * If defined, an `a` element will be used as the root node.
   */
  href: import_prop_types35.default.string,
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'large'
   */
  size: import_prop_types35.default.oneOfType([import_prop_types35.default.oneOf(["small", "medium", "large"]), import_prop_types35.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types35.default.oneOfType([import_prop_types35.default.arrayOf(import_prop_types35.default.oneOfType([import_prop_types35.default.func, import_prop_types35.default.object, import_prop_types35.default.bool])), import_prop_types35.default.func, import_prop_types35.default.object]),
  /**
   * The variant to use.
   * @default 'circular'
   */
  variant: import_prop_types35.default.oneOfType([import_prop_types35.default.oneOf(["circular", "extended"]), import_prop_types35.default.string])
} : void 0;
var Fab_default = Fab;

// node_modules/@mui/material/FormControlLabel/FormControlLabel.js
init_objectWithoutPropertiesLoose();
init_extends();
var React43 = __toESM(require_react());
var import_prop_types36 = __toESM(require_prop_types());
init_clsx_m();
init_esm();
init_base();
init_capitalize();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js
init_esm();
init_generateUtilityClass();
function getFormControlLabelUtilityClasses(slot) {
  return generateUtilityClass("MuiFormControlLabel", slot);
}
var formControlLabelClasses = generateUtilityClasses("MuiFormControlLabel", ["root", "labelPlacementStart", "labelPlacementTop", "labelPlacementBottom", "disabled", "label", "error"]);
var formControlLabelClasses_default = formControlLabelClasses;

// node_modules/@mui/material/FormControlLabel/FormControlLabel.js
var import_jsx_runtime50 = __toESM(require_jsx_runtime());
var import_jsx_runtime51 = __toESM(require_jsx_runtime());
var _excluded31 = ["checked", "className", "componentsProps", "control", "disabled", "disableTypography", "inputRef", "label", "labelPlacement", "name", "onChange", "slotProps", "value"];
var useUtilityClasses30 = (ownerState) => {
  const {
    classes: classes2,
    disabled,
    labelPlacement,
    error
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", `labelPlacement${capitalize_default(labelPlacement)}`, error && "error"],
    label: ["label", disabled && "disabled"]
  };
  return composeClasses(slots, getFormControlLabelUtilityClasses, classes2);
};
var FormControlLabelRoot = styled_default("label", {
  name: "MuiFormControlLabel",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [{
      [`& .${formControlLabelClasses_default.label}`]: styles20.label
    }, styles20.root, styles20[`labelPlacement${capitalize_default(ownerState.labelPlacement)}`]];
  }
})(({
  theme,
  ownerState
}) => _extends({
  display: "inline-flex",
  alignItems: "center",
  cursor: "pointer",
  // For correct alignment with the text.
  verticalAlign: "middle",
  WebkitTapHighlightColor: "transparent",
  marginLeft: -11,
  marginRight: 16,
  // used for row presentation of radio/checkbox
  [`&.${formControlLabelClasses_default.disabled}`]: {
    cursor: "default"
  }
}, ownerState.labelPlacement === "start" && {
  flexDirection: "row-reverse",
  marginLeft: 16,
  // used for row presentation of radio/checkbox
  marginRight: -11
}, ownerState.labelPlacement === "top" && {
  flexDirection: "column-reverse",
  marginLeft: 16
}, ownerState.labelPlacement === "bottom" && {
  flexDirection: "column",
  marginLeft: 16
}, {
  [`& .${formControlLabelClasses_default.label}`]: {
    [`&.${formControlLabelClasses_default.disabled}`]: {
      color: (theme.vars || theme).palette.text.disabled
    }
  }
}));
var FormControlLabel = React43.forwardRef(function FormControlLabel2(inProps, ref) {
  var _slotProps$typography;
  const props = useThemeProps2({
    props: inProps,
    name: "MuiFormControlLabel"
  });
  const {
    className,
    componentsProps = {},
    control,
    disabled: disabledProp,
    disableTypography,
    label: labelProp,
    labelPlacement = "end",
    slotProps = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded31);
  const muiFormControl = useFormControl();
  let disabled = disabledProp;
  if (typeof disabled === "undefined" && typeof control.props.disabled !== "undefined") {
    disabled = control.props.disabled;
  }
  if (typeof disabled === "undefined" && muiFormControl) {
    disabled = muiFormControl.disabled;
  }
  const controlProps = {
    disabled
  };
  ["checked", "name", "onChange", "value", "inputRef"].forEach((key) => {
    if (typeof control.props[key] === "undefined" && typeof props[key] !== "undefined") {
      controlProps[key] = props[key];
    }
  });
  const fcs = formControlState({
    props,
    muiFormControl,
    states: ["error"]
  });
  const ownerState = _extends({}, props, {
    disabled,
    labelPlacement,
    error: fcs.error
  });
  const classes2 = useUtilityClasses30(ownerState);
  const typographySlotProps = (_slotProps$typography = slotProps.typography) != null ? _slotProps$typography : componentsProps.typography;
  let label = labelProp;
  if (label != null && label.type !== Typography_default && !disableTypography) {
    label = (0, import_jsx_runtime50.jsx)(Typography_default, _extends({
      component: "span"
    }, typographySlotProps, {
      className: clsx_m_default(classes2.label, typographySlotProps == null ? void 0 : typographySlotProps.className),
      children: label
    }));
  }
  return (0, import_jsx_runtime51.jsxs)(FormControlLabelRoot, _extends({
    className: clsx_m_default(classes2.root, className),
    ownerState,
    ref
  }, other, {
    children: [React43.cloneElement(control, controlProps), label]
  }));
});
true ? FormControlLabel.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the component appears selected.
   */
  checked: import_prop_types36.default.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types36.default.object,
  /**
   * @ignore
   */
  className: import_prop_types36.default.string,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  componentsProps: import_prop_types36.default.shape({
    typography: import_prop_types36.default.object
  }),
  /**
   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.
   */
  control: import_prop_types36.default.element.isRequired,
  /**
   * If `true`, the control is disabled.
   */
  disabled: import_prop_types36.default.bool,
  /**
   * If `true`, the label is rendered as it is passed without an additional typography node.
   */
  disableTypography: import_prop_types36.default.bool,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: refType_default,
  /**
   * A text or an element to be used in an enclosing label element.
   */
  label: import_prop_types36.default.node,
  /**
   * The position of the label.
   * @default 'end'
   */
  labelPlacement: import_prop_types36.default.oneOf(["bottom", "end", "start", "top"]),
  /**
   * @ignore
   */
  name: import_prop_types36.default.string,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: import_prop_types36.default.func,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: import_prop_types36.default.shape({
    typography: import_prop_types36.default.object
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types36.default.oneOfType([import_prop_types36.default.arrayOf(import_prop_types36.default.oneOfType([import_prop_types36.default.func, import_prop_types36.default.object, import_prop_types36.default.bool])), import_prop_types36.default.func, import_prop_types36.default.object]),
  /**
   * The value of the component.
   */
  value: import_prop_types36.default.any
} : void 0;

// node_modules/@mui/material/FormGroup/FormGroup.js
init_objectWithoutPropertiesLoose();
init_extends();
var React44 = __toESM(require_react());
var import_prop_types37 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/FormGroup/formGroupClasses.js
init_esm();
init_generateUtilityClass();
function getFormGroupUtilityClass(slot) {
  return generateUtilityClass("MuiFormGroup", slot);
}
var formGroupClasses = generateUtilityClasses("MuiFormGroup", ["root", "row", "error"]);

// node_modules/@mui/material/FormGroup/FormGroup.js
var import_jsx_runtime52 = __toESM(require_jsx_runtime());
var _excluded32 = ["className", "row"];
var useUtilityClasses31 = (ownerState) => {
  const {
    classes: classes2,
    row,
    error
  } = ownerState;
  const slots = {
    root: ["root", row && "row", error && "error"]
  };
  return composeClasses(slots, getFormGroupUtilityClass, classes2);
};
var FormGroupRoot = styled_default("div", {
  name: "MuiFormGroup",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, ownerState.row && styles20.row];
  }
})(({
  ownerState
}) => _extends({
  display: "flex",
  flexDirection: "column",
  flexWrap: "wrap"
}, ownerState.row && {
  flexDirection: "row"
}));
var FormGroup = React44.forwardRef(function FormGroup2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiFormGroup"
  });
  const {
    className,
    row = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded32);
  const muiFormControl = useFormControl();
  const fcs = formControlState({
    props,
    muiFormControl,
    states: ["error"]
  });
  const ownerState = _extends({}, props, {
    row,
    error: fcs.error
  });
  const classes2 = useUtilityClasses31(ownerState);
  return (0, import_jsx_runtime52.jsx)(FormGroupRoot, _extends({
    className: clsx_m_default(classes2.root, className),
    ownerState,
    ref
  }, other));
});
true ? FormGroup.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types37.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types37.default.object,
  /**
   * @ignore
   */
  className: import_prop_types37.default.string,
  /**
   * Display group of elements in a compact row.
   * @default false
   */
  row: import_prop_types37.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types37.default.oneOfType([import_prop_types37.default.arrayOf(import_prop_types37.default.oneOfType([import_prop_types37.default.func, import_prop_types37.default.object, import_prop_types37.default.bool])), import_prop_types37.default.func, import_prop_types37.default.object])
} : void 0;
var FormGroup_default = FormGroup;

// node_modules/@mui/material/Grid/Grid.js
init_objectWithoutPropertiesLoose();
init_extends();
var React46 = __toESM(require_react());
var import_prop_types38 = __toESM(require_prop_types());
init_clsx_m();
init_esm2();
init_base();
init_requirePropFactory();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/Grid/GridContext.js
var React45 = __toESM(require_react());
var GridContext = React45.createContext();
if (true) {
  GridContext.displayName = "GridContext";
}
var GridContext_default = GridContext;

// node_modules/@mui/material/Grid/gridClasses.js
init_esm();
init_generateUtilityClass();
function getGridUtilityClass(slot) {
  return generateUtilityClass("MuiGrid", slot);
}
var SPACINGS2 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
var DIRECTIONS = ["column-reverse", "column", "row-reverse", "row"];
var WRAPS = ["nowrap", "wrap-reverse", "wrap"];
var GRID_SIZES = ["auto", true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
var gridClasses = generateUtilityClasses("MuiGrid", [
  "root",
  "container",
  "item",
  "zeroMinWidth",
  // spacings
  ...SPACINGS2.map((spacing) => `spacing-xs-${spacing}`),
  // direction values
  ...DIRECTIONS.map((direction) => `direction-xs-${direction}`),
  // wrap values
  ...WRAPS.map((wrap) => `wrap-xs-${wrap}`),
  // grid sizes for all breakpoints
  ...GRID_SIZES.map((size) => `grid-xs-${size}`),
  ...GRID_SIZES.map((size) => `grid-sm-${size}`),
  ...GRID_SIZES.map((size) => `grid-md-${size}`),
  ...GRID_SIZES.map((size) => `grid-lg-${size}`),
  ...GRID_SIZES.map((size) => `grid-xl-${size}`)
]);
var gridClasses_default = gridClasses;

// node_modules/@mui/material/Grid/Grid.js
var import_jsx_runtime53 = __toESM(require_jsx_runtime());
var _excluded33 = ["className", "columns", "columnSpacing", "component", "container", "direction", "item", "rowSpacing", "spacing", "wrap", "zeroMinWidth"];
function getOffset3(val) {
  const parse = parseFloat(val);
  return `${parse}${String(val).replace(String(parse), "") || "px"}`;
}
function generateGrid({
  theme,
  ownerState
}) {
  let size;
  return theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {
    let styles20 = {};
    if (ownerState[breakpoint]) {
      size = ownerState[breakpoint];
    }
    if (!size) {
      return globalStyles;
    }
    if (size === true) {
      styles20 = {
        flexBasis: 0,
        flexGrow: 1,
        maxWidth: "100%"
      };
    } else if (size === "auto") {
      styles20 = {
        flexBasis: "auto",
        flexGrow: 0,
        flexShrink: 0,
        maxWidth: "none",
        width: "auto"
      };
    } else {
      const columnsBreakpointValues = resolveBreakpointValues({
        values: ownerState.columns,
        breakpoints: theme.breakpoints.values
      });
      const columnValue = typeof columnsBreakpointValues === "object" ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues;
      if (columnValue === void 0 || columnValue === null) {
        return globalStyles;
      }
      const width = `${Math.round(size / columnValue * 1e8) / 1e6}%`;
      let more = {};
      if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {
        const themeSpacing = theme.spacing(ownerState.columnSpacing);
        if (themeSpacing !== "0px") {
          const fullWidth = `calc(${width} + ${getOffset3(themeSpacing)})`;
          more = {
            flexBasis: fullWidth,
            maxWidth: fullWidth
          };
        }
      }
      styles20 = _extends({
        flexBasis: width,
        flexGrow: 0,
        maxWidth: width
      }, more);
    }
    if (theme.breakpoints.values[breakpoint] === 0) {
      Object.assign(globalStyles, styles20);
    } else {
      globalStyles[theme.breakpoints.up(breakpoint)] = styles20;
    }
    return globalStyles;
  }, {});
}
function generateDirection({
  theme,
  ownerState
}) {
  const directionValues = resolveBreakpointValues({
    values: ownerState.direction,
    breakpoints: theme.breakpoints.values
  });
  return handleBreakpoints({
    theme
  }, directionValues, (propValue) => {
    const output = {
      flexDirection: propValue
    };
    if (propValue.indexOf("column") === 0) {
      output[`& > .${gridClasses_default.item}`] = {
        maxWidth: "none"
      };
    }
    return output;
  });
}
function extractZeroValueBreakpointKeys({
  breakpoints,
  values
}) {
  let nonZeroKey = "";
  Object.keys(values).forEach((key) => {
    if (nonZeroKey !== "") {
      return;
    }
    if (values[key] !== 0) {
      nonZeroKey = key;
    }
  });
  const sortedBreakpointKeysByValue = Object.keys(breakpoints).sort((a2, b) => {
    return breakpoints[a2] - breakpoints[b];
  });
  return sortedBreakpointKeysByValue.slice(0, sortedBreakpointKeysByValue.indexOf(nonZeroKey));
}
function generateRowGap({
  theme,
  ownerState
}) {
  const {
    container,
    rowSpacing
  } = ownerState;
  let styles20 = {};
  if (container && rowSpacing !== 0) {
    const rowSpacingValues = resolveBreakpointValues({
      values: rowSpacing,
      breakpoints: theme.breakpoints.values
    });
    let zeroValueBreakpointKeys;
    if (typeof rowSpacingValues === "object") {
      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({
        breakpoints: theme.breakpoints.values,
        values: rowSpacingValues
      });
    }
    styles20 = handleBreakpoints({
      theme
    }, rowSpacingValues, (propValue, breakpoint) => {
      var _zeroValueBreakpointK;
      const themeSpacing = theme.spacing(propValue);
      if (themeSpacing !== "0px") {
        return {
          marginTop: `-${getOffset3(themeSpacing)}`,
          [`& > .${gridClasses_default.item}`]: {
            paddingTop: getOffset3(themeSpacing)
          }
        };
      }
      if ((_zeroValueBreakpointK = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK.includes(breakpoint)) {
        return {};
      }
      return {
        marginTop: 0,
        [`& > .${gridClasses_default.item}`]: {
          paddingTop: 0
        }
      };
    });
  }
  return styles20;
}
function generateColumnGap({
  theme,
  ownerState
}) {
  const {
    container,
    columnSpacing
  } = ownerState;
  let styles20 = {};
  if (container && columnSpacing !== 0) {
    const columnSpacingValues = resolveBreakpointValues({
      values: columnSpacing,
      breakpoints: theme.breakpoints.values
    });
    let zeroValueBreakpointKeys;
    if (typeof columnSpacingValues === "object") {
      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({
        breakpoints: theme.breakpoints.values,
        values: columnSpacingValues
      });
    }
    styles20 = handleBreakpoints({
      theme
    }, columnSpacingValues, (propValue, breakpoint) => {
      var _zeroValueBreakpointK2;
      const themeSpacing = theme.spacing(propValue);
      if (themeSpacing !== "0px") {
        return {
          width: `calc(100% + ${getOffset3(themeSpacing)})`,
          marginLeft: `-${getOffset3(themeSpacing)}`,
          [`& > .${gridClasses_default.item}`]: {
            paddingLeft: getOffset3(themeSpacing)
          }
        };
      }
      if ((_zeroValueBreakpointK2 = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK2.includes(breakpoint)) {
        return {};
      }
      return {
        width: "100%",
        marginLeft: 0,
        [`& > .${gridClasses_default.item}`]: {
          paddingLeft: 0
        }
      };
    });
  }
  return styles20;
}
function resolveSpacingStyles(spacing, breakpoints, styles20 = {}) {
  if (!spacing || spacing <= 0) {
    return [];
  }
  if (typeof spacing === "string" && !Number.isNaN(Number(spacing)) || typeof spacing === "number") {
    return [styles20[`spacing-xs-${String(spacing)}`]];
  }
  const spacingStyles = [];
  breakpoints.forEach((breakpoint) => {
    const value = spacing[breakpoint];
    if (Number(value) > 0) {
      spacingStyles.push(styles20[`spacing-${breakpoint}-${String(value)}`]);
    }
  });
  return spacingStyles;
}
var GridRoot = styled_default("div", {
  name: "MuiGrid",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    const {
      container,
      direction,
      item,
      spacing,
      wrap,
      zeroMinWidth,
      breakpoints
    } = ownerState;
    let spacingStyles = [];
    if (container) {
      spacingStyles = resolveSpacingStyles(spacing, breakpoints, styles20);
    }
    const breakpointsStyles = [];
    breakpoints.forEach((breakpoint) => {
      const value = ownerState[breakpoint];
      if (value) {
        breakpointsStyles.push(styles20[`grid-${breakpoint}-${String(value)}`]);
      }
    });
    return [styles20.root, container && styles20.container, item && styles20.item, zeroMinWidth && styles20.zeroMinWidth, ...spacingStyles, direction !== "row" && styles20[`direction-xs-${String(direction)}`], wrap !== "wrap" && styles20[`wrap-xs-${String(wrap)}`], ...breakpointsStyles];
  }
})(({
  ownerState
}) => _extends({
  boxSizing: "border-box"
}, ownerState.container && {
  display: "flex",
  flexWrap: "wrap",
  width: "100%"
}, ownerState.item && {
  margin: 0
  // For instance, it's useful when used with a `figure` element.
}, ownerState.zeroMinWidth && {
  minWidth: 0
}, ownerState.wrap !== "wrap" && {
  flexWrap: ownerState.wrap
}), generateDirection, generateRowGap, generateColumnGap, generateGrid);
function resolveSpacingClasses(spacing, breakpoints) {
  if (!spacing || spacing <= 0) {
    return [];
  }
  if (typeof spacing === "string" && !Number.isNaN(Number(spacing)) || typeof spacing === "number") {
    return [`spacing-xs-${String(spacing)}`];
  }
  const classes2 = [];
  breakpoints.forEach((breakpoint) => {
    const value = spacing[breakpoint];
    if (Number(value) > 0) {
      const className = `spacing-${breakpoint}-${String(value)}`;
      classes2.push(className);
    }
  });
  return classes2;
}
var useUtilityClasses32 = (ownerState) => {
  const {
    classes: classes2,
    container,
    direction,
    item,
    spacing,
    wrap,
    zeroMinWidth,
    breakpoints
  } = ownerState;
  let spacingClasses = [];
  if (container) {
    spacingClasses = resolveSpacingClasses(spacing, breakpoints);
  }
  const breakpointsClasses = [];
  breakpoints.forEach((breakpoint) => {
    const value = ownerState[breakpoint];
    if (value) {
      breakpointsClasses.push(`grid-${breakpoint}-${String(value)}`);
    }
  });
  const slots = {
    root: ["root", container && "container", item && "item", zeroMinWidth && "zeroMinWidth", ...spacingClasses, direction !== "row" && `direction-xs-${String(direction)}`, wrap !== "wrap" && `wrap-xs-${String(wrap)}`, ...breakpointsClasses]
  };
  return composeClasses(slots, getGridUtilityClass, classes2);
};
var Grid = React46.forwardRef(function Grid2(inProps, ref) {
  const themeProps = useThemeProps2({
    props: inProps,
    name: "MuiGrid"
  });
  const {
    breakpoints
  } = useTheme();
  const props = extendSxProp(themeProps);
  const {
    className,
    columns: columnsProp,
    columnSpacing: columnSpacingProp,
    component = "div",
    container = false,
    direction = "row",
    item = false,
    rowSpacing: rowSpacingProp,
    spacing = 0,
    wrap = "wrap",
    zeroMinWidth = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded33);
  const rowSpacing = rowSpacingProp || spacing;
  const columnSpacing = columnSpacingProp || spacing;
  const columnsContext = React46.useContext(GridContext_default);
  const columns = container ? columnsProp || 12 : columnsContext;
  const breakpointsValues = {};
  const otherFiltered = _extends({}, other);
  breakpoints.keys.forEach((breakpoint) => {
    if (other[breakpoint] != null) {
      breakpointsValues[breakpoint] = other[breakpoint];
      delete otherFiltered[breakpoint];
    }
  });
  const ownerState = _extends({}, props, {
    columns,
    container,
    direction,
    item,
    rowSpacing,
    columnSpacing,
    wrap,
    zeroMinWidth,
    spacing
  }, breakpointsValues, {
    breakpoints: breakpoints.keys
  });
  const classes2 = useUtilityClasses32(ownerState);
  return (0, import_jsx_runtime53.jsx)(GridContext_default.Provider, {
    value: columns,
    children: (0, import_jsx_runtime53.jsx)(GridRoot, _extends({
      ownerState,
      className: clsx_m_default(classes2.root, className),
      as: component,
      ref
    }, otherFiltered))
  });
});
true ? Grid.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types38.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types38.default.object,
  /**
   * @ignore
   */
  className: import_prop_types38.default.string,
  /**
   * The number of columns.
   * @default 12
   */
  columns: import_prop_types38.default.oneOfType([import_prop_types38.default.arrayOf(import_prop_types38.default.number), import_prop_types38.default.number, import_prop_types38.default.object]),
  /**
   * Defines the horizontal space between the type `item` components.
   * It overrides the value of the `spacing` prop.
   */
  columnSpacing: import_prop_types38.default.oneOfType([import_prop_types38.default.arrayOf(import_prop_types38.default.oneOfType([import_prop_types38.default.number, import_prop_types38.default.string])), import_prop_types38.default.number, import_prop_types38.default.object, import_prop_types38.default.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types38.default.elementType,
  /**
   * If `true`, the component will have the flex *container* behavior.
   * You should be wrapping *items* with a *container*.
   * @default false
   */
  container: import_prop_types38.default.bool,
  /**
   * Defines the `flex-direction` style property.
   * It is applied for all screen sizes.
   * @default 'row'
   */
  direction: import_prop_types38.default.oneOfType([import_prop_types38.default.oneOf(["column-reverse", "column", "row-reverse", "row"]), import_prop_types38.default.arrayOf(import_prop_types38.default.oneOf(["column-reverse", "column", "row-reverse", "row"])), import_prop_types38.default.object]),
  /**
   * If `true`, the component will have the flex *item* behavior.
   * You should be wrapping *items* with a *container*.
   * @default false
   */
  item: import_prop_types38.default.bool,
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for the `lg` breakpoint and wider screens if not overridden.
   * @default false
   */
  lg: import_prop_types38.default.oneOfType([import_prop_types38.default.oneOf(["auto"]), import_prop_types38.default.number, import_prop_types38.default.bool]),
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for the `md` breakpoint and wider screens if not overridden.
   * @default false
   */
  md: import_prop_types38.default.oneOfType([import_prop_types38.default.oneOf(["auto"]), import_prop_types38.default.number, import_prop_types38.default.bool]),
  /**
   * Defines the vertical space between the type `item` components.
   * It overrides the value of the `spacing` prop.
   */
  rowSpacing: import_prop_types38.default.oneOfType([import_prop_types38.default.arrayOf(import_prop_types38.default.oneOfType([import_prop_types38.default.number, import_prop_types38.default.string])), import_prop_types38.default.number, import_prop_types38.default.object, import_prop_types38.default.string]),
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for the `sm` breakpoint and wider screens if not overridden.
   * @default false
   */
  sm: import_prop_types38.default.oneOfType([import_prop_types38.default.oneOf(["auto"]), import_prop_types38.default.number, import_prop_types38.default.bool]),
  /**
   * Defines the space between the type `item` components.
   * It can only be used on a type `container` component.
   * @default 0
   */
  spacing: import_prop_types38.default.oneOfType([import_prop_types38.default.arrayOf(import_prop_types38.default.oneOfType([import_prop_types38.default.number, import_prop_types38.default.string])), import_prop_types38.default.number, import_prop_types38.default.object, import_prop_types38.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types38.default.oneOfType([import_prop_types38.default.arrayOf(import_prop_types38.default.oneOfType([import_prop_types38.default.func, import_prop_types38.default.object, import_prop_types38.default.bool])), import_prop_types38.default.func, import_prop_types38.default.object]),
  /**
   * Defines the `flex-wrap` style property.
   * It's applied for all screen sizes.
   * @default 'wrap'
   */
  wrap: import_prop_types38.default.oneOf(["nowrap", "wrap-reverse", "wrap"]),
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for the `xl` breakpoint and wider screens if not overridden.
   * @default false
   */
  xl: import_prop_types38.default.oneOfType([import_prop_types38.default.oneOf(["auto"]), import_prop_types38.default.number, import_prop_types38.default.bool]),
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for all the screen sizes with the lowest priority.
   * @default false
   */
  xs: import_prop_types38.default.oneOfType([import_prop_types38.default.oneOf(["auto"]), import_prop_types38.default.number, import_prop_types38.default.bool]),
  /**
   * If `true`, it sets `min-width: 0` on the item.
   * Refer to the limitations section of the documentation to better understand the use case.
   * @default false
   */
  zeroMinWidth: import_prop_types38.default.bool
} : void 0;
if (true) {
  const requireProp = requirePropFactory_default("Grid", Grid);
  Grid["propTypes"] = _extends({}, Grid.propTypes, {
    direction: requireProp("container"),
    lg: requireProp("item"),
    md: requireProp("item"),
    sm: requireProp("item"),
    spacing: requireProp("container"),
    wrap: requireProp("container"),
    xs: requireProp("item"),
    zeroMinWidth: requireProp("item")
  });
}

// node_modules/@mui/material/Unstable_Grid2/Grid2.js
var import_prop_types39 = __toESM(require_prop_types());
init_Unstable_Grid();
var Grid22 = createGrid({
  createStyledComponent: styled_default("div", {
    name: "MuiGrid2",
    overridesResolver: (props, styles20) => styles20.root
  }),
  componentName: "MuiGrid2",
  // eslint-disable-next-line material-ui/mui-name-matches-component-name
  useThemeProps: (inProps) => useThemeProps2({
    props: inProps,
    name: "MuiGrid2"
  })
});
true ? Grid22.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types39.default.node,
  /**
   * @ignore
   */
  sx: import_prop_types39.default.oneOfType([import_prop_types39.default.arrayOf(import_prop_types39.default.oneOfType([import_prop_types39.default.func, import_prop_types39.default.object, import_prop_types39.default.bool])), import_prop_types39.default.func, import_prop_types39.default.object])
} : void 0;

// node_modules/@mui/material/Unstable_Grid2/grid2Classes.js
init_esm();
init_generateUtilityClass();
var SPACINGS3 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
var DIRECTIONS2 = ["column-reverse", "column", "row-reverse", "row"];
var WRAPS2 = ["nowrap", "wrap-reverse", "wrap"];
var GRID_SIZES2 = ["auto", true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
var grid2Classes = generateUtilityClasses("MuiGrid2", [
  "root",
  "container",
  "item",
  "zeroMinWidth",
  // spacings
  ...SPACINGS3.map((spacing) => `spacing-xs-${spacing}`),
  // direction values
  ...DIRECTIONS2.map((direction) => `direction-xs-${direction}`),
  // wrap values
  ...WRAPS2.map((wrap) => `wrap-xs-${wrap}`),
  // grid sizes for all breakpoints
  ...GRID_SIZES2.map((size) => `grid-xs-${size}`),
  ...GRID_SIZES2.map((size) => `grid-sm-${size}`),
  ...GRID_SIZES2.map((size) => `grid-md-${size}`),
  ...GRID_SIZES2.map((size) => `grid-lg-${size}`),
  ...GRID_SIZES2.map((size) => `grid-xl-${size}`)
]);

// node_modules/@mui/material/Hidden/Hidden.js
init_extends();
init_objectWithoutPropertiesLoose();
var React51 = __toESM(require_react());
var import_prop_types43 = __toESM(require_prop_types());

// node_modules/@mui/material/Hidden/HiddenJs.js
var React49 = __toESM(require_react());
var import_prop_types41 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/material/Hidden/withWidth.js
init_extends();
init_objectWithoutPropertiesLoose();
var React48 = __toESM(require_react());
var import_prop_types40 = __toESM(require_prop_types());
init_esm();
init_esm2();
init_useEnhancedEffect();

// node_modules/@mui/material/useMediaQuery/useMediaQuery.js
var React47 = __toESM(require_react());
init_esm2();
init_useEnhancedEffect();
function useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {
  const supportMatchMedia = typeof window !== "undefined" && typeof window.matchMedia !== "undefined";
  const [match, setMatch] = React47.useState(() => {
    if (noSsr && supportMatchMedia) {
      return matchMedia(query).matches;
    }
    if (ssrMatchMedia) {
      return ssrMatchMedia(query).matches;
    }
    return defaultMatches;
  });
  useEnhancedEffect_default(() => {
    let active = true;
    if (!supportMatchMedia) {
      return void 0;
    }
    const queryList = matchMedia(query);
    const updateMatch = () => {
      if (active) {
        setMatch(queryList.matches);
      }
    };
    updateMatch();
    queryList.addListener(updateMatch);
    return () => {
      active = false;
      queryList.removeListener(updateMatch);
    };
  }, [query, matchMedia, supportMatchMedia]);
  return match;
}
var maybeReactUseSyncExternalStore = React47["useSyncExternalStore"];
function useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia) {
  const getDefaultSnapshot = React47.useCallback(() => defaultMatches, [defaultMatches]);
  const getServerSnapshot = React47.useMemo(() => {
    if (ssrMatchMedia !== null) {
      const {
        matches
      } = ssrMatchMedia(query);
      return () => matches;
    }
    return getDefaultSnapshot;
  }, [getDefaultSnapshot, query, ssrMatchMedia]);
  const [getSnapshot, subscribe] = React47.useMemo(() => {
    if (matchMedia === null) {
      return [getDefaultSnapshot, () => () => {
      }];
    }
    const mediaQueryList = matchMedia(query);
    return [() => mediaQueryList.matches, (notify) => {
      mediaQueryList.addListener(notify);
      return () => {
        mediaQueryList.removeListener(notify);
      };
    }];
  }, [getDefaultSnapshot, matchMedia, query]);
  const match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
  return match;
}
function useMediaQuery(queryInput, options = {}) {
  const theme = useThemeWithoutDefault_default();
  const supportMatchMedia = typeof window !== "undefined" && typeof window.matchMedia !== "undefined";
  const {
    defaultMatches = false,
    matchMedia = supportMatchMedia ? window.matchMedia : null,
    ssrMatchMedia = null,
    noSsr
  } = getThemeProps({
    name: "MuiUseMediaQuery",
    props: options,
    theme
  });
  if (true) {
    if (typeof queryInput === "function" && theme === null) {
      console.error(["MUI: The `query` argument provided is invalid.", "You are providing a function without a theme in the context.", "One of the parent elements needs to use a ThemeProvider."].join("\n"));
    }
  }
  let query = typeof queryInput === "function" ? queryInput(theme) : queryInput;
  query = query.replace(/^@media( ?)/m, "");
  const useMediaQueryImplementation = maybeReactUseSyncExternalStore !== void 0 ? useMediaQueryNew : useMediaQueryOld;
  const match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);
  if (true) {
    React47.useDebugValue({
      query,
      match
    });
  }
  return match;
}

// node_modules/@mui/material/Hidden/withWidth.js
var import_jsx_runtime54 = __toESM(require_jsx_runtime());
var _excluded34 = ["initialWidth", "width"];
var breakpointKeys = ["xs", "sm", "md", "lg", "xl"];
var isWidthUp = (breakpoint, width, inclusive = true) => {
  if (inclusive) {
    return breakpointKeys.indexOf(breakpoint) <= breakpointKeys.indexOf(width);
  }
  return breakpointKeys.indexOf(breakpoint) < breakpointKeys.indexOf(width);
};
var isWidthDown = (breakpoint, width, inclusive = false) => {
  if (inclusive) {
    return breakpointKeys.indexOf(width) <= breakpointKeys.indexOf(breakpoint);
  }
  return breakpointKeys.indexOf(width) < breakpointKeys.indexOf(breakpoint);
};
var withWidth = (options = {}) => (Component2) => {
  const {
    withTheme: withThemeOption = false,
    noSSR = false,
    initialWidth: initialWidthOption
  } = options;
  function WithWidth(props) {
    const contextTheme = useTheme();
    const theme = props.theme || contextTheme;
    const _getThemeProps = getThemeProps({
      theme,
      name: "MuiWithWidth",
      props
    }), {
      initialWidth,
      width
    } = _getThemeProps, other = _objectWithoutPropertiesLoose(_getThemeProps, _excluded34);
    const [mountedState, setMountedState] = React48.useState(false);
    useEnhancedEffect_default(() => {
      setMountedState(true);
    }, []);
    const keys = theme.breakpoints.keys.slice().reverse();
    const widthComputed = keys.reduce((output, key) => {
      const matches = useMediaQuery(theme.breakpoints.up(key));
      return !output && matches ? key : output;
    }, null);
    const more = _extends({
      width: width || (mountedState || noSSR ? widthComputed : void 0) || initialWidth || initialWidthOption
    }, withThemeOption ? {
      theme
    } : {}, other);
    if (more.width === void 0) {
      return null;
    }
    return (0, import_jsx_runtime54.jsx)(Component2, _extends({}, more));
  }
  true ? WithWidth.propTypes = {
    /**
     * As `window.innerWidth` is unavailable on the server,
     * we default to rendering an empty component during the first mount.
     * You might want to use a heuristic to approximate
     * the screen width of the client browser screen width.
     *
     * For instance, you could be using the user-agent or the client-hints.
     * https://caniuse.com/#search=client%20hint
     */
    initialWidth: import_prop_types40.default.oneOf(["xs", "sm", "md", "lg", "xl"]),
    /**
     * @ignore
     */
    theme: import_prop_types40.default.object,
    /**
     * Bypass the width calculation logic.
     */
    width: import_prop_types40.default.oneOf(["xs", "sm", "md", "lg", "xl"])
  } : void 0;
  if (true) {
    WithWidth.displayName = `WithWidth(${getDisplayName(Component2)})`;
  }
  return WithWidth;
};
var withWidth_default = withWidth;

// node_modules/@mui/material/Hidden/HiddenJs.js
var import_jsx_runtime55 = __toESM(require_jsx_runtime());
function HiddenJs(props) {
  const {
    children,
    only,
    width
  } = props;
  const theme = useTheme();
  let visible = true;
  if (only) {
    if (Array.isArray(only)) {
      for (let i = 0; i < only.length; i += 1) {
        const breakpoint = only[i];
        if (width === breakpoint) {
          visible = false;
          break;
        }
      }
    } else if (only && width === only) {
      visible = false;
    }
  }
  if (visible) {
    for (let i = 0; i < theme.breakpoints.keys.length; i += 1) {
      const breakpoint = theme.breakpoints.keys[i];
      const breakpointUp = props[`${breakpoint}Up`];
      const breakpointDown = props[`${breakpoint}Down`];
      if (breakpointUp && isWidthUp(breakpoint, width) || breakpointDown && isWidthDown(breakpoint, width)) {
        visible = false;
        break;
      }
    }
  }
  if (!visible) {
    return null;
  }
  return (0, import_jsx_runtime55.jsx)(React49.Fragment, {
    children
  });
}
true ? HiddenJs.propTypes = {
  /**
   * The content of the component.
   */
  children: import_prop_types41.default.node,
  /**
   * If `true`, screens this size and down are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  lgDown: import_prop_types41.default.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  lgUp: import_prop_types41.default.bool,
  /**
   * If `true`, screens this size and down are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  mdDown: import_prop_types41.default.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  mdUp: import_prop_types41.default.bool,
  /**
   * Hide the given breakpoint(s).
   */
  only: import_prop_types41.default.oneOfType([import_prop_types41.default.oneOf(["xs", "sm", "md", "lg", "xl"]), import_prop_types41.default.arrayOf(import_prop_types41.default.oneOf(["xs", "sm", "md", "lg", "xl"]))]),
  /**
   * If `true`, screens this size and down are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  smDown: import_prop_types41.default.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  smUp: import_prop_types41.default.bool,
  /**
   * @ignore
   * width prop provided by withWidth decorator.
   */
  width: import_prop_types41.default.string.isRequired,
  /**
   * If `true`, screens this size and down are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  xlDown: import_prop_types41.default.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  xlUp: import_prop_types41.default.bool,
  /**
   * If `true`, screens this size and down are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  xsDown: import_prop_types41.default.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  xsUp: import_prop_types41.default.bool
} : void 0;
if (true) {
  true ? HiddenJs.propTypes = exactProp(HiddenJs.propTypes) : void 0;
}
var HiddenJs_default = withWidth_default()(HiddenJs);

// node_modules/@mui/material/Hidden/HiddenCss.js
init_objectWithoutPropertiesLoose();
init_extends();
var React50 = __toESM(require_react());
init_clsx_m();
var import_prop_types42 = __toESM(require_prop_types());
init_base();
init_capitalize();
init_styled();

// node_modules/@mui/material/Hidden/hiddenCssClasses.js
init_esm();
init_generateUtilityClass();
function getHiddenCssUtilityClass(slot) {
  return generateUtilityClass("PrivateHiddenCss", slot);
}
var hiddenCssClasses = generateUtilityClasses("PrivateHiddenCss", ["root", "xlDown", "xlUp", "onlyXl", "lgDown", "lgUp", "onlyLg", "mdDown", "mdUp", "onlyMd", "smDown", "smUp", "onlySm", "xsDown", "xsUp", "onlyXs"]);

// node_modules/@mui/material/Hidden/HiddenCss.js
var import_jsx_runtime56 = __toESM(require_jsx_runtime());
var _excluded35 = ["children", "className", "only"];
var useUtilityClasses33 = (ownerState) => {
  const {
    classes: classes2,
    breakpoints
  } = ownerState;
  const slots = {
    root: ["root", ...breakpoints.map(({
      breakpoint,
      dir
    }) => {
      return dir === "only" ? `${dir}${capitalize_default(breakpoint)}` : `${breakpoint}${capitalize_default(dir)}`;
    })]
  };
  return composeClasses(slots, getHiddenCssUtilityClass, classes2);
};
var HiddenCssRoot = styled_default("div", {
  name: "PrivateHiddenCss",
  slot: "Root"
})(({
  theme,
  ownerState
}) => {
  const hidden = {
    display: "none"
  };
  return _extends({}, ownerState.breakpoints.map(({
    breakpoint,
    dir
  }) => {
    if (dir === "only") {
      return {
        [theme.breakpoints.only(breakpoint)]: hidden
      };
    }
    return dir === "up" ? {
      [theme.breakpoints.up(breakpoint)]: hidden
    } : {
      [theme.breakpoints.down(breakpoint)]: hidden
    };
  }).reduce((r, o) => {
    Object.keys(o).forEach((k2) => {
      r[k2] = o[k2];
    });
    return r;
  }, {}));
});
function HiddenCss(props) {
  const {
    children,
    className,
    only
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded35);
  const theme = useTheme();
  if (true) {
    const unknownProps = Object.keys(other).filter((propName) => {
      const isUndeclaredBreakpoint = !theme.breakpoints.keys.some((breakpoint) => {
        return `${breakpoint}Up` === propName || `${breakpoint}Down` === propName;
      });
      return !["classes", "theme", "isRtl", "sx"].includes(propName) && isUndeclaredBreakpoint;
    });
    if (unknownProps.length > 0) {
      console.error(`MUI: Unsupported props received by \`<Hidden implementation="css" />\`: ${unknownProps.join(", ")}. Did you forget to wrap this component in a ThemeProvider declaring these breakpoints?`);
    }
  }
  const breakpoints = [];
  for (let i = 0; i < theme.breakpoints.keys.length; i += 1) {
    const breakpoint = theme.breakpoints.keys[i];
    const breakpointUp = other[`${breakpoint}Up`];
    const breakpointDown = other[`${breakpoint}Down`];
    if (breakpointUp) {
      breakpoints.push({
        breakpoint,
        dir: "up"
      });
    }
    if (breakpointDown) {
      breakpoints.push({
        breakpoint,
        dir: "down"
      });
    }
  }
  if (only) {
    const onlyBreakpoints = Array.isArray(only) ? only : [only];
    onlyBreakpoints.forEach((breakpoint) => {
      breakpoints.push({
        breakpoint,
        dir: "only"
      });
    });
  }
  const ownerState = _extends({}, props, {
    breakpoints
  });
  const classes2 = useUtilityClasses33(ownerState);
  return (0, import_jsx_runtime56.jsx)(HiddenCssRoot, {
    className: clsx_m_default(classes2.root, className),
    ownerState,
    children
  });
}
true ? HiddenCss.propTypes = {
  /**
   * The content of the component.
   */
  children: import_prop_types42.default.node,
  /**
   * @ignore
   */
  className: import_prop_types42.default.string,
  /**
   * Specify which implementation to use.  'js' is the default, 'css' works better for
   * server-side rendering.
   */
  implementation: import_prop_types42.default.oneOf(["js", "css"]),
  /**
   * If `true`, screens this size and down are hidden.
   */
  lgDown: import_prop_types42.default.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  lgUp: import_prop_types42.default.bool,
  /**
   * If `true`, screens this size and down are hidden.
   */
  mdDown: import_prop_types42.default.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  mdUp: import_prop_types42.default.bool,
  /**
   * Hide the given breakpoint(s).
   */
  only: import_prop_types42.default.oneOfType([import_prop_types42.default.oneOf(["xs", "sm", "md", "lg", "xl"]), import_prop_types42.default.arrayOf(import_prop_types42.default.oneOf(["xs", "sm", "md", "lg", "xl"]))]),
  /**
   * If `true`, screens this size and down are hidden.
   */
  smDown: import_prop_types42.default.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  smUp: import_prop_types42.default.bool,
  /**
   * If `true`, screens this size and down are hidden.
   */
  xlDown: import_prop_types42.default.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  xlUp: import_prop_types42.default.bool,
  /**
   * If `true`, screens this size and down are hidden.
   */
  xsDown: import_prop_types42.default.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  xsUp: import_prop_types42.default.bool
} : void 0;
var HiddenCss_default = HiddenCss;

// node_modules/@mui/material/Hidden/Hidden.js
var import_jsx_runtime57 = __toESM(require_jsx_runtime());
var _excluded36 = ["implementation", "lgDown", "lgUp", "mdDown", "mdUp", "smDown", "smUp", "xlDown", "xlUp", "xsDown", "xsUp"];
function Hidden(props) {
  const {
    implementation = "js",
    lgDown = false,
    lgUp = false,
    mdDown = false,
    mdUp = false,
    smDown = false,
    smUp = false,
    xlDown = false,
    xlUp = false,
    xsDown = false,
    xsUp = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded36);
  if (implementation === "js") {
    return (0, import_jsx_runtime57.jsx)(HiddenJs_default, _extends({
      lgDown,
      lgUp,
      mdDown,
      mdUp,
      smDown,
      smUp,
      xlDown,
      xlUp,
      xsDown,
      xsUp
    }, other));
  }
  return (0, import_jsx_runtime57.jsx)(HiddenCss_default, _extends({
    lgDown,
    lgUp,
    mdDown,
    mdUp,
    smDown,
    smUp,
    xlDown,
    xlUp,
    xsDown,
    xsUp
  }, other));
}
true ? Hidden.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types43.default.node,
  /**
   * Specify which implementation to use.  'js' is the default, 'css' works better for
   * server-side rendering.
   * @default 'js'
   */
  implementation: import_prop_types43.default.oneOf(["css", "js"]),
  /**
   * You can use this prop when choosing the `js` implementation with server-side rendering.
   *
   * As `window.innerWidth` is unavailable on the server,
   * we default to rendering an empty component during the first mount.
   * You might want to use a heuristic to approximate
   * the screen width of the client browser screen width.
   *
   * For instance, you could be using the user-agent or the client-hints.
   * https://caniuse.com/#search=client%20hint
   */
  initialWidth: import_prop_types43.default.oneOf(["xs", "sm", "md", "lg", "xl"]),
  /**
   * If `true`, screens this size and down are hidden.
   * @default false
   */
  lgDown: import_prop_types43.default.bool,
  /**
   * If `true`, screens this size and up are hidden.
   * @default false
   */
  lgUp: import_prop_types43.default.bool,
  /**
   * If `true`, screens this size and down are hidden.
   * @default false
   */
  mdDown: import_prop_types43.default.bool,
  /**
   * If `true`, screens this size and up are hidden.
   * @default false
   */
  mdUp: import_prop_types43.default.bool,
  /**
   * Hide the given breakpoint(s).
   */
  only: import_prop_types43.default.oneOfType([import_prop_types43.default.oneOf(["xs", "sm", "md", "lg", "xl"]), import_prop_types43.default.arrayOf(import_prop_types43.default.oneOf(["xs", "sm", "md", "lg", "xl"]).isRequired)]),
  /**
   * If `true`, screens this size and down are hidden.
   * @default false
   */
  smDown: import_prop_types43.default.bool,
  /**
   * If `true`, screens this size and up are hidden.
   * @default false
   */
  smUp: import_prop_types43.default.bool,
  /**
   * If `true`, screens this size and down are hidden.
   * @default false
   */
  xlDown: import_prop_types43.default.bool,
  /**
   * If `true`, screens this size and up are hidden.
   * @default false
   */
  xlUp: import_prop_types43.default.bool,
  /**
   * If `true`, screens this size and down are hidden.
   * @default false
   */
  xsDown: import_prop_types43.default.bool,
  /**
   * If `true`, screens this size and up are hidden.
   * @default false
   */
  xsUp: import_prop_types43.default.bool
} : void 0;

// node_modules/@mui/material/Icon/Icon.js
init_extends();
init_objectWithoutPropertiesLoose();
var React52 = __toESM(require_react());
var import_prop_types44 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_styled();
init_useThemeProps();
init_capitalize();

// node_modules/@mui/material/Icon/iconClasses.js
init_esm();
init_generateUtilityClass();
function getIconUtilityClass(slot) {
  return generateUtilityClass("MuiIcon", slot);
}
var iconClasses = generateUtilityClasses("MuiIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);

// node_modules/@mui/material/Icon/Icon.js
var import_jsx_runtime58 = __toESM(require_jsx_runtime());
var _excluded37 = ["baseClassName", "className", "color", "component", "fontSize"];
var useUtilityClasses34 = (ownerState) => {
  const {
    color: color2,
    fontSize,
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root", color2 !== "inherit" && `color${capitalize_default(color2)}`, `fontSize${capitalize_default(fontSize)}`]
  };
  return composeClasses(slots, getIconUtilityClass, classes2);
};
var IconRoot = styled_default("span", {
  name: "MuiIcon",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, ownerState.color !== "inherit" && styles20[`color${capitalize_default(ownerState.color)}`], styles20[`fontSize${capitalize_default(ownerState.fontSize)}`]];
  }
})(({
  theme,
  ownerState
}) => ({
  userSelect: "none",
  width: "1em",
  height: "1em",
  // Chrome fix for https://bugs.chromium.org/p/chromium/issues/detail?id=820541
  // To remove at some point.
  overflow: "hidden",
  display: "inline-block",
  // allow overflow hidden to take action
  textAlign: "center",
  // support non-square icon
  flexShrink: 0,
  fontSize: {
    inherit: "inherit",
    small: theme.typography.pxToRem(20),
    medium: theme.typography.pxToRem(24),
    large: theme.typography.pxToRem(36)
  }[ownerState.fontSize],
  // TODO v5 deprecate, v6 remove for sx
  color: {
    primary: (theme.vars || theme).palette.primary.main,
    secondary: (theme.vars || theme).palette.secondary.main,
    info: (theme.vars || theme).palette.info.main,
    success: (theme.vars || theme).palette.success.main,
    warning: (theme.vars || theme).palette.warning.main,
    action: (theme.vars || theme).palette.action.active,
    error: (theme.vars || theme).palette.error.main,
    disabled: (theme.vars || theme).palette.action.disabled,
    inherit: void 0
  }[ownerState.color]
}));
var Icon = React52.forwardRef(function Icon2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiIcon"
  });
  const {
    baseClassName = "material-icons",
    className,
    color: color2 = "inherit",
    component: Component2 = "span",
    fontSize = "medium"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded37);
  const ownerState = _extends({}, props, {
    baseClassName,
    color: color2,
    component: Component2,
    fontSize
  });
  const classes2 = useUtilityClasses34(ownerState);
  return (0, import_jsx_runtime58.jsx)(IconRoot, _extends({
    as: Component2,
    className: clsx_m_default(
      baseClassName,
      // Prevent the translation of the text content.
      // The font relies on the exact text content to render the icon.
      "notranslate",
      classes2.root,
      className
    ),
    ownerState,
    "aria-hidden": true,
    ref
  }, other));
});
true ? Icon.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The base class applied to the icon. Defaults to 'material-icons', but can be changed to any
   * other base class that suits the icon font you're using (e.g. material-icons-rounded, fas, etc).
   * @default 'material-icons'
   */
  baseClassName: import_prop_types44.default.string,
  /**
   * The name of the icon font ligature.
   */
  children: import_prop_types44.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types44.default.object,
  /**
   * @ignore
   */
  className: import_prop_types44.default.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'inherit'
   */
  color: import_prop_types44.default.oneOfType([import_prop_types44.default.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), import_prop_types44.default.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types44.default.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: import_prop_types44.default.oneOfType([import_prop_types44.default.oneOf(["inherit", "large", "medium", "small"]), import_prop_types44.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types44.default.oneOfType([import_prop_types44.default.arrayOf(import_prop_types44.default.oneOfType([import_prop_types44.default.func, import_prop_types44.default.object, import_prop_types44.default.bool])), import_prop_types44.default.func, import_prop_types44.default.object])
} : void 0;
Icon.muiName = "Icon";

// node_modules/@mui/material/ImageListItem/ImageListItem.js
init_objectWithoutPropertiesLoose();
init_extends();
init_base();
init_esm();
init_clsx_m();
var import_prop_types45 = __toESM(require_prop_types());
var React53 = __toESM(require_react());
var import_react_is5 = __toESM(require_react_is());
init_styled();
init_useThemeProps();
init_isMuiElement();

// node_modules/@mui/material/ImageListItem/imageListItemClasses.js
init_esm();
init_generateUtilityClass();
function getImageListItemUtilityClass(slot) {
  return generateUtilityClass("MuiImageListItem", slot);
}
var imageListItemClasses = generateUtilityClasses("MuiImageListItem", ["root", "img", "standard", "woven", "masonry", "quilted"]);
var imageListItemClasses_default = imageListItemClasses;

// node_modules/@mui/material/ImageListItem/ImageListItem.js
var import_jsx_runtime59 = __toESM(require_jsx_runtime());
var _excluded38 = ["children", "className", "cols", "component", "rows", "style"];
var useUtilityClasses35 = (ownerState) => {
  const {
    classes: classes2,
    variant
  } = ownerState;
  const slots = {
    root: ["root", variant],
    img: ["img"]
  };
  return composeClasses(slots, getImageListItemUtilityClass, classes2);
};
var ImageListItemRoot = styled_default("li", {
  name: "MuiImageListItem",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [{
      [`& .${imageListItemClasses_default.img}`]: styles20.img
    }, styles20.root, styles20[ownerState.variant]];
  }
})(({
  ownerState
}) => _extends({
  display: "block",
  position: "relative"
}, ownerState.variant === "standard" && {
  // For titlebar under list item
  display: "flex",
  flexDirection: "column"
}, ownerState.variant === "woven" && {
  height: "100%",
  alignSelf: "center",
  "&:nth-of-type(even)": {
    height: "70%"
  }
}, {
  [`& .${imageListItemClasses_default.img}`]: _extends({
    objectFit: "cover",
    width: "100%",
    height: "100%",
    display: "block"
  }, ownerState.variant === "standard" && {
    height: "auto",
    flexGrow: 1
  })
}));
var ImageListItem = React53.forwardRef(function ImageListItem2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiImageListItem"
  });
  const {
    children,
    className,
    cols = 1,
    component = "li",
    rows = 1,
    style: style2
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded38);
  const {
    rowHeight = "auto",
    gap,
    variant
  } = React53.useContext(ImageListContext_default);
  let height = "auto";
  if (variant === "woven") {
    height = void 0;
  } else if (rowHeight !== "auto") {
    height = rowHeight * rows + gap * (rows - 1);
  }
  const ownerState = _extends({}, props, {
    cols,
    component,
    gap,
    rowHeight,
    rows,
    variant
  });
  const classes2 = useUtilityClasses35(ownerState);
  return (0, import_jsx_runtime59.jsx)(ImageListItemRoot, _extends({
    as: component,
    className: clsx_m_default(classes2.root, classes2[variant], className),
    ref,
    style: _extends({
      height,
      gridColumnEnd: variant !== "masonry" ? `span ${cols}` : void 0,
      gridRowEnd: variant !== "masonry" ? `span ${rows}` : void 0,
      marginBottom: variant === "masonry" ? gap : void 0
    }, style2),
    ownerState
  }, other, {
    children: React53.Children.map(children, (child) => {
      if (!React53.isValidElement(child)) {
        return null;
      }
      if (true) {
        if ((0, import_react_is5.isFragment)(child)) {
          console.error(["MUI: The ImageListItem component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join("\n"));
        }
      }
      if (child.type === "img" || isMuiElement_default(child, ["Image"])) {
        return React53.cloneElement(child, {
          className: clsx_m_default(classes2.img, child.props.className)
        });
      }
      return child;
    })
  }));
});
true ? ImageListItem.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component, normally an `<img>`.
   */
  children: import_prop_types45.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types45.default.object,
  /**
   * @ignore
   */
  className: import_prop_types45.default.string,
  /**
   * Width of the item in number of grid columns.
   * @default 1
   */
  cols: integerPropType_default,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types45.default.elementType,
  /**
   * Height of the item in number of grid rows.
   * @default 1
   */
  rows: integerPropType_default,
  /**
   * @ignore
   */
  style: import_prop_types45.default.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types45.default.oneOfType([import_prop_types45.default.arrayOf(import_prop_types45.default.oneOfType([import_prop_types45.default.func, import_prop_types45.default.object, import_prop_types45.default.bool])), import_prop_types45.default.func, import_prop_types45.default.object])
} : void 0;

// node_modules/@mui/material/ImageListItemBar/ImageListItemBar.js
init_objectWithoutPropertiesLoose();
init_extends();
init_base();
init_clsx_m();
var import_prop_types46 = __toESM(require_prop_types());
var React54 = __toESM(require_react());
init_styled();
init_useThemeProps();
init_capitalize();

// node_modules/@mui/material/ImageListItemBar/imageListItemBarClasses.js
init_esm();
init_generateUtilityClass();
function getImageListItemBarUtilityClass(slot) {
  return generateUtilityClass("MuiImageListItemBar", slot);
}
var imageListItemBarClasses = generateUtilityClasses("MuiImageListItemBar", ["root", "positionBottom", "positionTop", "positionBelow", "titleWrap", "titleWrapBottom", "titleWrapTop", "titleWrapBelow", "titleWrapActionPosLeft", "titleWrapActionPosRight", "title", "subtitle", "actionIcon", "actionIconActionPosLeft", "actionIconActionPosRight"]);

// node_modules/@mui/material/ImageListItemBar/ImageListItemBar.js
var import_jsx_runtime60 = __toESM(require_jsx_runtime());
var import_jsx_runtime61 = __toESM(require_jsx_runtime());
var _excluded39 = ["actionIcon", "actionPosition", "className", "subtitle", "title", "position"];
var useUtilityClasses36 = (ownerState) => {
  const {
    classes: classes2,
    position,
    actionIcon,
    actionPosition
  } = ownerState;
  const slots = {
    root: ["root", `position${capitalize_default(position)}`],
    titleWrap: ["titleWrap", `titleWrap${capitalize_default(position)}`, actionIcon && `titleWrapActionPos${capitalize_default(actionPosition)}`],
    title: ["title"],
    subtitle: ["subtitle"],
    actionIcon: ["actionIcon", `actionIconActionPos${capitalize_default(actionPosition)}`]
  };
  return composeClasses(slots, getImageListItemBarUtilityClass, classes2);
};
var ImageListItemBarRoot = styled_default("div", {
  name: "MuiImageListItemBar",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, styles20[`position${capitalize_default(ownerState.position)}`]];
  }
})(({
  theme,
  ownerState
}) => {
  return _extends({
    position: "absolute",
    left: 0,
    right: 0,
    background: "rgba(0, 0, 0, 0.5)",
    display: "flex",
    alignItems: "center",
    fontFamily: theme.typography.fontFamily
  }, ownerState.position === "bottom" && {
    bottom: 0
  }, ownerState.position === "top" && {
    top: 0
  }, ownerState.position === "below" && {
    position: "relative",
    background: "transparent",
    alignItems: "normal"
  });
});
var ImageListItemBarTitleWrap = styled_default("div", {
  name: "MuiImageListItemBar",
  slot: "TitleWrap",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.titleWrap, styles20[`titleWrap${capitalize_default(ownerState.position)}`], ownerState.actionIcon && styles20[`titleWrapActionPos${capitalize_default(ownerState.actionPosition)}`]];
  }
})(({
  theme,
  ownerState
}) => {
  return _extends({
    flexGrow: 1,
    padding: "12px 16px",
    color: (theme.vars || theme).palette.common.white,
    overflow: "hidden"
  }, ownerState.position === "below" && {
    padding: "6px 0 12px",
    color: "inherit"
  }, ownerState.actionIcon && ownerState.actionPosition === "left" && {
    paddingLeft: 0
  }, ownerState.actionIcon && ownerState.actionPosition === "right" && {
    paddingRight: 0
  });
});
var ImageListItemBarTitle = styled_default("div", {
  name: "MuiImageListItemBar",
  slot: "Title",
  overridesResolver: (props, styles20) => styles20.title
})(({
  theme
}) => {
  return {
    fontSize: theme.typography.pxToRem(16),
    lineHeight: "24px",
    textOverflow: "ellipsis",
    overflow: "hidden",
    whiteSpace: "nowrap"
  };
});
var ImageListItemBarSubtitle = styled_default("div", {
  name: "MuiImageListItemBar",
  slot: "Subtitle",
  overridesResolver: (props, styles20) => styles20.subtitle
})(({
  theme
}) => {
  return {
    fontSize: theme.typography.pxToRem(12),
    lineHeight: 1,
    textOverflow: "ellipsis",
    overflow: "hidden",
    whiteSpace: "nowrap"
  };
});
var ImageListItemBarActionIcon = styled_default("div", {
  name: "MuiImageListItemBar",
  slot: "ActionIcon",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.actionIcon, styles20[`actionIconActionPos${capitalize_default(ownerState.actionPosition)}`]];
  }
})(({
  ownerState
}) => {
  return _extends({}, ownerState.actionPosition === "left" && {
    order: -1
  });
});
var ImageListItemBar = React54.forwardRef(function ImageListItemBar2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiImageListItemBar"
  });
  const {
    actionIcon,
    actionPosition = "right",
    className,
    subtitle,
    title,
    position = "bottom"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded39);
  const ownerState = _extends({}, props, {
    position,
    actionPosition
  });
  const classes2 = useUtilityClasses36(ownerState);
  return (0, import_jsx_runtime61.jsxs)(ImageListItemBarRoot, _extends({
    ownerState,
    className: clsx_m_default(classes2.root, className),
    ref
  }, other, {
    children: [(0, import_jsx_runtime61.jsxs)(ImageListItemBarTitleWrap, {
      ownerState,
      className: classes2.titleWrap,
      children: [(0, import_jsx_runtime60.jsx)(ImageListItemBarTitle, {
        className: classes2.title,
        children: title
      }), subtitle ? (0, import_jsx_runtime60.jsx)(ImageListItemBarSubtitle, {
        className: classes2.subtitle,
        children: subtitle
      }) : null]
    }), actionIcon ? (0, import_jsx_runtime60.jsx)(ImageListItemBarActionIcon, {
      ownerState,
      className: classes2.actionIcon,
      children: actionIcon
    }) : null]
  }));
});
true ? ImageListItemBar.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * An IconButton element to be used as secondary action target
   * (primary action target is the item itself).
   */
  actionIcon: import_prop_types46.default.node,
  /**
   * Position of secondary action IconButton.
   * @default 'right'
   */
  actionPosition: import_prop_types46.default.oneOf(["left", "right"]),
  /**
   * @ignore
   */
  children: import_prop_types46.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types46.default.object,
  /**
   * @ignore
   */
  className: import_prop_types46.default.string,
  /**
   * Position of the title bar.
   * @default 'bottom'
   */
  position: import_prop_types46.default.oneOf(["below", "bottom", "top"]),
  /**
   * String or element serving as subtitle (support text).
   */
  subtitle: import_prop_types46.default.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types46.default.oneOfType([import_prop_types46.default.arrayOf(import_prop_types46.default.oneOfType([import_prop_types46.default.func, import_prop_types46.default.object, import_prop_types46.default.bool])), import_prop_types46.default.func, import_prop_types46.default.object]),
  /**
   * Title to be displayed.
   */
  title: import_prop_types46.default.node
} : void 0;

// node_modules/@mui/material/InputAdornment/InputAdornment.js
init_objectWithoutPropertiesLoose();
init_extends();
var React55 = __toESM(require_react());
var import_prop_types47 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_capitalize();
init_styled();

// node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js
init_esm();
init_generateUtilityClass();
function getInputAdornmentUtilityClass(slot) {
  return generateUtilityClass("MuiInputAdornment", slot);
}
var inputAdornmentClasses = generateUtilityClasses("MuiInputAdornment", ["root", "filled", "standard", "outlined", "positionStart", "positionEnd", "disablePointerEvents", "hiddenLabel", "sizeSmall"]);
var inputAdornmentClasses_default = inputAdornmentClasses;

// node_modules/@mui/material/InputAdornment/InputAdornment.js
init_useThemeProps();
var import_jsx_runtime62 = __toESM(require_jsx_runtime());
var import_jsx_runtime63 = __toESM(require_jsx_runtime());
var _span;
var _excluded40 = ["children", "className", "component", "disablePointerEvents", "disableTypography", "position", "variant"];
var overridesResolver3 = (props, styles20) => {
  const {
    ownerState
  } = props;
  return [styles20.root, styles20[`position${capitalize_default(ownerState.position)}`], ownerState.disablePointerEvents === true && styles20.disablePointerEvents, styles20[ownerState.variant]];
};
var useUtilityClasses37 = (ownerState) => {
  const {
    classes: classes2,
    disablePointerEvents,
    hiddenLabel,
    position,
    size,
    variant
  } = ownerState;
  const slots = {
    root: ["root", disablePointerEvents && "disablePointerEvents", position && `position${capitalize_default(position)}`, variant, hiddenLabel && "hiddenLabel", size && `size${capitalize_default(size)}`]
  };
  return composeClasses(slots, getInputAdornmentUtilityClass, classes2);
};
var InputAdornmentRoot = styled_default("div", {
  name: "MuiInputAdornment",
  slot: "Root",
  overridesResolver: overridesResolver3
})(({
  theme,
  ownerState
}) => _extends({
  display: "flex",
  height: "0.01em",
  // Fix IE11 flexbox alignment. To remove at some point.
  maxHeight: "2em",
  alignItems: "center",
  whiteSpace: "nowrap",
  color: (theme.vars || theme).palette.action.active
}, ownerState.variant === "filled" && {
  // Styles applied to the root element if `variant="filled"`.
  [`&.${inputAdornmentClasses_default.positionStart}&:not(.${inputAdornmentClasses_default.hiddenLabel})`]: {
    marginTop: 16
  }
}, ownerState.position === "start" && {
  // Styles applied to the root element if `position="start"`.
  marginRight: 8
}, ownerState.position === "end" && {
  // Styles applied to the root element if `position="end"`.
  marginLeft: 8
}, ownerState.disablePointerEvents === true && {
  // Styles applied to the root element if `disablePointerEvents={true}`.
  pointerEvents: "none"
}));
var InputAdornment = React55.forwardRef(function InputAdornment2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiInputAdornment"
  });
  const {
    children,
    className,
    component = "div",
    disablePointerEvents = false,
    disableTypography = false,
    position,
    variant: variantProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded40);
  const muiFormControl = useFormControl() || {};
  let variant = variantProp;
  if (variantProp && muiFormControl.variant) {
    if (true) {
      if (variantProp === muiFormControl.variant) {
        console.error("MUI: The `InputAdornment` variant infers the variant prop you do not have to provide one.");
      }
    }
  }
  if (muiFormControl && !variant) {
    variant = muiFormControl.variant;
  }
  const ownerState = _extends({}, props, {
    hiddenLabel: muiFormControl.hiddenLabel,
    size: muiFormControl.size,
    disablePointerEvents,
    position,
    variant
  });
  const classes2 = useUtilityClasses37(ownerState);
  return (0, import_jsx_runtime62.jsx)(FormControlContext_default.Provider, {
    value: null,
    children: (0, import_jsx_runtime62.jsx)(InputAdornmentRoot, _extends({
      as: component,
      ownerState,
      className: clsx_m_default(classes2.root, className),
      ref
    }, other, {
      children: typeof children === "string" && !disableTypography ? (0, import_jsx_runtime62.jsx)(Typography_default, {
        color: "text.secondary",
        children
      }) : (0, import_jsx_runtime63.jsxs)(React55.Fragment, {
        children: [position === "start" ? (
          /* notranslate needed while Google Translate will not fix zero-width space issue */
          _span || (_span = (0, import_jsx_runtime62.jsx)("span", {
            className: "notranslate",
            children: "​"
          }))
        ) : null, children]
      })
    }))
  });
});
true ? InputAdornment.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component, normally an `IconButton` or string.
   */
  children: import_prop_types47.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types47.default.object,
  /**
   * @ignore
   */
  className: import_prop_types47.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types47.default.elementType,
  /**
   * Disable pointer events on the root.
   * This allows for the content of the adornment to focus the `input` on click.
   * @default false
   */
  disablePointerEvents: import_prop_types47.default.bool,
  /**
   * If children is a string then disable wrapping in a Typography component.
   * @default false
   */
  disableTypography: import_prop_types47.default.bool,
  /**
   * The position this adornment should appear relative to the `Input`.
   */
  position: import_prop_types47.default.oneOf(["end", "start"]).isRequired,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types47.default.oneOfType([import_prop_types47.default.arrayOf(import_prop_types47.default.oneOfType([import_prop_types47.default.func, import_prop_types47.default.object, import_prop_types47.default.bool])), import_prop_types47.default.func, import_prop_types47.default.object]),
  /**
   * The variant to use.
   * Note: If you are using the `TextField` component or the `FormControl` component
   * you do not have to set this manually.
   */
  variant: import_prop_types47.default.oneOf(["filled", "outlined", "standard"])
} : void 0;

// node_modules/@mui/material/LinearProgress/LinearProgress.js
init_objectWithoutPropertiesLoose();
init_extends();
var React56 = __toESM(require_react());
var import_prop_types48 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_esm2();
init_capitalize();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/LinearProgress/linearProgressClasses.js
init_esm();
init_generateUtilityClass();
function getLinearProgressUtilityClass(slot) {
  return generateUtilityClass("MuiLinearProgress", slot);
}
var linearProgressClasses = generateUtilityClasses("MuiLinearProgress", ["root", "colorPrimary", "colorSecondary", "determinate", "indeterminate", "buffer", "query", "dashed", "dashedColorPrimary", "dashedColorSecondary", "bar", "barColorPrimary", "barColorSecondary", "bar1Indeterminate", "bar1Determinate", "bar1Buffer", "bar2Indeterminate", "bar2Buffer"]);

// node_modules/@mui/material/LinearProgress/LinearProgress.js
var import_jsx_runtime64 = __toESM(require_jsx_runtime());
var import_jsx_runtime65 = __toESM(require_jsx_runtime());
var _excluded41 = ["className", "color", "value", "valueBuffer", "variant"];
var _2 = (t) => t;
var _t5;
var _t22;
var _t32;
var _t42;
var _t52;
var _t6;
var TRANSITION_DURATION = 4;
var indeterminate1Keyframe = keyframes(_t5 || (_t5 = _2`
  0% {
    left: -35%;
    right: 100%;
  }

  60% {
    left: 100%;
    right: -90%;
  }

  100% {
    left: 100%;
    right: -90%;
  }
`));
var indeterminate2Keyframe = keyframes(_t22 || (_t22 = _2`
  0% {
    left: -200%;
    right: 100%;
  }

  60% {
    left: 107%;
    right: -8%;
  }

  100% {
    left: 107%;
    right: -8%;
  }
`));
var bufferKeyframe = keyframes(_t32 || (_t32 = _2`
  0% {
    opacity: 1;
    background-position: 0 -23px;
  }

  60% {
    opacity: 0;
    background-position: 0 -23px;
  }

  100% {
    opacity: 1;
    background-position: -200px -23px;
  }
`));
var useUtilityClasses38 = (ownerState) => {
  const {
    classes: classes2,
    variant,
    color: color2
  } = ownerState;
  const slots = {
    root: ["root", `color${capitalize_default(color2)}`, variant],
    dashed: ["dashed", `dashedColor${capitalize_default(color2)}`],
    bar1: ["bar", `barColor${capitalize_default(color2)}`, (variant === "indeterminate" || variant === "query") && "bar1Indeterminate", variant === "determinate" && "bar1Determinate", variant === "buffer" && "bar1Buffer"],
    bar2: ["bar", variant !== "buffer" && `barColor${capitalize_default(color2)}`, variant === "buffer" && `color${capitalize_default(color2)}`, (variant === "indeterminate" || variant === "query") && "bar2Indeterminate", variant === "buffer" && "bar2Buffer"]
  };
  return composeClasses(slots, getLinearProgressUtilityClass, classes2);
};
var getColorShade = (theme, color2) => {
  if (color2 === "inherit") {
    return "currentColor";
  }
  if (theme.vars) {
    return theme.vars.palette.LinearProgress[`${color2}Bg`];
  }
  return theme.palette.mode === "light" ? lighten(theme.palette[color2].main, 0.62) : darken(theme.palette[color2].main, 0.5);
};
var LinearProgressRoot = styled_default("span", {
  name: "MuiLinearProgress",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, styles20[`color${capitalize_default(ownerState.color)}`], styles20[ownerState.variant]];
  }
})(({
  ownerState,
  theme
}) => _extends({
  position: "relative",
  overflow: "hidden",
  display: "block",
  height: 4,
  zIndex: 0,
  // Fix Safari's bug during composition of different paint.
  "@media print": {
    colorAdjust: "exact"
  },
  backgroundColor: getColorShade(theme, ownerState.color)
}, ownerState.color === "inherit" && ownerState.variant !== "buffer" && {
  backgroundColor: "none",
  "&::before": {
    content: '""',
    position: "absolute",
    left: 0,
    top: 0,
    right: 0,
    bottom: 0,
    backgroundColor: "currentColor",
    opacity: 0.3
  }
}, ownerState.variant === "buffer" && {
  backgroundColor: "transparent"
}, ownerState.variant === "query" && {
  transform: "rotate(180deg)"
}));
var LinearProgressDashed = styled_default("span", {
  name: "MuiLinearProgress",
  slot: "Dashed",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.dashed, styles20[`dashedColor${capitalize_default(ownerState.color)}`]];
  }
})(({
  ownerState,
  theme
}) => {
  const backgroundColor = getColorShade(theme, ownerState.color);
  return _extends({
    position: "absolute",
    marginTop: 0,
    height: "100%",
    width: "100%"
  }, ownerState.color === "inherit" && {
    opacity: 0.3
  }, {
    backgroundImage: `radial-gradient(${backgroundColor} 0%, ${backgroundColor} 16%, transparent 42%)`,
    backgroundSize: "10px 10px",
    backgroundPosition: "0 -23px"
  });
}, css(_t42 || (_t42 = _2`
    animation: ${0} 3s infinite linear;
  `), bufferKeyframe));
var LinearProgressBar1 = styled_default("span", {
  name: "MuiLinearProgress",
  slot: "Bar1",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.bar, styles20[`barColor${capitalize_default(ownerState.color)}`], (ownerState.variant === "indeterminate" || ownerState.variant === "query") && styles20.bar1Indeterminate, ownerState.variant === "determinate" && styles20.bar1Determinate, ownerState.variant === "buffer" && styles20.bar1Buffer];
  }
})(({
  ownerState,
  theme
}) => _extends({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  backgroundColor: ownerState.color === "inherit" ? "currentColor" : (theme.vars || theme).palette[ownerState.color].main
}, ownerState.variant === "determinate" && {
  transition: `transform .${TRANSITION_DURATION}s linear`
}, ownerState.variant === "buffer" && {
  zIndex: 1,
  transition: `transform .${TRANSITION_DURATION}s linear`
}), ({
  ownerState
}) => (ownerState.variant === "indeterminate" || ownerState.variant === "query") && css(_t52 || (_t52 = _2`
      width: auto;
      animation: ${0} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
    `), indeterminate1Keyframe));
var LinearProgressBar2 = styled_default("span", {
  name: "MuiLinearProgress",
  slot: "Bar2",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.bar, styles20[`barColor${capitalize_default(ownerState.color)}`], (ownerState.variant === "indeterminate" || ownerState.variant === "query") && styles20.bar2Indeterminate, ownerState.variant === "buffer" && styles20.bar2Buffer];
  }
})(({
  ownerState,
  theme
}) => _extends({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left"
}, ownerState.variant !== "buffer" && {
  backgroundColor: ownerState.color === "inherit" ? "currentColor" : (theme.vars || theme).palette[ownerState.color].main
}, ownerState.color === "inherit" && {
  opacity: 0.3
}, ownerState.variant === "buffer" && {
  backgroundColor: getColorShade(theme, ownerState.color),
  transition: `transform .${TRANSITION_DURATION}s linear`
}), ({
  ownerState
}) => (ownerState.variant === "indeterminate" || ownerState.variant === "query") && css(_t6 || (_t6 = _2`
      width: auto;
      animation: ${0} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;
    `), indeterminate2Keyframe));
var LinearProgress = React56.forwardRef(function LinearProgress2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiLinearProgress"
  });
  const {
    className,
    color: color2 = "primary",
    value,
    valueBuffer,
    variant = "indeterminate"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded41);
  const ownerState = _extends({}, props, {
    color: color2,
    variant
  });
  const classes2 = useUtilityClasses38(ownerState);
  const theme = useTheme();
  const rootProps = {};
  const inlineStyles = {
    bar1: {},
    bar2: {}
  };
  if (variant === "determinate" || variant === "buffer") {
    if (value !== void 0) {
      rootProps["aria-valuenow"] = Math.round(value);
      rootProps["aria-valuemin"] = 0;
      rootProps["aria-valuemax"] = 100;
      let transform = value - 100;
      if (theme.direction === "rtl") {
        transform = -transform;
      }
      inlineStyles.bar1.transform = `translateX(${transform}%)`;
    } else if (true) {
      console.error("MUI: You need to provide a value prop when using the determinate or buffer variant of LinearProgress .");
    }
  }
  if (variant === "buffer") {
    if (valueBuffer !== void 0) {
      let transform = (valueBuffer || 0) - 100;
      if (theme.direction === "rtl") {
        transform = -transform;
      }
      inlineStyles.bar2.transform = `translateX(${transform}%)`;
    } else if (true) {
      console.error("MUI: You need to provide a valueBuffer prop when using the buffer variant of LinearProgress.");
    }
  }
  return (0, import_jsx_runtime65.jsxs)(LinearProgressRoot, _extends({
    className: clsx_m_default(classes2.root, className),
    ownerState,
    role: "progressbar"
  }, rootProps, {
    ref
  }, other, {
    children: [variant === "buffer" ? (0, import_jsx_runtime64.jsx)(LinearProgressDashed, {
      className: classes2.dashed,
      ownerState
    }) : null, (0, import_jsx_runtime64.jsx)(LinearProgressBar1, {
      className: classes2.bar1,
      ownerState,
      style: inlineStyles.bar1
    }), variant === "determinate" ? null : (0, import_jsx_runtime64.jsx)(LinearProgressBar2, {
      className: classes2.bar2,
      ownerState,
      style: inlineStyles.bar2
    })]
  }));
});
true ? LinearProgress.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types48.default.object,
  /**
   * @ignore
   */
  className: import_prop_types48.default.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'primary'
   */
  color: import_prop_types48.default.oneOfType([import_prop_types48.default.oneOf(["inherit", "primary", "secondary"]), import_prop_types48.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types48.default.oneOfType([import_prop_types48.default.arrayOf(import_prop_types48.default.oneOfType([import_prop_types48.default.func, import_prop_types48.default.object, import_prop_types48.default.bool])), import_prop_types48.default.func, import_prop_types48.default.object]),
  /**
   * The value of the progress indicator for the determinate and buffer variants.
   * Value between 0 and 100.
   */
  value: import_prop_types48.default.number,
  /**
   * The value for the buffer variant.
   * Value between 0 and 100.
   */
  valueBuffer: import_prop_types48.default.number,
  /**
   * The variant to use.
   * Use indeterminate or query when there is no progress value.
   * @default 'indeterminate'
   */
  variant: import_prop_types48.default.oneOf(["buffer", "determinate", "indeterminate", "query"])
} : void 0;
var LinearProgress_default = LinearProgress;

// node_modules/@mui/material/Link/Link.js
init_objectWithoutPropertiesLoose();
init_extends();
var React57 = __toESM(require_react());
var import_prop_types49 = __toESM(require_prop_types());
init_clsx_m();
init_esm();
init_base();
init_capitalize();
init_styled();
init_useThemeProps();
init_useIsFocusVisible();
init_useForkRef();

// node_modules/@mui/material/Link/linkClasses.js
init_esm();
init_generateUtilityClass();
function getLinkUtilityClass(slot) {
  return generateUtilityClass("MuiLink", slot);
}
var linkClasses = generateUtilityClasses("MuiLink", ["root", "underlineNone", "underlineHover", "underlineAlways", "button", "focusVisible"]);
var linkClasses_default = linkClasses;

// node_modules/@mui/material/Link/getTextDecoration.js
init_esm2();
var colorTransformations = {
  primary: "primary.main",
  textPrimary: "text.primary",
  secondary: "secondary.main",
  textSecondary: "text.secondary",
  error: "error.main"
};
var transformDeprecatedColors = (color2) => {
  return colorTransformations[color2] || color2;
};
var getTextDecoration = ({
  theme,
  ownerState
}) => {
  const transformedColor = transformDeprecatedColors(ownerState.color);
  const color2 = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;
  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);
  if ("vars" in theme && channelColor) {
    return `rgba(${channelColor} / 0.4)`;
  }
  return alpha(color2, 0.4);
};
var getTextDecoration_default = getTextDecoration;

// node_modules/@mui/material/Link/Link.js
var import_jsx_runtime66 = __toESM(require_jsx_runtime());
var _excluded42 = ["className", "color", "component", "onBlur", "onFocus", "TypographyClasses", "underline", "variant", "sx"];
var useUtilityClasses39 = (ownerState) => {
  const {
    classes: classes2,
    component,
    focusVisible,
    underline
  } = ownerState;
  const slots = {
    root: ["root", `underline${capitalize_default(underline)}`, component === "button" && "button", focusVisible && "focusVisible"]
  };
  return composeClasses(slots, getLinkUtilityClass, classes2);
};
var LinkRoot = styled_default(Typography_default, {
  name: "MuiLink",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, styles20[`underline${capitalize_default(ownerState.underline)}`], ownerState.component === "button" && styles20.button];
  }
})(({
  theme,
  ownerState
}) => {
  return _extends({}, ownerState.underline === "none" && {
    textDecoration: "none"
  }, ownerState.underline === "hover" && {
    textDecoration: "none",
    "&:hover": {
      textDecoration: "underline"
    }
  }, ownerState.underline === "always" && _extends({
    textDecoration: "underline"
  }, ownerState.color !== "inherit" && {
    textDecorationColor: getTextDecoration_default({
      theme,
      ownerState
    })
  }, {
    "&:hover": {
      textDecorationColor: "inherit"
    }
  }), ownerState.component === "button" && {
    position: "relative",
    WebkitTapHighlightColor: "transparent",
    backgroundColor: "transparent",
    // Reset default value
    // We disable the focus ring for mouse, touch and keyboard users.
    outline: 0,
    border: 0,
    margin: 0,
    // Remove the margin in Safari
    borderRadius: 0,
    padding: 0,
    // Remove the padding in Firefox
    cursor: "pointer",
    userSelect: "none",
    verticalAlign: "middle",
    MozAppearance: "none",
    // Reset
    WebkitAppearance: "none",
    // Reset
    "&::-moz-focus-inner": {
      borderStyle: "none"
      // Remove Firefox dotted outline.
    },
    [`&.${linkClasses_default.focusVisible}`]: {
      outline: "auto"
    }
  });
});
var Link = React57.forwardRef(function Link2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiLink"
  });
  const {
    className,
    color: color2 = "primary",
    component = "a",
    onBlur,
    onFocus,
    TypographyClasses,
    underline = "always",
    variant = "inherit",
    sx
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded42);
  const {
    isFocusVisibleRef,
    onBlur: handleBlurVisible,
    onFocus: handleFocusVisible,
    ref: focusVisibleRef
  } = useIsFocusVisible_default();
  const [focusVisible, setFocusVisible] = React57.useState(false);
  const handlerRef = useForkRef_default(ref, focusVisibleRef);
  const handleBlur = (event) => {
    handleBlurVisible(event);
    if (isFocusVisibleRef.current === false) {
      setFocusVisible(false);
    }
    if (onBlur) {
      onBlur(event);
    }
  };
  const handleFocus = (event) => {
    handleFocusVisible(event);
    if (isFocusVisibleRef.current === true) {
      setFocusVisible(true);
    }
    if (onFocus) {
      onFocus(event);
    }
  };
  const ownerState = _extends({}, props, {
    color: color2,
    component,
    focusVisible,
    underline,
    variant
  });
  const classes2 = useUtilityClasses39(ownerState);
  return (0, import_jsx_runtime66.jsx)(LinkRoot, _extends({
    color: color2,
    className: clsx_m_default(classes2.root, className),
    classes: TypographyClasses,
    component,
    onBlur: handleBlur,
    onFocus: handleFocus,
    ref: handlerRef,
    ownerState,
    variant,
    sx: [...!Object.keys(colorTransformations).includes(color2) ? [{
      color: color2
    }] : [], ...Array.isArray(sx) ? sx : [sx]]
  }, other));
});
true ? Link.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types49.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types49.default.object,
  /**
   * @ignore
   */
  className: import_prop_types49.default.string,
  /**
   * The color of the link.
   * @default 'primary'
   */
  color: import_prop_types49.default.any,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: elementTypeAcceptingRef_default,
  /**
   * @ignore
   */
  onBlur: import_prop_types49.default.func,
  /**
   * @ignore
   */
  onFocus: import_prop_types49.default.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types49.default.oneOfType([import_prop_types49.default.arrayOf(import_prop_types49.default.oneOfType([import_prop_types49.default.func, import_prop_types49.default.object, import_prop_types49.default.bool])), import_prop_types49.default.func, import_prop_types49.default.object]),
  /**
   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.
   */
  TypographyClasses: import_prop_types49.default.object,
  /**
   * Controls when the link should have an underline.
   * @default 'always'
   */
  underline: import_prop_types49.default.oneOf(["always", "hover", "none"]),
  /**
   * Applies the theme typography styles.
   * @default 'inherit'
   */
  variant: import_prop_types49.default.oneOfType([import_prop_types49.default.oneOf(["body1", "body2", "button", "caption", "h1", "h2", "h3", "h4", "h5", "h6", "inherit", "overline", "subtitle1", "subtitle2"]), import_prop_types49.default.string])
} : void 0;

// node_modules/@mui/material/ListItem/ListItem.js
init_objectWithoutPropertiesLoose();
init_extends();
var React60 = __toESM(require_react());
var import_prop_types52 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_esm();
init_esm2();
init_styled();
init_useThemeProps();
init_isMuiElement();
init_useEnhancedEffect();
init_useForkRef();

// node_modules/@mui/material/ListItem/listItemClasses.js
init_esm();
init_generateUtilityClass();
function getListItemUtilityClass(slot) {
  return generateUtilityClass("MuiListItem", slot);
}
var listItemClasses = generateUtilityClasses("MuiListItem", ["root", "container", "focusVisible", "dense", "alignItemsFlexStart", "disabled", "divider", "gutters", "padding", "button", "secondaryAction", "selected"]);
var listItemClasses_default = listItemClasses;

// node_modules/@mui/material/ListItemButton/ListItemButton.js
init_objectWithoutPropertiesLoose();
init_extends();
var React58 = __toESM(require_react());
var import_prop_types50 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_esm2();
init_styled();
init_useThemeProps();
init_useEnhancedEffect();
init_useForkRef();

// node_modules/@mui/material/ListItemButton/listItemButtonClasses.js
init_esm();
init_generateUtilityClass();
function getListItemButtonUtilityClass(slot) {
  return generateUtilityClass("MuiListItemButton", slot);
}
var listItemButtonClasses = generateUtilityClasses("MuiListItemButton", ["root", "focusVisible", "dense", "alignItemsFlexStart", "disabled", "divider", "gutters", "selected"]);
var listItemButtonClasses_default = listItemButtonClasses;

// node_modules/@mui/material/ListItemButton/ListItemButton.js
var import_jsx_runtime67 = __toESM(require_jsx_runtime());
var _excluded43 = ["alignItems", "autoFocus", "component", "children", "dense", "disableGutters", "divider", "focusVisibleClassName", "selected", "className"];
var overridesResolver4 = (props, styles20) => {
  const {
    ownerState
  } = props;
  return [styles20.root, ownerState.dense && styles20.dense, ownerState.alignItems === "flex-start" && styles20.alignItemsFlexStart, ownerState.divider && styles20.divider, !ownerState.disableGutters && styles20.gutters];
};
var useUtilityClasses40 = (ownerState) => {
  const {
    alignItems,
    classes: classes2,
    dense,
    disabled,
    disableGutters,
    divider,
    selected
  } = ownerState;
  const slots = {
    root: ["root", dense && "dense", !disableGutters && "gutters", divider && "divider", disabled && "disabled", alignItems === "flex-start" && "alignItemsFlexStart", selected && "selected"]
  };
  const composedClasses = composeClasses(slots, getListItemButtonUtilityClass, classes2);
  return _extends({}, classes2, composedClasses);
};
var ListItemButtonRoot = styled_default(ButtonBase_default, {
  shouldForwardProp: (prop) => rootShouldForwardProp(prop) || prop === "classes",
  name: "MuiListItemButton",
  slot: "Root",
  overridesResolver: overridesResolver4
})(({
  theme,
  ownerState
}) => _extends({
  display: "flex",
  flexGrow: 1,
  justifyContent: "flex-start",
  alignItems: "center",
  position: "relative",
  textDecoration: "none",
  minWidth: 0,
  boxSizing: "border-box",
  textAlign: "left",
  paddingTop: 8,
  paddingBottom: 8,
  transition: theme.transitions.create("background-color", {
    duration: theme.transitions.duration.shortest
  }),
  "&:hover": {
    textDecoration: "none",
    backgroundColor: (theme.vars || theme).palette.action.hover,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  [`&.${listItemButtonClasses_default.selected}`]: {
    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),
    [`&.${listItemButtonClasses_default.focusVisible}`]: {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)
    }
  },
  [`&.${listItemButtonClasses_default.selected}:hover`]: {
    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)
    }
  },
  [`&.${listItemButtonClasses_default.focusVisible}`]: {
    backgroundColor: (theme.vars || theme).palette.action.focus
  },
  [`&.${listItemButtonClasses_default.disabled}`]: {
    opacity: (theme.vars || theme).palette.action.disabledOpacity
  }
}, ownerState.divider && {
  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,
  backgroundClip: "padding-box"
}, ownerState.alignItems === "flex-start" && {
  alignItems: "flex-start"
}, !ownerState.disableGutters && {
  paddingLeft: 16,
  paddingRight: 16
}, ownerState.dense && {
  paddingTop: 4,
  paddingBottom: 4
}));
var ListItemButton = React58.forwardRef(function ListItemButton2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiListItemButton"
  });
  const {
    alignItems = "center",
    autoFocus = false,
    component = "div",
    children,
    dense = false,
    disableGutters = false,
    divider = false,
    focusVisibleClassName,
    selected = false,
    className
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded43);
  const context = React58.useContext(ListContext_default);
  const childContext = React58.useMemo(() => ({
    dense: dense || context.dense || false,
    alignItems,
    disableGutters
  }), [alignItems, context.dense, dense, disableGutters]);
  const listItemRef = React58.useRef(null);
  useEnhancedEffect_default(() => {
    if (autoFocus) {
      if (listItemRef.current) {
        listItemRef.current.focus();
      } else if (true) {
        console.error("MUI: Unable to set focus to a ListItemButton whose component has not been rendered.");
      }
    }
  }, [autoFocus]);
  const ownerState = _extends({}, props, {
    alignItems,
    dense: childContext.dense,
    disableGutters,
    divider,
    selected
  });
  const classes2 = useUtilityClasses40(ownerState);
  const handleRef = useForkRef_default(listItemRef, ref);
  return (0, import_jsx_runtime67.jsx)(ListContext_default.Provider, {
    value: childContext,
    children: (0, import_jsx_runtime67.jsx)(ListItemButtonRoot, _extends({
      ref: handleRef,
      href: other.href || other.to,
      component: (other.href || other.to) && component === "div" ? "a" : component,
      focusVisibleClassName: clsx_m_default(classes2.focusVisible, focusVisibleClassName),
      ownerState,
      className: clsx_m_default(classes2.root, className)
    }, other, {
      classes: classes2,
      children
    }))
  });
});
true ? ListItemButton.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Defines the `align-items` style property.
   * @default 'center'
   */
  alignItems: import_prop_types50.default.oneOf(["center", "flex-start"]),
  /**
   * If `true`, the list item is focused during the first mount.
   * Focus will also be triggered if the value changes from false to true.
   * @default false
   */
  autoFocus: import_prop_types50.default.bool,
  /**
   * The content of the component if a `ListItemSecondaryAction` is used it must
   * be the last child.
   */
  children: import_prop_types50.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types50.default.object,
  /**
   * @ignore
   */
  className: import_prop_types50.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types50.default.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used.
   * The prop defaults to the value inherited from the parent List component.
   * @default false
   */
  dense: import_prop_types50.default.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types50.default.bool,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: import_prop_types50.default.bool,
  /**
   * If `true`, a 1px light border is added to the bottom of the list item.
   * @default false
   */
  divider: import_prop_types50.default.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: import_prop_types50.default.string,
  /**
   * @ignore
   */
  href: import_prop_types50.default.string,
  /**
   * Use to apply selected styling.
   * @default false
   */
  selected: import_prop_types50.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types50.default.oneOfType([import_prop_types50.default.arrayOf(import_prop_types50.default.oneOfType([import_prop_types50.default.func, import_prop_types50.default.object, import_prop_types50.default.bool])), import_prop_types50.default.func, import_prop_types50.default.object])
} : void 0;

// node_modules/@mui/material/ListItemSecondaryAction/ListItemSecondaryAction.js
init_objectWithoutPropertiesLoose();
init_extends();
var React59 = __toESM(require_react());
var import_prop_types51 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/ListItemSecondaryAction/listItemSecondaryActionClasses.js
init_esm();
init_generateUtilityClass();
function getListItemSecondaryActionClassesUtilityClass(slot) {
  return generateUtilityClass("MuiListItemSecondaryAction", slot);
}
var listItemSecondaryActionClasses = generateUtilityClasses("MuiListItemSecondaryAction", ["root", "disableGutters"]);

// node_modules/@mui/material/ListItemSecondaryAction/ListItemSecondaryAction.js
var import_jsx_runtime68 = __toESM(require_jsx_runtime());
var _excluded44 = ["className"];
var useUtilityClasses41 = (ownerState) => {
  const {
    disableGutters,
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root", disableGutters && "disableGutters"]
  };
  return composeClasses(slots, getListItemSecondaryActionClassesUtilityClass, classes2);
};
var ListItemSecondaryActionRoot = styled_default("div", {
  name: "MuiListItemSecondaryAction",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, ownerState.disableGutters && styles20.disableGutters];
  }
})(({
  ownerState
}) => _extends({
  position: "absolute",
  right: 16,
  top: "50%",
  transform: "translateY(-50%)"
}, ownerState.disableGutters && {
  right: 0
}));
var ListItemSecondaryAction = React59.forwardRef(function ListItemSecondaryAction2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiListItemSecondaryAction"
  });
  const {
    className
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded44);
  const context = React59.useContext(ListContext_default);
  const ownerState = _extends({}, props, {
    disableGutters: context.disableGutters
  });
  const classes2 = useUtilityClasses41(ownerState);
  return (0, import_jsx_runtime68.jsx)(ListItemSecondaryActionRoot, _extends({
    className: clsx_m_default(classes2.root, className),
    ownerState,
    ref
  }, other));
});
true ? ListItemSecondaryAction.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component, normally an `IconButton` or selection control.
   */
  children: import_prop_types51.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types51.default.object,
  /**
   * @ignore
   */
  className: import_prop_types51.default.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types51.default.oneOfType([import_prop_types51.default.arrayOf(import_prop_types51.default.oneOfType([import_prop_types51.default.func, import_prop_types51.default.object, import_prop_types51.default.bool])), import_prop_types51.default.func, import_prop_types51.default.object])
} : void 0;
ListItemSecondaryAction.muiName = "ListItemSecondaryAction";
var ListItemSecondaryAction_default = ListItemSecondaryAction;

// node_modules/@mui/material/ListItem/ListItem.js
var import_jsx_runtime69 = __toESM(require_jsx_runtime());
var import_jsx_runtime70 = __toESM(require_jsx_runtime());
var _excluded45 = ["className"];
var _excluded211 = ["alignItems", "autoFocus", "button", "children", "className", "component", "components", "componentsProps", "ContainerComponent", "ContainerProps", "dense", "disabled", "disableGutters", "disablePadding", "divider", "focusVisibleClassName", "secondaryAction", "selected", "slotProps", "slots"];
var overridesResolver5 = (props, styles20) => {
  const {
    ownerState
  } = props;
  return [styles20.root, ownerState.dense && styles20.dense, ownerState.alignItems === "flex-start" && styles20.alignItemsFlexStart, ownerState.divider && styles20.divider, !ownerState.disableGutters && styles20.gutters, !ownerState.disablePadding && styles20.padding, ownerState.button && styles20.button, ownerState.hasSecondaryAction && styles20.secondaryAction];
};
var useUtilityClasses42 = (ownerState) => {
  const {
    alignItems,
    button,
    classes: classes2,
    dense,
    disabled,
    disableGutters,
    disablePadding,
    divider,
    hasSecondaryAction,
    selected
  } = ownerState;
  const slots = {
    root: ["root", dense && "dense", !disableGutters && "gutters", !disablePadding && "padding", divider && "divider", disabled && "disabled", button && "button", alignItems === "flex-start" && "alignItemsFlexStart", hasSecondaryAction && "secondaryAction", selected && "selected"],
    container: ["container"]
  };
  return composeClasses(slots, getListItemUtilityClass, classes2);
};
var ListItemRoot = styled_default("div", {
  name: "MuiListItem",
  slot: "Root",
  overridesResolver: overridesResolver5
})(({
  theme,
  ownerState
}) => _extends({
  display: "flex",
  justifyContent: "flex-start",
  alignItems: "center",
  position: "relative",
  textDecoration: "none",
  width: "100%",
  boxSizing: "border-box",
  textAlign: "left"
}, !ownerState.disablePadding && _extends({
  paddingTop: 8,
  paddingBottom: 8
}, ownerState.dense && {
  paddingTop: 4,
  paddingBottom: 4
}, !ownerState.disableGutters && {
  paddingLeft: 16,
  paddingRight: 16
}, !!ownerState.secondaryAction && {
  // Add some space to avoid collision as `ListItemSecondaryAction`
  // is absolutely positioned.
  paddingRight: 48
}), !!ownerState.secondaryAction && {
  [`& > .${listItemButtonClasses_default.root}`]: {
    paddingRight: 48
  }
}, {
  [`&.${listItemClasses_default.focusVisible}`]: {
    backgroundColor: (theme.vars || theme).palette.action.focus
  },
  [`&.${listItemClasses_default.selected}`]: {
    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),
    [`&.${listItemClasses_default.focusVisible}`]: {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)
    }
  },
  [`&.${listItemClasses_default.disabled}`]: {
    opacity: (theme.vars || theme).palette.action.disabledOpacity
  }
}, ownerState.alignItems === "flex-start" && {
  alignItems: "flex-start"
}, ownerState.divider && {
  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,
  backgroundClip: "padding-box"
}, ownerState.button && {
  transition: theme.transitions.create("background-color", {
    duration: theme.transitions.duration.shortest
  }),
  "&:hover": {
    textDecoration: "none",
    backgroundColor: (theme.vars || theme).palette.action.hover,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  [`&.${listItemClasses_default.selected}:hover`]: {
    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)
    }
  }
}, ownerState.hasSecondaryAction && {
  // Add some space to avoid collision as `ListItemSecondaryAction`
  // is absolutely positioned.
  paddingRight: 48
}));
var ListItemContainer = styled_default("li", {
  name: "MuiListItem",
  slot: "Container",
  overridesResolver: (props, styles20) => styles20.container
})({
  position: "relative"
});
var ListItem = React60.forwardRef(function ListItem2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiListItem"
  });
  const {
    alignItems = "center",
    autoFocus = false,
    button = false,
    children: childrenProp,
    className,
    component: componentProp,
    components = {},
    componentsProps = {},
    ContainerComponent = "li",
    ContainerProps: {
      className: ContainerClassName
    } = {},
    dense = false,
    disabled = false,
    disableGutters = false,
    disablePadding = false,
    divider = false,
    focusVisibleClassName,
    secondaryAction,
    selected = false,
    slotProps = {},
    slots = {}
  } = props, ContainerProps = _objectWithoutPropertiesLoose(props.ContainerProps, _excluded45), other = _objectWithoutPropertiesLoose(props, _excluded211);
  const context = React60.useContext(ListContext_default);
  const childContext = React60.useMemo(() => ({
    dense: dense || context.dense || false,
    alignItems,
    disableGutters
  }), [alignItems, context.dense, dense, disableGutters]);
  const listItemRef = React60.useRef(null);
  useEnhancedEffect_default(() => {
    if (autoFocus) {
      if (listItemRef.current) {
        listItemRef.current.focus();
      } else if (true) {
        console.error("MUI: Unable to set focus to a ListItem whose component has not been rendered.");
      }
    }
  }, [autoFocus]);
  const children = React60.Children.toArray(childrenProp);
  const hasSecondaryAction = children.length && isMuiElement_default(children[children.length - 1], ["ListItemSecondaryAction"]);
  const ownerState = _extends({}, props, {
    alignItems,
    autoFocus,
    button,
    dense: childContext.dense,
    disabled,
    disableGutters,
    disablePadding,
    divider,
    hasSecondaryAction,
    selected
  });
  const classes2 = useUtilityClasses42(ownerState);
  const handleRef = useForkRef_default(listItemRef, ref);
  const Root3 = slots.root || components.Root || ListItemRoot;
  const rootProps = slotProps.root || componentsProps.root || {};
  const componentProps = _extends({
    className: clsx_m_default(classes2.root, rootProps.className, className),
    disabled
  }, other);
  let Component2 = componentProp || "li";
  if (button) {
    componentProps.component = componentProp || "div";
    componentProps.focusVisibleClassName = clsx_m_default(listItemClasses_default.focusVisible, focusVisibleClassName);
    Component2 = ButtonBase_default;
  }
  if (hasSecondaryAction) {
    Component2 = !componentProps.component && !componentProp ? "div" : Component2;
    if (ContainerComponent === "li") {
      if (Component2 === "li") {
        Component2 = "div";
      } else if (componentProps.component === "li") {
        componentProps.component = "div";
      }
    }
    return (0, import_jsx_runtime69.jsx)(ListContext_default.Provider, {
      value: childContext,
      children: (0, import_jsx_runtime70.jsxs)(ListItemContainer, _extends({
        as: ContainerComponent,
        className: clsx_m_default(classes2.container, ContainerClassName),
        ref: handleRef,
        ownerState
      }, ContainerProps, {
        children: [(0, import_jsx_runtime69.jsx)(Root3, _extends({}, rootProps, !isHostComponent_default(Root3) && {
          as: Component2,
          ownerState: _extends({}, ownerState, rootProps.ownerState)
        }, componentProps, {
          children
        })), children.pop()]
      }))
    });
  }
  return (0, import_jsx_runtime69.jsx)(ListContext_default.Provider, {
    value: childContext,
    children: (0, import_jsx_runtime70.jsxs)(Root3, _extends({}, rootProps, {
      as: Component2,
      ref: handleRef
    }, !isHostComponent_default(Root3) && {
      ownerState: _extends({}, ownerState, rootProps.ownerState)
    }, componentProps, {
      children: [children, secondaryAction && (0, import_jsx_runtime69.jsx)(ListItemSecondaryAction_default, {
        children: secondaryAction
      })]
    }))
  });
});
true ? ListItem.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Defines the `align-items` style property.
   * @default 'center'
   */
  alignItems: import_prop_types52.default.oneOf(["center", "flex-start"]),
  /**
   * If `true`, the list item is focused during the first mount.
   * Focus will also be triggered if the value changes from false to true.
   * @default false
   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead
   */
  autoFocus: import_prop_types52.default.bool,
  /**
   * If `true`, the list item is a button (using `ButtonBase`). Props intended
   * for `ButtonBase` can then be applied to `ListItem`.
   * @default false
   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead
   */
  button: import_prop_types52.default.bool,
  /**
   * The content of the component if a `ListItemSecondaryAction` is used it must
   * be the last child.
   */
  children: chainPropTypes(import_prop_types52.default.node, (props) => {
    const children = React60.Children.toArray(props.children);
    let secondaryActionIndex = -1;
    for (let i = children.length - 1; i >= 0; i -= 1) {
      const child = children[i];
      if (isMuiElement_default(child, ["ListItemSecondaryAction"])) {
        secondaryActionIndex = i;
        break;
      }
    }
    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {
      return new Error("MUI: You used an element after ListItemSecondaryAction. For ListItem to detect that it has a secondary action you must pass it as the last child to ListItem.");
    }
    return null;
  }),
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types52.default.object,
  /**
   * @ignore
   */
  className: import_prop_types52.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types52.default.elementType,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: import_prop_types52.default.shape({
    Root: import_prop_types52.default.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: import_prop_types52.default.shape({
    root: import_prop_types52.default.object
  }),
  /**
   * The container component used when a `ListItemSecondaryAction` is the last child.
   * @default 'li'
   * @deprecated
   */
  ContainerComponent: elementTypeAcceptingRef_default,
  /**
   * Props applied to the container component if used.
   * @default {}
   * @deprecated
   */
  ContainerProps: import_prop_types52.default.object,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used.
   * The prop defaults to the value inherited from the parent List component.
   * @default false
   */
  dense: import_prop_types52.default.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead
   */
  disabled: import_prop_types52.default.bool,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: import_prop_types52.default.bool,
  /**
   * If `true`, all padding is removed.
   * @default false
   */
  disablePadding: import_prop_types52.default.bool,
  /**
   * If `true`, a 1px light border is added to the bottom of the list item.
   * @default false
   */
  divider: import_prop_types52.default.bool,
  /**
   * @ignore
   */
  focusVisibleClassName: import_prop_types52.default.string,
  /**
   * The element to display at the end of ListItem.
   */
  secondaryAction: import_prop_types52.default.node,
  /**
   * Use to apply selected styling.
   * @default false
   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead
   */
  selected: import_prop_types52.default.bool,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: import_prop_types52.default.shape({
    root: import_prop_types52.default.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: import_prop_types52.default.shape({
    root: import_prop_types52.default.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types52.default.oneOfType([import_prop_types52.default.arrayOf(import_prop_types52.default.oneOfType([import_prop_types52.default.func, import_prop_types52.default.object, import_prop_types52.default.bool])), import_prop_types52.default.func, import_prop_types52.default.object])
} : void 0;
var ListItem_default = ListItem;

// node_modules/@mui/material/ListItemAvatar/ListItemAvatar.js
init_objectWithoutPropertiesLoose();
init_extends();
var React61 = __toESM(require_react());
var import_prop_types53 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/ListItemAvatar/listItemAvatarClasses.js
init_esm();
init_generateUtilityClass();
function getListItemAvatarUtilityClass(slot) {
  return generateUtilityClass("MuiListItemAvatar", slot);
}
var listItemAvatarClasses = generateUtilityClasses("MuiListItemAvatar", ["root", "alignItemsFlexStart"]);

// node_modules/@mui/material/ListItemAvatar/ListItemAvatar.js
var import_jsx_runtime71 = __toESM(require_jsx_runtime());
var _excluded46 = ["className"];
var useUtilityClasses43 = (ownerState) => {
  const {
    alignItems,
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root", alignItems === "flex-start" && "alignItemsFlexStart"]
  };
  return composeClasses(slots, getListItemAvatarUtilityClass, classes2);
};
var ListItemAvatarRoot = styled_default("div", {
  name: "MuiListItemAvatar",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, ownerState.alignItems === "flex-start" && styles20.alignItemsFlexStart];
  }
})(({
  ownerState
}) => _extends({
  minWidth: 56,
  flexShrink: 0
}, ownerState.alignItems === "flex-start" && {
  marginTop: 8
}));
var ListItemAvatar = React61.forwardRef(function ListItemAvatar2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiListItemAvatar"
  });
  const {
    className
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded46);
  const context = React61.useContext(ListContext_default);
  const ownerState = _extends({}, props, {
    alignItems: context.alignItems
  });
  const classes2 = useUtilityClasses43(ownerState);
  return (0, import_jsx_runtime71.jsx)(ListItemAvatarRoot, _extends({
    className: clsx_m_default(classes2.root, className),
    ownerState,
    ref
  }, other));
});
true ? ListItemAvatar.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component, normally an `Avatar`.
   */
  children: import_prop_types53.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types53.default.object,
  /**
   * @ignore
   */
  className: import_prop_types53.default.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types53.default.oneOfType([import_prop_types53.default.arrayOf(import_prop_types53.default.oneOfType([import_prop_types53.default.func, import_prop_types53.default.object, import_prop_types53.default.bool])), import_prop_types53.default.func, import_prop_types53.default.object])
} : void 0;

// node_modules/@mui/material/ListItemIcon/ListItemIcon.js
init_objectWithoutPropertiesLoose();
init_extends();
var React62 = __toESM(require_react());
var import_prop_types54 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/ListItemIcon/listItemIconClasses.js
init_esm();
init_generateUtilityClass();
function getListItemIconUtilityClass(slot) {
  return generateUtilityClass("MuiListItemIcon", slot);
}
var listItemIconClasses = generateUtilityClasses("MuiListItemIcon", ["root", "alignItemsFlexStart"]);
var listItemIconClasses_default = listItemIconClasses;

// node_modules/@mui/material/ListItemIcon/ListItemIcon.js
var import_jsx_runtime72 = __toESM(require_jsx_runtime());
var _excluded47 = ["className"];
var useUtilityClasses44 = (ownerState) => {
  const {
    alignItems,
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root", alignItems === "flex-start" && "alignItemsFlexStart"]
  };
  return composeClasses(slots, getListItemIconUtilityClass, classes2);
};
var ListItemIconRoot = styled_default("div", {
  name: "MuiListItemIcon",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, ownerState.alignItems === "flex-start" && styles20.alignItemsFlexStart];
  }
})(({
  theme,
  ownerState
}) => _extends({
  minWidth: 56,
  color: (theme.vars || theme).palette.action.active,
  flexShrink: 0,
  display: "inline-flex"
}, ownerState.alignItems === "flex-start" && {
  marginTop: 8
}));
var ListItemIcon = React62.forwardRef(function ListItemIcon2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiListItemIcon"
  });
  const {
    className
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded47);
  const context = React62.useContext(ListContext_default);
  const ownerState = _extends({}, props, {
    alignItems: context.alignItems
  });
  const classes2 = useUtilityClasses44(ownerState);
  return (0, import_jsx_runtime72.jsx)(ListItemIconRoot, _extends({
    className: clsx_m_default(classes2.root, className),
    ownerState,
    ref
  }, other));
});
true ? ListItemIcon.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component, normally `Icon`, `SvgIcon`,
   * or a `@mui/icons-material` SVG icon element.
   */
  children: import_prop_types54.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types54.default.object,
  /**
   * @ignore
   */
  className: import_prop_types54.default.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types54.default.oneOfType([import_prop_types54.default.arrayOf(import_prop_types54.default.oneOfType([import_prop_types54.default.func, import_prop_types54.default.object, import_prop_types54.default.bool])), import_prop_types54.default.func, import_prop_types54.default.object])
} : void 0;

// node_modules/@mui/material/ListItemText/ListItemText.js
init_objectWithoutPropertiesLoose();
init_extends();
var React63 = __toESM(require_react());
var import_prop_types55 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_useThemeProps();
init_styled();

// node_modules/@mui/material/ListItemText/listItemTextClasses.js
init_esm();
init_generateUtilityClass();
function getListItemTextUtilityClass(slot) {
  return generateUtilityClass("MuiListItemText", slot);
}
var listItemTextClasses = generateUtilityClasses("MuiListItemText", ["root", "multiline", "dense", "inset", "primary", "secondary"]);
var listItemTextClasses_default = listItemTextClasses;

// node_modules/@mui/material/ListItemText/ListItemText.js
var import_jsx_runtime73 = __toESM(require_jsx_runtime());
var import_jsx_runtime74 = __toESM(require_jsx_runtime());
var _excluded48 = ["children", "className", "disableTypography", "inset", "primary", "primaryTypographyProps", "secondary", "secondaryTypographyProps"];
var useUtilityClasses45 = (ownerState) => {
  const {
    classes: classes2,
    inset,
    primary,
    secondary,
    dense
  } = ownerState;
  const slots = {
    root: ["root", inset && "inset", dense && "dense", primary && secondary && "multiline"],
    primary: ["primary"],
    secondary: ["secondary"]
  };
  return composeClasses(slots, getListItemTextUtilityClass, classes2);
};
var ListItemTextRoot = styled_default("div", {
  name: "MuiListItemText",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [{
      [`& .${listItemTextClasses_default.primary}`]: styles20.primary
    }, {
      [`& .${listItemTextClasses_default.secondary}`]: styles20.secondary
    }, styles20.root, ownerState.inset && styles20.inset, ownerState.primary && ownerState.secondary && styles20.multiline, ownerState.dense && styles20.dense];
  }
})(({
  ownerState
}) => _extends({
  flex: "1 1 auto",
  minWidth: 0,
  marginTop: 4,
  marginBottom: 4
}, ownerState.primary && ownerState.secondary && {
  marginTop: 6,
  marginBottom: 6
}, ownerState.inset && {
  paddingLeft: 56
}));
var ListItemText = React63.forwardRef(function ListItemText2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiListItemText"
  });
  const {
    children,
    className,
    disableTypography = false,
    inset = false,
    primary: primaryProp,
    primaryTypographyProps,
    secondary: secondaryProp,
    secondaryTypographyProps
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded48);
  const {
    dense
  } = React63.useContext(ListContext_default);
  let primary = primaryProp != null ? primaryProp : children;
  let secondary = secondaryProp;
  const ownerState = _extends({}, props, {
    disableTypography,
    inset,
    primary: !!primary,
    secondary: !!secondary,
    dense
  });
  const classes2 = useUtilityClasses45(ownerState);
  if (primary != null && primary.type !== Typography_default && !disableTypography) {
    primary = (0, import_jsx_runtime73.jsx)(Typography_default, _extends({
      variant: dense ? "body2" : "body1",
      className: classes2.primary,
      component: primaryTypographyProps != null && primaryTypographyProps.variant ? void 0 : "span",
      display: "block"
    }, primaryTypographyProps, {
      children: primary
    }));
  }
  if (secondary != null && secondary.type !== Typography_default && !disableTypography) {
    secondary = (0, import_jsx_runtime73.jsx)(Typography_default, _extends({
      variant: "body2",
      className: classes2.secondary,
      color: "text.secondary",
      display: "block"
    }, secondaryTypographyProps, {
      children: secondary
    }));
  }
  return (0, import_jsx_runtime74.jsxs)(ListItemTextRoot, _extends({
    className: clsx_m_default(classes2.root, className),
    ownerState,
    ref
  }, other, {
    children: [primary, secondary]
  }));
});
true ? ListItemText.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Alias for the `primary` prop.
   */
  children: import_prop_types55.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types55.default.object,
  /**
   * @ignore
   */
  className: import_prop_types55.default.string,
  /**
   * If `true`, the children won't be wrapped by a Typography component.
   * This can be useful to render an alternative Typography variant by wrapping
   * the `children` (or `primary`) text, and optional `secondary` text
   * with the Typography component.
   * @default false
   */
  disableTypography: import_prop_types55.default.bool,
  /**
   * If `true`, the children are indented.
   * This should be used if there is no left avatar or left icon.
   * @default false
   */
  inset: import_prop_types55.default.bool,
  /**
   * The main content element.
   */
  primary: import_prop_types55.default.node,
  /**
   * These props will be forwarded to the primary typography component
   * (as long as disableTypography is not `true`).
   */
  primaryTypographyProps: import_prop_types55.default.object,
  /**
   * The secondary content element.
   */
  secondary: import_prop_types55.default.node,
  /**
   * These props will be forwarded to the secondary typography component
   * (as long as disableTypography is not `true`).
   */
  secondaryTypographyProps: import_prop_types55.default.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types55.default.oneOfType([import_prop_types55.default.arrayOf(import_prop_types55.default.oneOfType([import_prop_types55.default.func, import_prop_types55.default.object, import_prop_types55.default.bool])), import_prop_types55.default.func, import_prop_types55.default.object])
} : void 0;
var ListItemText_default = ListItemText;

// node_modules/@mui/material/MenuItem/MenuItem.js
init_objectWithoutPropertiesLoose();
init_extends();
var React64 = __toESM(require_react());
var import_prop_types56 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_esm2();
init_styled();
init_useThemeProps();
init_useEnhancedEffect();
init_useForkRef();

// node_modules/@mui/material/MenuItem/menuItemClasses.js
init_esm();
init_generateUtilityClass();
function getMenuItemUtilityClass(slot) {
  return generateUtilityClass("MuiMenuItem", slot);
}
var menuItemClasses = generateUtilityClasses("MuiMenuItem", ["root", "focusVisible", "dense", "disabled", "divider", "gutters", "selected"]);
var menuItemClasses_default = menuItemClasses;

// node_modules/@mui/material/MenuItem/MenuItem.js
var import_jsx_runtime75 = __toESM(require_jsx_runtime());
var _excluded49 = ["autoFocus", "component", "dense", "divider", "disableGutters", "focusVisibleClassName", "role", "tabIndex", "className"];
var overridesResolver6 = (props, styles20) => {
  const {
    ownerState
  } = props;
  return [styles20.root, ownerState.dense && styles20.dense, ownerState.divider && styles20.divider, !ownerState.disableGutters && styles20.gutters];
};
var useUtilityClasses46 = (ownerState) => {
  const {
    disabled,
    dense,
    divider,
    disableGutters,
    selected,
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root", dense && "dense", disabled && "disabled", !disableGutters && "gutters", divider && "divider", selected && "selected"]
  };
  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes2);
  return _extends({}, classes2, composedClasses);
};
var MenuItemRoot = styled_default(ButtonBase_default, {
  shouldForwardProp: (prop) => rootShouldForwardProp(prop) || prop === "classes",
  name: "MuiMenuItem",
  slot: "Root",
  overridesResolver: overridesResolver6
})(({
  theme,
  ownerState
}) => _extends({}, theme.typography.body1, {
  display: "flex",
  justifyContent: "flex-start",
  alignItems: "center",
  position: "relative",
  textDecoration: "none",
  minHeight: 48,
  paddingTop: 6,
  paddingBottom: 6,
  boxSizing: "border-box",
  whiteSpace: "nowrap"
}, !ownerState.disableGutters && {
  paddingLeft: 16,
  paddingRight: 16
}, ownerState.divider && {
  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,
  backgroundClip: "padding-box"
}, {
  "&:hover": {
    textDecoration: "none",
    backgroundColor: (theme.vars || theme).palette.action.hover,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  [`&.${menuItemClasses_default.selected}`]: {
    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),
    [`&.${menuItemClasses_default.focusVisible}`]: {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)
    }
  },
  [`&.${menuItemClasses_default.selected}:hover`]: {
    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)
    }
  },
  [`&.${menuItemClasses_default.focusVisible}`]: {
    backgroundColor: (theme.vars || theme).palette.action.focus
  },
  [`&.${menuItemClasses_default.disabled}`]: {
    opacity: (theme.vars || theme).palette.action.disabledOpacity
  },
  [`& + .${dividerClasses_default.root}`]: {
    marginTop: theme.spacing(1),
    marginBottom: theme.spacing(1)
  },
  [`& + .${dividerClasses_default.inset}`]: {
    marginLeft: 52
  },
  [`& .${listItemTextClasses_default.root}`]: {
    marginTop: 0,
    marginBottom: 0
  },
  [`& .${listItemTextClasses_default.inset}`]: {
    paddingLeft: 36
  },
  [`& .${listItemIconClasses_default.root}`]: {
    minWidth: 36
  }
}, !ownerState.dense && {
  [theme.breakpoints.up("sm")]: {
    minHeight: "auto"
  }
}, ownerState.dense && _extends({
  minHeight: 32,
  // https://m2.material.io/components/menus#specs > Dense
  paddingTop: 4,
  paddingBottom: 4
}, theme.typography.body2, {
  [`& .${listItemIconClasses_default.root} svg`]: {
    fontSize: "1.25rem"
  }
})));
var MenuItem = React64.forwardRef(function MenuItem2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiMenuItem"
  });
  const {
    autoFocus = false,
    component = "li",
    dense = false,
    divider = false,
    disableGutters = false,
    focusVisibleClassName,
    role = "menuitem",
    tabIndex: tabIndexProp,
    className
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded49);
  const context = React64.useContext(ListContext_default);
  const childContext = React64.useMemo(() => ({
    dense: dense || context.dense || false,
    disableGutters
  }), [context.dense, dense, disableGutters]);
  const menuItemRef = React64.useRef(null);
  useEnhancedEffect_default(() => {
    if (autoFocus) {
      if (menuItemRef.current) {
        menuItemRef.current.focus();
      } else if (true) {
        console.error("MUI: Unable to set focus to a MenuItem whose component has not been rendered.");
      }
    }
  }, [autoFocus]);
  const ownerState = _extends({}, props, {
    dense: childContext.dense,
    divider,
    disableGutters
  });
  const classes2 = useUtilityClasses46(props);
  const handleRef = useForkRef_default(menuItemRef, ref);
  let tabIndex;
  if (!props.disabled) {
    tabIndex = tabIndexProp !== void 0 ? tabIndexProp : -1;
  }
  return (0, import_jsx_runtime75.jsx)(ListContext_default.Provider, {
    value: childContext,
    children: (0, import_jsx_runtime75.jsx)(MenuItemRoot, _extends({
      ref: handleRef,
      role,
      tabIndex,
      component,
      focusVisibleClassName: clsx_m_default(classes2.focusVisible, focusVisibleClassName),
      className: clsx_m_default(classes2.root, className)
    }, other, {
      ownerState,
      classes: classes2
    }))
  });
});
true ? MenuItem.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the list item is focused during the first mount.
   * Focus will also be triggered if the value changes from false to true.
   * @default false
   */
  autoFocus: import_prop_types56.default.bool,
  /**
   * The content of the component.
   */
  children: import_prop_types56.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types56.default.object,
  /**
   * @ignore
   */
  className: import_prop_types56.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types56.default.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used.
   * The prop defaults to the value inherited from the parent Menu component.
   * @default false
   */
  dense: import_prop_types56.default.bool,
  /**
   * @ignore
   */
  disabled: import_prop_types56.default.bool,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: import_prop_types56.default.bool,
  /**
   * If `true`, a 1px light border is added to the bottom of the menu item.
   * @default false
   */
  divider: import_prop_types56.default.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: import_prop_types56.default.string,
  /**
   * @ignore
   */
  role: import_prop_types56.default.string,
  /**
   * If `true`, the component is selected.
   * @default false
   */
  selected: import_prop_types56.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types56.default.oneOfType([import_prop_types56.default.arrayOf(import_prop_types56.default.oneOfType([import_prop_types56.default.func, import_prop_types56.default.object, import_prop_types56.default.bool])), import_prop_types56.default.func, import_prop_types56.default.object]),
  /**
   * @default 0
   */
  tabIndex: import_prop_types56.default.number
} : void 0;
var MenuItem_default = MenuItem;

// node_modules/@mui/material/MobileStepper/MobileStepper.js
init_objectWithoutPropertiesLoose();
init_extends();
var React65 = __toESM(require_react());
var import_prop_types57 = __toESM(require_prop_types());
init_clsx_m();
init_esm();
init_base();
init_capitalize();
init_useThemeProps();
init_styled();

// node_modules/@mui/material/MobileStepper/mobileStepperClasses.js
init_esm();
init_generateUtilityClass();
function getMobileStepperUtilityClass(slot) {
  return generateUtilityClass("MuiMobileStepper", slot);
}
var mobileStepperClasses = generateUtilityClasses("MuiMobileStepper", ["root", "positionBottom", "positionTop", "positionStatic", "dots", "dot", "dotActive", "progress"]);

// node_modules/@mui/material/MobileStepper/MobileStepper.js
var import_jsx_runtime76 = __toESM(require_jsx_runtime());
var import_jsx_runtime77 = __toESM(require_jsx_runtime());
var _excluded50 = ["activeStep", "backButton", "className", "LinearProgressProps", "nextButton", "position", "steps", "variant"];
var useUtilityClasses47 = (ownerState) => {
  const {
    classes: classes2,
    position
  } = ownerState;
  const slots = {
    root: ["root", `position${capitalize_default(position)}`],
    dots: ["dots"],
    dot: ["dot"],
    dotActive: ["dotActive"],
    progress: ["progress"]
  };
  return composeClasses(slots, getMobileStepperUtilityClass, classes2);
};
var MobileStepperRoot = styled_default(Paper_default, {
  name: "MuiMobileStepper",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, styles20[`position${capitalize_default(ownerState.position)}`]];
  }
})(({
  theme,
  ownerState
}) => _extends({
  display: "flex",
  flexDirection: "row",
  justifyContent: "space-between",
  alignItems: "center",
  background: (theme.vars || theme).palette.background.default,
  padding: 8
}, ownerState.position === "bottom" && {
  position: "fixed",
  bottom: 0,
  left: 0,
  right: 0,
  zIndex: (theme.vars || theme).zIndex.mobileStepper
}, ownerState.position === "top" && {
  position: "fixed",
  top: 0,
  left: 0,
  right: 0,
  zIndex: (theme.vars || theme).zIndex.mobileStepper
}));
var MobileStepperDots = styled_default("div", {
  name: "MuiMobileStepper",
  slot: "Dots",
  overridesResolver: (props, styles20) => styles20.dots
})(({
  ownerState
}) => _extends({}, ownerState.variant === "dots" && {
  display: "flex",
  flexDirection: "row"
}));
var MobileStepperDot = styled_default("div", {
  name: "MuiMobileStepper",
  slot: "Dot",
  shouldForwardProp: (prop) => slotShouldForwardProp(prop) && prop !== "dotActive",
  overridesResolver: (props, styles20) => {
    const {
      dotActive
    } = props;
    return [styles20.dot, dotActive && styles20.dotActive];
  }
})(({
  theme,
  ownerState,
  dotActive
}) => _extends({}, ownerState.variant === "dots" && _extends({
  transition: theme.transitions.create("background-color", {
    duration: theme.transitions.duration.shortest
  }),
  backgroundColor: (theme.vars || theme).palette.action.disabled,
  borderRadius: "50%",
  width: 8,
  height: 8,
  margin: "0 2px"
}, dotActive && {
  backgroundColor: (theme.vars || theme).palette.primary.main
})));
var MobileStepperProgress = styled_default(LinearProgress_default, {
  name: "MuiMobileStepper",
  slot: "Progress",
  overridesResolver: (props, styles20) => styles20.progress
})(({
  ownerState
}) => _extends({}, ownerState.variant === "progress" && {
  width: "50%"
}));
var MobileStepper = React65.forwardRef(function MobileStepper2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiMobileStepper"
  });
  const {
    activeStep = 0,
    backButton,
    className,
    LinearProgressProps,
    nextButton,
    position = "bottom",
    steps,
    variant = "dots"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded50);
  const ownerState = _extends({}, props, {
    activeStep,
    position,
    variant
  });
  const classes2 = useUtilityClasses47(ownerState);
  return (0, import_jsx_runtime76.jsxs)(MobileStepperRoot, _extends({
    square: true,
    elevation: 0,
    className: clsx_m_default(classes2.root, className),
    ref,
    ownerState
  }, other, {
    children: [backButton, variant === "text" && (0, import_jsx_runtime76.jsxs)(React65.Fragment, {
      children: [activeStep + 1, " / ", steps]
    }), variant === "dots" && (0, import_jsx_runtime77.jsx)(MobileStepperDots, {
      ownerState,
      className: classes2.dots,
      children: [...new Array(steps)].map((_4, index2) => (0, import_jsx_runtime77.jsx)(MobileStepperDot, {
        className: clsx_m_default(classes2.dot, index2 === activeStep && classes2.dotActive),
        ownerState,
        dotActive: index2 === activeStep
      }, index2))
    }), variant === "progress" && (0, import_jsx_runtime77.jsx)(MobileStepperProgress, _extends({
      ownerState,
      className: classes2.progress,
      variant: "determinate",
      value: Math.ceil(activeStep / (steps - 1) * 100)
    }, LinearProgressProps)), nextButton]
  }));
});
true ? MobileStepper.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Set the active step (zero based index).
   * Defines which dot is highlighted when the variant is 'dots'.
   * @default 0
   */
  activeStep: integerPropType_default,
  /**
   * A back button element. For instance, it can be a `Button` or an `IconButton`.
   */
  backButton: import_prop_types57.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types57.default.object,
  /**
   * @ignore
   */
  className: import_prop_types57.default.string,
  /**
   * Props applied to the `LinearProgress` element.
   */
  LinearProgressProps: import_prop_types57.default.object,
  /**
   * A next button element. For instance, it can be a `Button` or an `IconButton`.
   */
  nextButton: import_prop_types57.default.node,
  /**
   * Set the positioning type.
   * @default 'bottom'
   */
  position: import_prop_types57.default.oneOf(["bottom", "static", "top"]),
  /**
   * The total steps.
   */
  steps: integerPropType_default.isRequired,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types57.default.oneOfType([import_prop_types57.default.arrayOf(import_prop_types57.default.oneOfType([import_prop_types57.default.func, import_prop_types57.default.object, import_prop_types57.default.bool])), import_prop_types57.default.func, import_prop_types57.default.object]),
  /**
   * The variant to use.
   * @default 'dots'
   */
  variant: import_prop_types57.default.oneOf(["dots", "progress", "text"])
} : void 0;

// node_modules/@mui/material/NativeSelect/NativeSelect.js
init_extends();
init_objectWithoutPropertiesLoose();
var React66 = __toESM(require_react());
init_clsx_m();
var import_prop_types58 = __toESM(require_prop_types());
init_base();
init_useThemeProps();
var import_jsx_runtime78 = __toESM(require_jsx_runtime());
var _excluded51 = ["className", "children", "classes", "IconComponent", "input", "inputProps", "variant"];
var _excluded212 = ["root"];
var useUtilityClasses48 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getNativeSelectUtilityClasses, classes2);
};
var defaultInput = (0, import_jsx_runtime78.jsx)(Input_default, {});
var NativeSelect = React66.forwardRef(function NativeSelect2(inProps, ref) {
  const props = useThemeProps2({
    name: "MuiNativeSelect",
    props: inProps
  });
  const {
    className,
    children,
    classes: classesProp = {},
    IconComponent = ArrowDropDown_default,
    input = defaultInput,
    inputProps
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded51);
  const muiFormControl = useFormControl();
  const fcs = formControlState({
    props,
    muiFormControl,
    states: ["variant"]
  });
  const ownerState = _extends({}, props, {
    classes: classesProp
  });
  const classes2 = useUtilityClasses48(ownerState);
  const otherClasses = _objectWithoutPropertiesLoose(classesProp, _excluded212);
  return (0, import_jsx_runtime78.jsx)(React66.Fragment, {
    children: React66.cloneElement(input, _extends({
      // Most of the logic is implemented in `NativeSelectInput`.
      // The `Select` component is a simple API wrapper to expose something better to play with.
      inputComponent: NativeSelectInput_default,
      inputProps: _extends({
        children,
        classes: otherClasses,
        IconComponent,
        variant: fcs.variant,
        type: void 0
      }, inputProps, input ? input.props.inputProps : {}),
      ref
    }, other, {
      className: clsx_m_default(classes2.root, input.props.className, className)
    }))
  });
});
true ? NativeSelect.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The option elements to populate the select with.
   * Can be some `<option>` elements.
   */
  children: import_prop_types58.default.node,
  /**
   * Override or extend the styles applied to the component.
   * @default {}
   */
  classes: import_prop_types58.default.object,
  /**
   * @ignore
   */
  className: import_prop_types58.default.string,
  /**
   * The icon that displays the arrow.
   * @default ArrowDropDownIcon
   */
  IconComponent: import_prop_types58.default.elementType,
  /**
   * An `Input` element; does not have to be a material-ui specific `Input`.
   * @default <Input />
   */
  input: import_prop_types58.default.element,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attributes) applied to the `select` element.
   */
  inputProps: import_prop_types58.default.object,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {React.ChangeEvent<HTMLSelectElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: import_prop_types58.default.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types58.default.oneOfType([import_prop_types58.default.arrayOf(import_prop_types58.default.oneOfType([import_prop_types58.default.func, import_prop_types58.default.object, import_prop_types58.default.bool])), import_prop_types58.default.func, import_prop_types58.default.object]),
  /**
   * The `input` value. The DOM API casts this to a string.
   */
  value: import_prop_types58.default.any,
  /**
   * The variant to use.
   */
  variant: import_prop_types58.default.oneOf(["filled", "outlined", "standard"])
} : void 0;
NativeSelect.muiName = "Select";

// node_modules/@mui/material/NoSsr/index.js
init_NoSsr();

// node_modules/@mui/material/Pagination/Pagination.js
init_extends();
init_objectWithoutPropertiesLoose();
var React72 = __toESM(require_react());
var import_prop_types60 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_esm();
init_useThemeProps();

// node_modules/@mui/material/Pagination/paginationClasses.js
init_esm();
init_generateUtilityClass();
function getPaginationUtilityClass(slot) {
  return generateUtilityClass("MuiPagination", slot);
}
var paginationClasses = generateUtilityClasses("MuiPagination", ["root", "ul", "outlined", "text"]);

// node_modules/@mui/material/usePagination/usePagination.js
init_extends();
init_objectWithoutPropertiesLoose();
init_esm();
var _excluded52 = ["boundaryCount", "componentName", "count", "defaultPage", "disabled", "hideNextButton", "hidePrevButton", "onChange", "page", "showFirstButton", "showLastButton", "siblingCount"];
function usePagination(props = {}) {
  const {
    boundaryCount = 1,
    componentName = "usePagination",
    count: count2 = 1,
    defaultPage = 1,
    disabled = false,
    hideNextButton = false,
    hidePrevButton = false,
    onChange: handleChange,
    page: pageProp,
    showFirstButton = false,
    showLastButton = false,
    siblingCount = 1
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded52);
  const [page, setPageState] = useControlled({
    controlled: pageProp,
    default: defaultPage,
    name: componentName,
    state: "page"
  });
  const handleClick = (event, value) => {
    if (!pageProp) {
      setPageState(value);
    }
    if (handleChange) {
      handleChange(event, value);
    }
  };
  const range = (start, end) => {
    const length = end - start + 1;
    return Array.from({
      length
    }, (_4, i) => start + i);
  };
  const startPages = range(1, Math.min(boundaryCount, count2));
  const endPages = range(Math.max(count2 - boundaryCount + 1, boundaryCount + 1), count2);
  const siblingsStart = Math.max(
    Math.min(
      // Natural start
      page - siblingCount,
      // Lower boundary when page is high
      count2 - boundaryCount - siblingCount * 2 - 1
    ),
    // Greater than startPages
    boundaryCount + 2
  );
  const siblingsEnd = Math.min(
    Math.max(
      // Natural end
      page + siblingCount,
      // Upper boundary when page is low
      boundaryCount + siblingCount * 2 + 2
    ),
    // Less than endPages
    endPages.length > 0 ? endPages[0] - 2 : count2 - 1
  );
  const itemList = [
    ...showFirstButton ? ["first"] : [],
    ...hidePrevButton ? [] : ["previous"],
    ...startPages,
    // Start ellipsis
    // eslint-disable-next-line no-nested-ternary
    ...siblingsStart > boundaryCount + 2 ? ["start-ellipsis"] : boundaryCount + 1 < count2 - boundaryCount ? [boundaryCount + 1] : [],
    // Sibling pages
    ...range(siblingsStart, siblingsEnd),
    // End ellipsis
    // eslint-disable-next-line no-nested-ternary
    ...siblingsEnd < count2 - boundaryCount - 1 ? ["end-ellipsis"] : count2 - boundaryCount > boundaryCount ? [count2 - boundaryCount] : [],
    ...endPages,
    ...hideNextButton ? [] : ["next"],
    ...showLastButton ? ["last"] : []
  ];
  const buttonPage = (type) => {
    switch (type) {
      case "first":
        return 1;
      case "previous":
        return page - 1;
      case "next":
        return page + 1;
      case "last":
        return count2;
      default:
        return null;
    }
  };
  const items = itemList.map((item) => {
    return typeof item === "number" ? {
      onClick: (event) => {
        handleClick(event, item);
      },
      type: "page",
      page: item,
      selected: item === page,
      disabled,
      "aria-current": item === page ? "true" : void 0
    } : {
      onClick: (event) => {
        handleClick(event, buttonPage(item));
      },
      type: item,
      page: buttonPage(item),
      selected: false,
      disabled: disabled || item.indexOf("ellipsis") === -1 && (item === "next" || item === "last" ? page >= count2 : page <= 1)
    };
  });
  return _extends({
    items
  }, other);
}

// node_modules/@mui/material/PaginationItem/PaginationItem.js
init_objectWithoutPropertiesLoose();
init_extends();
var React71 = __toESM(require_react());
var import_prop_types59 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_esm2();
init_useThemeProps();

// node_modules/@mui/material/PaginationItem/paginationItemClasses.js
init_esm();
init_generateUtilityClass();
function getPaginationItemUtilityClass(slot) {
  return generateUtilityClass("MuiPaginationItem", slot);
}
var paginationItemClasses = generateUtilityClasses("MuiPaginationItem", ["root", "page", "sizeSmall", "sizeLarge", "text", "textPrimary", "textSecondary", "outlined", "outlinedPrimary", "outlinedSecondary", "rounded", "ellipsis", "firstLast", "previousNext", "focusVisible", "disabled", "selected", "icon"]);
var paginationItemClasses_default = paginationItemClasses;

// node_modules/@mui/material/PaginationItem/PaginationItem.js
init_capitalize();

// node_modules/@mui/material/internal/svg-icons/FirstPage.js
var React67 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime79 = __toESM(require_jsx_runtime());
var FirstPage_default = createSvgIcon((0, import_jsx_runtime79.jsx)("path", {
  d: "M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z"
}), "FirstPage");

// node_modules/@mui/material/internal/svg-icons/LastPage.js
var React68 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime80 = __toESM(require_jsx_runtime());
var LastPage_default = createSvgIcon((0, import_jsx_runtime80.jsx)("path", {
  d: "M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z"
}), "LastPage");

// node_modules/@mui/material/internal/svg-icons/NavigateBefore.js
var React69 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime81 = __toESM(require_jsx_runtime());
var NavigateBefore_default = createSvgIcon((0, import_jsx_runtime81.jsx)("path", {
  d: "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
}), "NavigateBefore");

// node_modules/@mui/material/internal/svg-icons/NavigateNext.js
var React70 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime82 = __toESM(require_jsx_runtime());
var NavigateNext_default = createSvgIcon((0, import_jsx_runtime82.jsx)("path", {
  d: "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
}), "NavigateNext");

// node_modules/@mui/material/PaginationItem/PaginationItem.js
init_styled();
var import_jsx_runtime83 = __toESM(require_jsx_runtime());
var import_jsx_runtime84 = __toESM(require_jsx_runtime());
var _excluded53 = ["className", "color", "component", "components", "disabled", "page", "selected", "shape", "size", "slots", "type", "variant"];
var overridesResolver7 = (props, styles20) => {
  const {
    ownerState
  } = props;
  return [styles20.root, styles20[ownerState.variant], styles20[`size${capitalize_default(ownerState.size)}`], ownerState.variant === "text" && styles20[`text${capitalize_default(ownerState.color)}`], ownerState.variant === "outlined" && styles20[`outlined${capitalize_default(ownerState.color)}`], ownerState.shape === "rounded" && styles20.rounded, ownerState.type === "page" && styles20.page, (ownerState.type === "start-ellipsis" || ownerState.type === "end-ellipsis") && styles20.ellipsis, (ownerState.type === "previous" || ownerState.type === "next") && styles20.previousNext, (ownerState.type === "first" || ownerState.type === "last") && styles20.firstLast];
};
var useUtilityClasses49 = (ownerState) => {
  const {
    classes: classes2,
    color: color2,
    disabled,
    selected,
    size,
    shape,
    type,
    variant
  } = ownerState;
  const slots = {
    root: ["root", `size${capitalize_default(size)}`, variant, shape, color2 !== "standard" && `${variant}${capitalize_default(color2)}`, disabled && "disabled", selected && "selected", {
      page: "page",
      first: "firstLast",
      last: "firstLast",
      "start-ellipsis": "ellipsis",
      "end-ellipsis": "ellipsis",
      previous: "previousNext",
      next: "previousNext"
    }[type]],
    icon: ["icon"]
  };
  return composeClasses(slots, getPaginationItemUtilityClass, classes2);
};
var PaginationItemEllipsis = styled_default("div", {
  name: "MuiPaginationItem",
  slot: "Root",
  overridesResolver: overridesResolver7
})(({
  theme,
  ownerState
}) => _extends({}, theme.typography.body2, {
  borderRadius: 32 / 2,
  textAlign: "center",
  boxSizing: "border-box",
  minWidth: 32,
  padding: "0 6px",
  margin: "0 3px",
  color: (theme.vars || theme).palette.text.primary,
  height: "auto",
  [`&.${paginationItemClasses_default.disabled}`]: {
    opacity: (theme.vars || theme).palette.action.disabledOpacity
  }
}, ownerState.size === "small" && {
  minWidth: 26,
  borderRadius: 26 / 2,
  margin: "0 1px",
  padding: "0 4px"
}, ownerState.size === "large" && {
  minWidth: 40,
  borderRadius: 40 / 2,
  padding: "0 10px",
  fontSize: theme.typography.pxToRem(15)
}));
var PaginationItemPage = styled_default(ButtonBase_default, {
  name: "MuiPaginationItem",
  slot: "Root",
  overridesResolver: overridesResolver7
})(({
  theme,
  ownerState
}) => _extends({}, theme.typography.body2, {
  borderRadius: 32 / 2,
  textAlign: "center",
  boxSizing: "border-box",
  minWidth: 32,
  height: 32,
  padding: "0 6px",
  margin: "0 3px",
  color: (theme.vars || theme).palette.text.primary,
  [`&.${paginationItemClasses_default.focusVisible}`]: {
    backgroundColor: (theme.vars || theme).palette.action.focus
  },
  [`&.${paginationItemClasses_default.disabled}`]: {
    opacity: (theme.vars || theme).palette.action.disabledOpacity
  },
  transition: theme.transitions.create(["color", "background-color"], {
    duration: theme.transitions.duration.short
  }),
  "&:hover": {
    backgroundColor: (theme.vars || theme).palette.action.hover,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  [`&.${paginationItemClasses_default.selected}`]: {
    backgroundColor: (theme.vars || theme).palette.action.selected,
    "&:hover": {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selected} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: (theme.vars || theme).palette.action.selected
      }
    },
    [`&.${paginationItemClasses_default.focusVisible}`]: {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selected} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)
    },
    [`&.${paginationItemClasses_default.disabled}`]: {
      opacity: 1,
      color: (theme.vars || theme).palette.action.disabled,
      backgroundColor: (theme.vars || theme).palette.action.selected
    }
  }
}, ownerState.size === "small" && {
  minWidth: 26,
  height: 26,
  borderRadius: 26 / 2,
  margin: "0 1px",
  padding: "0 4px"
}, ownerState.size === "large" && {
  minWidth: 40,
  height: 40,
  borderRadius: 40 / 2,
  padding: "0 10px",
  fontSize: theme.typography.pxToRem(15)
}, ownerState.shape === "rounded" && {
  borderRadius: (theme.vars || theme).shape.borderRadius
}), ({
  theme,
  ownerState
}) => _extends({}, ownerState.variant === "text" && {
  [`&.${paginationItemClasses_default.selected}`]: _extends({}, ownerState.color !== "standard" && {
    color: (theme.vars || theme).palette[ownerState.color].contrastText,
    backgroundColor: (theme.vars || theme).palette[ownerState.color].main,
    "&:hover": {
      backgroundColor: (theme.vars || theme).palette[ownerState.color].dark,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: (theme.vars || theme).palette[ownerState.color].main
      }
    },
    [`&.${paginationItemClasses_default.focusVisible}`]: {
      backgroundColor: (theme.vars || theme).palette[ownerState.color].dark
    }
  }, {
    [`&.${paginationItemClasses_default.disabled}`]: {
      color: (theme.vars || theme).palette.action.disabled
    }
  })
}, ownerState.variant === "outlined" && {
  border: theme.vars ? `1px solid rgba(${theme.vars.palette.common.onBackgroundChannel} / 0.23)` : `1px solid ${theme.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)"}`,
  [`&.${paginationItemClasses_default.selected}`]: _extends({}, ownerState.color !== "standard" && {
    color: (theme.vars || theme).palette[ownerState.color].main,
    border: `1px solid ${theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.5)` : alpha(theme.palette[ownerState.color].main, 0.5)}`,
    backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.activatedOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.activatedOpacity),
    "&:hover": {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / calc(${theme.vars.palette.action.activatedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette[ownerState.color].main, theme.palette.action.activatedOpacity + theme.palette.action.focusOpacity),
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    },
    [`&.${paginationItemClasses_default.focusVisible}`]: {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / calc(${theme.vars.palette.action.activatedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette[ownerState.color].main, theme.palette.action.activatedOpacity + theme.palette.action.focusOpacity)
    }
  }, {
    [`&.${paginationItemClasses_default.disabled}`]: {
      borderColor: (theme.vars || theme).palette.action.disabledBackground,
      color: (theme.vars || theme).palette.action.disabled
    }
  })
}));
var PaginationItemPageIcon = styled_default("div", {
  name: "MuiPaginationItem",
  slot: "Icon",
  overridesResolver: (props, styles20) => styles20.icon
})(({
  theme,
  ownerState
}) => _extends({
  fontSize: theme.typography.pxToRem(20),
  margin: "0 -8px"
}, ownerState.size === "small" && {
  fontSize: theme.typography.pxToRem(18)
}, ownerState.size === "large" && {
  fontSize: theme.typography.pxToRem(22)
}));
var PaginationItem = React71.forwardRef(function PaginationItem2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiPaginationItem"
  });
  const {
    className,
    color: color2 = "standard",
    component,
    components = {},
    disabled = false,
    page,
    selected = false,
    shape = "circular",
    size = "medium",
    slots = {},
    type = "page",
    variant = "text"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded53);
  const ownerState = _extends({}, props, {
    color: color2,
    disabled,
    selected,
    shape,
    size,
    type,
    variant
  });
  const theme = useTheme();
  const classes2 = useUtilityClasses49(ownerState);
  const normalizedIcons = theme.direction === "rtl" ? {
    previous: slots.next || components.next || NavigateNext_default,
    next: slots.previous || components.previous || NavigateBefore_default,
    last: slots.first || components.first || FirstPage_default,
    first: slots.last || components.last || LastPage_default
  } : {
    previous: slots.previous || components.previous || NavigateBefore_default,
    next: slots.next || components.next || NavigateNext_default,
    first: slots.first || components.first || FirstPage_default,
    last: slots.last || components.last || LastPage_default
  };
  const Icon3 = normalizedIcons[type];
  return type === "start-ellipsis" || type === "end-ellipsis" ? (0, import_jsx_runtime83.jsx)(PaginationItemEllipsis, {
    ref,
    ownerState,
    className: clsx_m_default(classes2.root, className),
    children: "…"
  }) : (0, import_jsx_runtime84.jsxs)(PaginationItemPage, _extends({
    ref,
    ownerState,
    component,
    disabled,
    className: clsx_m_default(classes2.root, className)
  }, other, {
    children: [type === "page" && page, Icon3 ? (0, import_jsx_runtime83.jsx)(PaginationItemPageIcon, {
      as: Icon3,
      ownerState,
      className: classes2.icon
    }) : null]
  }));
});
true ? PaginationItem.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  children: import_prop_types59.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types59.default.object,
  /**
   * @ignore
   */
  className: import_prop_types59.default.string,
  /**
   * The active color.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'standard'
   */
  color: import_prop_types59.default.oneOfType([import_prop_types59.default.oneOf(["primary", "secondary", "standard"]), import_prop_types59.default.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types59.default.elementType,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: import_prop_types59.default.shape({
    first: import_prop_types59.default.elementType,
    last: import_prop_types59.default.elementType,
    next: import_prop_types59.default.elementType,
    previous: import_prop_types59.default.elementType
  }),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types59.default.bool,
  /**
   * The current page number.
   */
  page: import_prop_types59.default.node,
  /**
   * If `true` the pagination item is selected.
   * @default false
   */
  selected: import_prop_types59.default.bool,
  /**
   * The shape of the pagination item.
   * @default 'circular'
   */
  shape: import_prop_types59.default.oneOf(["circular", "rounded"]),
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: import_prop_types59.default.oneOfType([import_prop_types59.default.oneOf(["small", "medium", "large"]), import_prop_types59.default.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: import_prop_types59.default.shape({
    first: import_prop_types59.default.elementType,
    last: import_prop_types59.default.elementType,
    next: import_prop_types59.default.elementType,
    previous: import_prop_types59.default.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types59.default.oneOfType([import_prop_types59.default.arrayOf(import_prop_types59.default.oneOfType([import_prop_types59.default.func, import_prop_types59.default.object, import_prop_types59.default.bool])), import_prop_types59.default.func, import_prop_types59.default.object]),
  /**
   * The type of pagination item.
   * @default 'page'
   */
  type: import_prop_types59.default.oneOf(["end-ellipsis", "first", "last", "next", "page", "previous", "start-ellipsis"]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: import_prop_types59.default.oneOfType([import_prop_types59.default.oneOf(["outlined", "text"]), import_prop_types59.default.string])
} : void 0;
var PaginationItem_default = PaginationItem;

// node_modules/@mui/material/Pagination/Pagination.js
init_styled();
var import_jsx_runtime85 = __toESM(require_jsx_runtime());
var _excluded54 = ["boundaryCount", "className", "color", "count", "defaultPage", "disabled", "getItemAriaLabel", "hideNextButton", "hidePrevButton", "onChange", "page", "renderItem", "shape", "showFirstButton", "showLastButton", "siblingCount", "size", "variant"];
var useUtilityClasses50 = (ownerState) => {
  const {
    classes: classes2,
    variant
  } = ownerState;
  const slots = {
    root: ["root", variant],
    ul: ["ul"]
  };
  return composeClasses(slots, getPaginationUtilityClass, classes2);
};
var PaginationRoot = styled_default("nav", {
  name: "MuiPagination",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, styles20[ownerState.variant]];
  }
})({});
var PaginationUl = styled_default("ul", {
  name: "MuiPagination",
  slot: "Ul",
  overridesResolver: (props, styles20) => styles20.ul
})({
  display: "flex",
  flexWrap: "wrap",
  alignItems: "center",
  padding: 0,
  margin: 0,
  listStyle: "none"
});
function defaultGetAriaLabel(type, page, selected) {
  if (type === "page") {
    return `${selected ? "" : "Go to "}page ${page}`;
  }
  return `Go to ${type} page`;
}
var Pagination = React72.forwardRef(function Pagination2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiPagination"
  });
  const {
    boundaryCount = 1,
    className,
    color: color2 = "standard",
    count: count2 = 1,
    defaultPage = 1,
    disabled = false,
    getItemAriaLabel = defaultGetAriaLabel,
    hideNextButton = false,
    hidePrevButton = false,
    renderItem = (item) => (0, import_jsx_runtime85.jsx)(PaginationItem_default, _extends({}, item)),
    shape = "circular",
    showFirstButton = false,
    showLastButton = false,
    siblingCount = 1,
    size = "medium",
    variant = "text"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded54);
  const {
    items
  } = usePagination(_extends({}, props, {
    componentName: "Pagination"
  }));
  const ownerState = _extends({}, props, {
    boundaryCount,
    color: color2,
    count: count2,
    defaultPage,
    disabled,
    getItemAriaLabel,
    hideNextButton,
    hidePrevButton,
    renderItem,
    shape,
    showFirstButton,
    showLastButton,
    siblingCount,
    size,
    variant
  });
  const classes2 = useUtilityClasses50(ownerState);
  return (0, import_jsx_runtime85.jsx)(PaginationRoot, _extends({
    "aria-label": "pagination navigation",
    className: clsx_m_default(classes2.root, className),
    ownerState,
    ref
  }, other, {
    children: (0, import_jsx_runtime85.jsx)(PaginationUl, {
      className: classes2.ul,
      ownerState,
      children: items.map((item, index2) => (0, import_jsx_runtime85.jsx)("li", {
        children: renderItem(_extends({}, item, {
          color: color2,
          "aria-label": getItemAriaLabel(item.type, item.page, item.selected),
          shape,
          size,
          variant
        }))
      }, index2))
    })
  }));
});
true ? Pagination.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Number of always visible pages at the beginning and end.
   * @default 1
   */
  boundaryCount: integerPropType_default,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types60.default.object,
  /**
   * @ignore
   */
  className: import_prop_types60.default.string,
  /**
   * The active color.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'standard'
   */
  color: import_prop_types60.default.oneOfType([import_prop_types60.default.oneOf(["primary", "secondary", "standard"]), import_prop_types60.default.string]),
  /**
   * The total number of pages.
   * @default 1
   */
  count: integerPropType_default,
  /**
   * The page selected by default when the component is uncontrolled.
   * @default 1
   */
  defaultPage: integerPropType_default,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types60.default.bool,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current page.
   * This is important for screen reader users.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.
   * @param {number} page The page number to format.
   * @param {bool} selected If true, the current page is selected.
   * @returns {string}
   */
  getItemAriaLabel: import_prop_types60.default.func,
  /**
   * If `true`, hide the next-page button.
   * @default false
   */
  hideNextButton: import_prop_types60.default.bool,
  /**
   * If `true`, hide the previous-page button.
   * @default false
   */
  hidePrevButton: import_prop_types60.default.bool,
  /**
   * Callback fired when the page is changed.
   *
   * @param {React.ChangeEvent<unknown>} event The event source of the callback.
   * @param {number} page The page selected.
   */
  onChange: import_prop_types60.default.func,
  /**
   * The current page.
   */
  page: integerPropType_default,
  /**
   * Render the item.
   * @param {PaginationRenderItemParams} params The props to spread on a PaginationItem.
   * @returns {ReactNode}
   * @default (item) => <PaginationItem {...item} />
   */
  renderItem: import_prop_types60.default.func,
  /**
   * The shape of the pagination items.
   * @default 'circular'
   */
  shape: import_prop_types60.default.oneOf(["circular", "rounded"]),
  /**
   * If `true`, show the first-page button.
   * @default false
   */
  showFirstButton: import_prop_types60.default.bool,
  /**
   * If `true`, show the last-page button.
   * @default false
   */
  showLastButton: import_prop_types60.default.bool,
  /**
   * Number of always visible pages before and after the current page.
   * @default 1
   */
  siblingCount: integerPropType_default,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: import_prop_types60.default.oneOfType([import_prop_types60.default.oneOf(["small", "medium", "large"]), import_prop_types60.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types60.default.oneOfType([import_prop_types60.default.arrayOf(import_prop_types60.default.oneOfType([import_prop_types60.default.func, import_prop_types60.default.object, import_prop_types60.default.bool])), import_prop_types60.default.func, import_prop_types60.default.object]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: import_prop_types60.default.oneOfType([import_prop_types60.default.oneOf(["outlined", "text"]), import_prop_types60.default.string])
} : void 0;

// node_modules/@mui/material/Portal/index.js
init_Portal();

// node_modules/@mui/material/Radio/Radio.js
init_objectWithoutPropertiesLoose();
init_extends();
var React78 = __toESM(require_react());
var import_prop_types62 = __toESM(require_prop_types());
init_clsx_m();
init_esm();
init_base();
init_esm2();
init_useThemeProps();

// node_modules/@mui/material/Radio/RadioButtonIcon.js
init_extends();
var React75 = __toESM(require_react());
var import_prop_types61 = __toESM(require_prop_types());

// node_modules/@mui/material/internal/svg-icons/RadioButtonUnchecked.js
var React73 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime86 = __toESM(require_jsx_runtime());
var RadioButtonUnchecked_default = createSvgIcon((0, import_jsx_runtime86.jsx)("path", {
  d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), "RadioButtonUnchecked");

// node_modules/@mui/material/internal/svg-icons/RadioButtonChecked.js
var React74 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime87 = __toESM(require_jsx_runtime());
var RadioButtonChecked_default = createSvgIcon((0, import_jsx_runtime87.jsx)("path", {
  d: "M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
}), "RadioButtonChecked");

// node_modules/@mui/material/Radio/RadioButtonIcon.js
init_styled();
var import_jsx_runtime88 = __toESM(require_jsx_runtime());
var import_jsx_runtime89 = __toESM(require_jsx_runtime());
var RadioButtonIconRoot = styled_default("span")({
  position: "relative",
  display: "flex"
});
var RadioButtonIconBackground = styled_default(RadioButtonUnchecked_default)({
  // Scale applied to prevent dot misalignment in Safari
  transform: "scale(1)"
});
var RadioButtonIconDot = styled_default(RadioButtonChecked_default)(({
  theme,
  ownerState
}) => _extends({
  left: 0,
  position: "absolute",
  transform: "scale(0)",
  transition: theme.transitions.create("transform", {
    easing: theme.transitions.easing.easeIn,
    duration: theme.transitions.duration.shortest
  })
}, ownerState.checked && {
  transform: "scale(1)",
  transition: theme.transitions.create("transform", {
    easing: theme.transitions.easing.easeOut,
    duration: theme.transitions.duration.shortest
  })
}));
function RadioButtonIcon(props) {
  const {
    checked = false,
    classes: classes2 = {},
    fontSize
  } = props;
  const ownerState = _extends({}, props, {
    checked
  });
  return (0, import_jsx_runtime89.jsxs)(RadioButtonIconRoot, {
    className: classes2.root,
    ownerState,
    children: [(0, import_jsx_runtime88.jsx)(RadioButtonIconBackground, {
      fontSize,
      className: classes2.background,
      ownerState
    }), (0, import_jsx_runtime88.jsx)(RadioButtonIconDot, {
      fontSize,
      className: classes2.dot,
      ownerState
    })]
  });
}
true ? RadioButtonIcon.propTypes = {
  /**
   * If `true`, the component is checked.
   */
  checked: import_prop_types61.default.bool,
  /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */
  classes: import_prop_types61.default.object,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   */
  fontSize: import_prop_types61.default.oneOf(["small", "medium"])
} : void 0;
var RadioButtonIcon_default = RadioButtonIcon;

// node_modules/@mui/material/Radio/Radio.js
init_capitalize();
init_createChainedFunction();

// node_modules/@mui/material/RadioGroup/useRadioGroup.js
var React77 = __toESM(require_react());

// node_modules/@mui/material/RadioGroup/RadioGroupContext.js
var React76 = __toESM(require_react());
var RadioGroupContext = React76.createContext(void 0);
if (true) {
  RadioGroupContext.displayName = "RadioGroupContext";
}
var RadioGroupContext_default = RadioGroupContext;

// node_modules/@mui/material/RadioGroup/useRadioGroup.js
function useRadioGroup() {
  return React77.useContext(RadioGroupContext_default);
}

// node_modules/@mui/material/Radio/radioClasses.js
init_esm();
init_generateUtilityClass();
function getRadioUtilityClass(slot) {
  return generateUtilityClass("MuiRadio", slot);
}
var radioClasses = generateUtilityClasses("MuiRadio", ["root", "checked", "disabled", "colorPrimary", "colorSecondary"]);
var radioClasses_default = radioClasses;

// node_modules/@mui/material/Radio/Radio.js
init_styled();
var import_jsx_runtime90 = __toESM(require_jsx_runtime());
var _excluded55 = ["checked", "checkedIcon", "color", "icon", "name", "onChange", "size", "className"];
var useUtilityClasses51 = (ownerState) => {
  const {
    classes: classes2,
    color: color2
  } = ownerState;
  const slots = {
    root: ["root", `color${capitalize_default(color2)}`]
  };
  return _extends({}, classes2, composeClasses(slots, getRadioUtilityClass, classes2));
};
var RadioRoot = styled_default(SwitchBase_default, {
  shouldForwardProp: (prop) => rootShouldForwardProp(prop) || prop === "classes",
  name: "MuiRadio",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, styles20[`color${capitalize_default(ownerState.color)}`]];
  }
})(({
  theme,
  ownerState
}) => _extends({
  color: (theme.vars || theme).palette.text.secondary
}, !ownerState.disableRipple && {
  "&:hover": {
    backgroundColor: theme.vars ? `rgba(${ownerState.color === "default" ? theme.vars.palette.action.activeChannel : theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === "default" ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  }
}, ownerState.color !== "default" && {
  [`&.${radioClasses_default.checked}`]: {
    color: (theme.vars || theme).palette[ownerState.color].main
  }
}, {
  [`&.${radioClasses_default.disabled}`]: {
    color: (theme.vars || theme).palette.action.disabled
  }
}));
function areEqualValues(a2, b) {
  if (typeof b === "object" && b !== null) {
    return a2 === b;
  }
  return String(a2) === String(b);
}
var defaultCheckedIcon2 = (0, import_jsx_runtime90.jsx)(RadioButtonIcon_default, {
  checked: true
});
var defaultIcon2 = (0, import_jsx_runtime90.jsx)(RadioButtonIcon_default, {});
var Radio = React78.forwardRef(function Radio2(inProps, ref) {
  var _defaultIcon$props$fo, _defaultCheckedIcon$p;
  const props = useThemeProps2({
    props: inProps,
    name: "MuiRadio"
  });
  const {
    checked: checkedProp,
    checkedIcon = defaultCheckedIcon2,
    color: color2 = "primary",
    icon = defaultIcon2,
    name: nameProp,
    onChange: onChangeProp,
    size = "medium",
    className
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded55);
  const ownerState = _extends({}, props, {
    color: color2,
    size
  });
  const classes2 = useUtilityClasses51(ownerState);
  const radioGroup = useRadioGroup();
  let checked = checkedProp;
  const onChange = createChainedFunction_default(onChangeProp, radioGroup && radioGroup.onChange);
  let name = nameProp;
  if (radioGroup) {
    if (typeof checked === "undefined") {
      checked = areEqualValues(radioGroup.value, props.value);
    }
    if (typeof name === "undefined") {
      name = radioGroup.name;
    }
  }
  return (0, import_jsx_runtime90.jsx)(RadioRoot, _extends({
    type: "radio",
    icon: React78.cloneElement(icon, {
      fontSize: (_defaultIcon$props$fo = defaultIcon2.props.fontSize) != null ? _defaultIcon$props$fo : size
    }),
    checkedIcon: React78.cloneElement(checkedIcon, {
      fontSize: (_defaultCheckedIcon$p = defaultCheckedIcon2.props.fontSize) != null ? _defaultCheckedIcon$p : size
    }),
    ownerState,
    classes: classes2,
    name,
    checked,
    onChange,
    ref,
    className: clsx_m_default(classes2.root, className)
  }, other));
});
true ? Radio.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the component is checked.
   */
  checked: import_prop_types62.default.bool,
  /**
   * The icon to display when the component is checked.
   * @default <RadioButtonIcon checked />
   */
  checkedIcon: import_prop_types62.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types62.default.object,
  /**
   * @ignore
   */
  className: import_prop_types62.default.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'primary'
   */
  color: import_prop_types62.default.oneOfType([import_prop_types62.default.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), import_prop_types62.default.string]),
  /**
   * If `true`, the component is disabled.
   */
  disabled: import_prop_types62.default.bool,
  /**
   * If `true`, the ripple effect is disabled.
   */
  disableRipple: import_prop_types62.default.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <RadioButtonIcon />
   */
  icon: import_prop_types62.default.node,
  /**
   * The id of the `input` element.
   */
  id: import_prop_types62.default.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: import_prop_types62.default.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: refType_default,
  /**
   * Name attribute of the `input` element.
   */
  name: import_prop_types62.default.string,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: import_prop_types62.default.func,
  /**
   * If `true`, the `input` element is required.
   */
  required: import_prop_types62.default.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   * @default 'medium'
   */
  size: import_prop_types62.default.oneOfType([import_prop_types62.default.oneOf(["medium", "small"]), import_prop_types62.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types62.default.oneOfType([import_prop_types62.default.arrayOf(import_prop_types62.default.oneOfType([import_prop_types62.default.func, import_prop_types62.default.object, import_prop_types62.default.bool])), import_prop_types62.default.func, import_prop_types62.default.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   */
  value: import_prop_types62.default.any
} : void 0;

// node_modules/@mui/material/RadioGroup/RadioGroup.js
init_extends();
init_objectWithoutPropertiesLoose();
var React79 = __toESM(require_react());
var import_prop_types63 = __toESM(require_prop_types());
init_useForkRef();
init_useControlled();
init_useId();
var import_jsx_runtime91 = __toESM(require_jsx_runtime());
var _excluded56 = ["actions", "children", "defaultValue", "name", "onChange", "value"];
var RadioGroup = React79.forwardRef(function RadioGroup2(props, ref) {
  const {
    // private
    // eslint-disable-next-line react/prop-types
    actions,
    children,
    defaultValue,
    name: nameProp,
    onChange,
    value: valueProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded56);
  const rootRef = React79.useRef(null);
  const [value, setValueState] = useControlled_default({
    controlled: valueProp,
    default: defaultValue,
    name: "RadioGroup"
  });
  React79.useImperativeHandle(actions, () => ({
    focus: () => {
      let input = rootRef.current.querySelector("input:not(:disabled):checked");
      if (!input) {
        input = rootRef.current.querySelector("input:not(:disabled)");
      }
      if (input) {
        input.focus();
      }
    }
  }), []);
  const handleRef = useForkRef_default(ref, rootRef);
  const name = useId_default(nameProp);
  const contextValue = React79.useMemo(() => ({
    name,
    onChange(event) {
      setValueState(event.target.value);
      if (onChange) {
        onChange(event, event.target.value);
      }
    },
    value
  }), [name, onChange, setValueState, value]);
  return (0, import_jsx_runtime91.jsx)(RadioGroupContext_default.Provider, {
    value: contextValue,
    children: (0, import_jsx_runtime91.jsx)(FormGroup_default, _extends({
      role: "radiogroup",
      ref: handleRef
    }, other, {
      children
    }))
  });
});
true ? RadioGroup.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types63.default.node,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: import_prop_types63.default.any,
  /**
   * The name used to reference the value of the control.
   * If you don't provide this prop, it falls back to a randomly generated name.
   */
  name: import_prop_types63.default.string,
  /**
   * Callback fired when a radio button is selected.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * @param {string} value The value of the selected radio button.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: import_prop_types63.default.func,
  /**
   * Value of the selected radio button. The DOM API casts this to a string.
   */
  value: import_prop_types63.default.any
} : void 0;

// node_modules/@mui/material/Rating/Rating.js
init_objectWithoutPropertiesLoose();
init_extends();
var React82 = __toESM(require_react());
var import_prop_types64 = __toESM(require_prop_types());
init_clsx_m();
init_esm();
init_base();
init_utils();

// node_modules/@mui/material/internal/svg-icons/Star.js
var React80 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime92 = __toESM(require_jsx_runtime());
var Star_default = createSvgIcon((0, import_jsx_runtime92.jsx)("path", {
  d: "M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
}), "Star");

// node_modules/@mui/material/internal/svg-icons/StarBorder.js
var React81 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime93 = __toESM(require_jsx_runtime());
var StarBorder_default = createSvgIcon((0, import_jsx_runtime93.jsx)("path", {
  d: "M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"
}), "StarBorder");

// node_modules/@mui/material/Rating/Rating.js
init_useThemeProps();
init_styled();

// node_modules/@mui/material/Rating/ratingClasses.js
init_esm();
init_generateUtilityClass();
function getRatingUtilityClass(slot) {
  return generateUtilityClass("MuiRating", slot);
}
var ratingClasses = generateUtilityClasses("MuiRating", ["root", "sizeSmall", "sizeMedium", "sizeLarge", "readOnly", "disabled", "focusVisible", "visuallyHidden", "pristine", "label", "labelEmptyValueActive", "icon", "iconEmpty", "iconFilled", "iconHover", "iconFocus", "iconActive", "decimal"]);
var ratingClasses_default = ratingClasses;

// node_modules/@mui/material/Rating/Rating.js
var import_jsx_runtime94 = __toESM(require_jsx_runtime());
var import_jsx_runtime95 = __toESM(require_jsx_runtime());
var _excluded57 = ["value"];
var _excluded213 = ["className", "defaultValue", "disabled", "emptyIcon", "emptyLabelText", "getLabelText", "highlightSelectedOnly", "icon", "IconContainerComponent", "max", "name", "onChange", "onChangeActive", "onMouseLeave", "onMouseMove", "precision", "readOnly", "size", "value"];
function clamp2(value, min3, max3) {
  if (value < min3) {
    return min3;
  }
  if (value > max3) {
    return max3;
  }
  return value;
}
function getDecimalPrecision(num) {
  const decimalPart = num.toString().split(".")[1];
  return decimalPart ? decimalPart.length : 0;
}
function roundValueToPrecision(value, precision) {
  if (value == null) {
    return value;
  }
  const nearest = Math.round(value / precision) * precision;
  return Number(nearest.toFixed(getDecimalPrecision(precision)));
}
var useUtilityClasses52 = (ownerState) => {
  const {
    classes: classes2,
    size,
    readOnly,
    disabled,
    emptyValueFocused,
    focusVisible
  } = ownerState;
  const slots = {
    root: ["root", `size${capitalize_default(size)}`, disabled && "disabled", focusVisible && "focusVisible", readOnly && "readyOnly"],
    label: ["label", "pristine"],
    labelEmptyValue: [emptyValueFocused && "labelEmptyValueActive"],
    icon: ["icon"],
    iconEmpty: ["iconEmpty"],
    iconFilled: ["iconFilled"],
    iconHover: ["iconHover"],
    iconFocus: ["iconFocus"],
    iconActive: ["iconActive"],
    decimal: ["decimal"],
    visuallyHidden: ["visuallyHidden"]
  };
  return composeClasses(slots, getRatingUtilityClass, classes2);
};
var RatingRoot = styled_default("span", {
  name: "MuiRating",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [{
      [`& .${ratingClasses_default.visuallyHidden}`]: styles20.visuallyHidden
    }, styles20.root, styles20[`size${capitalize_default(ownerState.size)}`], ownerState.readOnly && styles20.readOnly];
  }
})(({
  theme,
  ownerState
}) => _extends({
  display: "inline-flex",
  // Required to position the pristine input absolutely
  position: "relative",
  fontSize: theme.typography.pxToRem(24),
  color: "#faaf00",
  cursor: "pointer",
  textAlign: "left",
  WebkitTapHighlightColor: "transparent",
  [`&.${ratingClasses_default.disabled}`]: {
    opacity: (theme.vars || theme).palette.action.disabledOpacity,
    pointerEvents: "none"
  },
  [`&.${ratingClasses_default.focusVisible} .${ratingClasses_default.iconActive}`]: {
    outline: "1px solid #999"
  },
  [`& .${ratingClasses_default.visuallyHidden}`]: visuallyHidden_default
}, ownerState.size === "small" && {
  fontSize: theme.typography.pxToRem(18)
}, ownerState.size === "large" && {
  fontSize: theme.typography.pxToRem(30)
}, ownerState.readOnly && {
  pointerEvents: "none"
}));
var RatingLabel = styled_default("label", {
  name: "MuiRating",
  slot: "Label",
  overridesResolver: ({
    ownerState
  }, styles20) => [styles20.label, ownerState.emptyValueFocused && styles20.labelEmptyValueActive]
})(({
  ownerState
}) => _extends({
  cursor: "inherit"
}, ownerState.emptyValueFocused && {
  top: 0,
  bottom: 0,
  position: "absolute",
  outline: "1px solid #999",
  width: "100%"
}));
var RatingIcon = styled_default("span", {
  name: "MuiRating",
  slot: "Icon",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.icon, ownerState.iconEmpty && styles20.iconEmpty, ownerState.iconFilled && styles20.iconFilled, ownerState.iconHover && styles20.iconHover, ownerState.iconFocus && styles20.iconFocus, ownerState.iconActive && styles20.iconActive];
  }
})(({
  theme,
  ownerState
}) => _extends({
  // Fit wrapper to actual icon size.
  display: "flex",
  transition: theme.transitions.create("transform", {
    duration: theme.transitions.duration.shortest
  }),
  // Fix mouseLeave issue.
  // https://github.com/facebook/react/issues/4492
  pointerEvents: "none"
}, ownerState.iconActive && {
  transform: "scale(1.2)"
}, ownerState.iconEmpty && {
  color: (theme.vars || theme).palette.action.disabled
}));
var RatingDecimal = styled_default("span", {
  name: "MuiRating",
  slot: "Decimal",
  shouldForwardProp: (prop) => slotShouldForwardProp(prop) && prop !== "iconActive",
  overridesResolver: (props, styles20) => {
    const {
      iconActive
    } = props;
    return [styles20.decimal, iconActive && styles20.iconActive];
  }
})(({
  iconActive
}) => _extends({
  position: "relative"
}, iconActive && {
  transform: "scale(1.2)"
}));
function IconContainer(props) {
  const other = _objectWithoutPropertiesLoose(props, _excluded57);
  return (0, import_jsx_runtime94.jsx)("span", _extends({}, other));
}
true ? IconContainer.propTypes = {
  value: import_prop_types64.default.number.isRequired
} : void 0;
function RatingItem(props) {
  const {
    classes: classes2,
    disabled,
    emptyIcon,
    focus,
    getLabelText,
    highlightSelectedOnly,
    hover,
    icon,
    IconContainerComponent,
    isActive,
    itemValue,
    labelProps,
    name,
    onBlur,
    onChange,
    onClick,
    onFocus,
    readOnly,
    ownerState,
    ratingValue,
    ratingValueRounded
  } = props;
  const isFilled = highlightSelectedOnly ? itemValue === ratingValue : itemValue <= ratingValue;
  const isHovered = itemValue <= hover;
  const isFocused = itemValue <= focus;
  const isChecked = itemValue === ratingValueRounded;
  const id = useId_default();
  const container = (0, import_jsx_runtime94.jsx)(RatingIcon, {
    as: IconContainerComponent,
    value: itemValue,
    className: clsx_m_default(classes2.icon, isFilled ? classes2.iconFilled : classes2.iconEmpty, isHovered && classes2.iconHover, isFocused && classes2.iconFocus, isActive && classes2.iconActive),
    ownerState: _extends({}, ownerState, {
      iconEmpty: !isFilled,
      iconFilled: isFilled,
      iconHover: isHovered,
      iconFocus: isFocused,
      iconActive: isActive
    }),
    children: emptyIcon && !isFilled ? emptyIcon : icon
  });
  if (readOnly) {
    return (0, import_jsx_runtime94.jsx)("span", _extends({}, labelProps, {
      children: container
    }));
  }
  return (0, import_jsx_runtime95.jsxs)(React82.Fragment, {
    children: [(0, import_jsx_runtime95.jsxs)(RatingLabel, _extends({
      ownerState: _extends({}, ownerState, {
        emptyValueFocused: void 0
      }),
      htmlFor: id
    }, labelProps, {
      children: [container, (0, import_jsx_runtime94.jsx)("span", {
        className: classes2.visuallyHidden,
        children: getLabelText(itemValue)
      })]
    })), (0, import_jsx_runtime94.jsx)("input", {
      className: classes2.visuallyHidden,
      onFocus,
      onBlur,
      onChange,
      onClick,
      disabled,
      value: itemValue,
      id,
      type: "radio",
      name,
      checked: isChecked
    })]
  });
}
true ? RatingItem.propTypes = {
  classes: import_prop_types64.default.object.isRequired,
  disabled: import_prop_types64.default.bool.isRequired,
  emptyIcon: import_prop_types64.default.node,
  focus: import_prop_types64.default.number.isRequired,
  getLabelText: import_prop_types64.default.func.isRequired,
  highlightSelectedOnly: import_prop_types64.default.bool.isRequired,
  hover: import_prop_types64.default.number.isRequired,
  icon: import_prop_types64.default.node,
  IconContainerComponent: import_prop_types64.default.elementType.isRequired,
  isActive: import_prop_types64.default.bool.isRequired,
  itemValue: import_prop_types64.default.number.isRequired,
  labelProps: import_prop_types64.default.object,
  name: import_prop_types64.default.string,
  onBlur: import_prop_types64.default.func.isRequired,
  onChange: import_prop_types64.default.func.isRequired,
  onClick: import_prop_types64.default.func.isRequired,
  onFocus: import_prop_types64.default.func.isRequired,
  ownerState: import_prop_types64.default.object.isRequired,
  ratingValue: import_prop_types64.default.number,
  ratingValueRounded: import_prop_types64.default.number,
  readOnly: import_prop_types64.default.bool.isRequired
} : void 0;
var defaultIcon3 = (0, import_jsx_runtime94.jsx)(Star_default, {
  fontSize: "inherit"
});
var defaultEmptyIcon = (0, import_jsx_runtime94.jsx)(StarBorder_default, {
  fontSize: "inherit"
});
function defaultLabelText(value) {
  return `${value} Star${value !== 1 ? "s" : ""}`;
}
var Rating = React82.forwardRef(function Rating2(inProps, ref) {
  const props = useThemeProps2({
    name: "MuiRating",
    props: inProps
  });
  const {
    className,
    defaultValue = null,
    disabled = false,
    emptyIcon = defaultEmptyIcon,
    emptyLabelText = "Empty",
    getLabelText = defaultLabelText,
    highlightSelectedOnly = false,
    icon = defaultIcon3,
    IconContainerComponent = IconContainer,
    max: max3 = 5,
    name: nameProp,
    onChange,
    onChangeActive,
    onMouseLeave,
    onMouseMove,
    precision = 1,
    readOnly = false,
    size = "medium",
    value: valueProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded213);
  const name = useId_default(nameProp);
  const [valueDerived, setValueState] = useControlled_default({
    controlled: valueProp,
    default: defaultValue,
    name: "Rating"
  });
  const valueRounded = roundValueToPrecision(valueDerived, precision);
  const theme = useTheme();
  const [{
    hover,
    focus
  }, setState] = React82.useState({
    hover: -1,
    focus: -1
  });
  let value = valueRounded;
  if (hover !== -1) {
    value = hover;
  }
  if (focus !== -1) {
    value = focus;
  }
  const {
    isFocusVisibleRef,
    onBlur: handleBlurVisible,
    onFocus: handleFocusVisible,
    ref: focusVisibleRef
  } = useIsFocusVisible_default();
  const [focusVisible, setFocusVisible] = React82.useState(false);
  const rootRef = React82.useRef();
  const handleRef = useForkRef_default(focusVisibleRef, rootRef, ref);
  const handleMouseMove = (event) => {
    if (onMouseMove) {
      onMouseMove(event);
    }
    const rootNode = rootRef.current;
    const {
      right,
      left
    } = rootNode.getBoundingClientRect();
    const {
      width
    } = rootNode.firstChild.getBoundingClientRect();
    let percent;
    if (theme.direction === "rtl") {
      percent = (right - event.clientX) / (width * max3);
    } else {
      percent = (event.clientX - left) / (width * max3);
    }
    let newHover = roundValueToPrecision(max3 * percent + precision / 2, precision);
    newHover = clamp2(newHover, precision, max3);
    setState((prev) => prev.hover === newHover && prev.focus === newHover ? prev : {
      hover: newHover,
      focus: newHover
    });
    setFocusVisible(false);
    if (onChangeActive && hover !== newHover) {
      onChangeActive(event, newHover);
    }
  };
  const handleMouseLeave = (event) => {
    if (onMouseLeave) {
      onMouseLeave(event);
    }
    const newHover = -1;
    setState({
      hover: newHover,
      focus: newHover
    });
    if (onChangeActive && hover !== newHover) {
      onChangeActive(event, newHover);
    }
  };
  const handleChange = (event) => {
    let newValue = event.target.value === "" ? null : parseFloat(event.target.value);
    if (hover !== -1) {
      newValue = hover;
    }
    setValueState(newValue);
    if (onChange) {
      onChange(event, newValue);
    }
  };
  const handleClear = (event) => {
    if (event.clientX === 0 && event.clientY === 0) {
      return;
    }
    setState({
      hover: -1,
      focus: -1
    });
    setValueState(null);
    if (onChange && parseFloat(event.target.value) === valueRounded) {
      onChange(event, null);
    }
  };
  const handleFocus = (event) => {
    handleFocusVisible(event);
    if (isFocusVisibleRef.current === true) {
      setFocusVisible(true);
    }
    const newFocus = parseFloat(event.target.value);
    setState((prev) => ({
      hover: prev.hover,
      focus: newFocus
    }));
  };
  const handleBlur = (event) => {
    if (hover !== -1) {
      return;
    }
    handleBlurVisible(event);
    if (isFocusVisibleRef.current === false) {
      setFocusVisible(false);
    }
    const newFocus = -1;
    setState((prev) => ({
      hover: prev.hover,
      focus: newFocus
    }));
  };
  const [emptyValueFocused, setEmptyValueFocused] = React82.useState(false);
  const ownerState = _extends({}, props, {
    defaultValue,
    disabled,
    emptyIcon,
    emptyLabelText,
    emptyValueFocused,
    focusVisible,
    getLabelText,
    icon,
    IconContainerComponent,
    max: max3,
    precision,
    readOnly,
    size
  });
  const classes2 = useUtilityClasses52(ownerState);
  return (0, import_jsx_runtime95.jsxs)(RatingRoot, _extends({
    ref: handleRef,
    onMouseMove: handleMouseMove,
    onMouseLeave: handleMouseLeave,
    className: clsx_m_default(classes2.root, className),
    ownerState,
    role: readOnly ? "img" : null,
    "aria-label": readOnly ? getLabelText(value) : null
  }, other, {
    children: [Array.from(new Array(max3)).map((_4, index2) => {
      const itemValue = index2 + 1;
      const ratingItemProps = {
        classes: classes2,
        disabled,
        emptyIcon,
        focus,
        getLabelText,
        highlightSelectedOnly,
        hover,
        icon,
        IconContainerComponent,
        name,
        onBlur: handleBlur,
        onChange: handleChange,
        onClick: handleClear,
        onFocus: handleFocus,
        ratingValue: value,
        ratingValueRounded: valueRounded,
        readOnly,
        ownerState
      };
      const isActive = itemValue === Math.ceil(value) && (hover !== -1 || focus !== -1);
      if (precision < 1) {
        const items = Array.from(new Array(1 / precision));
        return (0, import_jsx_runtime94.jsx)(RatingDecimal, {
          className: clsx_m_default(classes2.decimal, isActive && classes2.iconActive),
          ownerState,
          iconActive: isActive,
          children: items.map(($, indexDecimal) => {
            const itemDecimalValue = roundValueToPrecision(itemValue - 1 + (indexDecimal + 1) * precision, precision);
            return (0, import_jsx_runtime94.jsx)(RatingItem, _extends({}, ratingItemProps, {
              // The icon is already displayed as active
              isActive: false,
              itemValue: itemDecimalValue,
              labelProps: {
                style: items.length - 1 === indexDecimal ? {} : {
                  width: itemDecimalValue === value ? `${(indexDecimal + 1) * precision * 100}%` : "0%",
                  overflow: "hidden",
                  position: "absolute"
                }
              }
            }), itemDecimalValue);
          })
        }, itemValue);
      }
      return (0, import_jsx_runtime94.jsx)(RatingItem, _extends({}, ratingItemProps, {
        isActive,
        itemValue
      }), itemValue);
    }), !readOnly && !disabled && (0, import_jsx_runtime95.jsxs)(RatingLabel, {
      className: clsx_m_default(classes2.label, classes2.labelEmptyValue),
      ownerState,
      children: [(0, import_jsx_runtime94.jsx)("input", {
        className: classes2.visuallyHidden,
        value: "",
        id: `${name}-empty`,
        type: "radio",
        name,
        checked: valueRounded == null,
        onFocus: () => setEmptyValueFocused(true),
        onBlur: () => setEmptyValueFocused(false),
        onChange: handleChange
      }), (0, import_jsx_runtime94.jsx)("span", {
        className: classes2.visuallyHidden,
        children: emptyLabelText
      })]
    })]
  }));
});
true ? Rating.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types64.default.object,
  /**
   * @ignore
   */
  className: import_prop_types64.default.string,
  /**
   * The default value. Use when the component is not controlled.
   * @default null
   */
  defaultValue: import_prop_types64.default.number,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types64.default.bool,
  /**
   * The icon to display when empty.
   * @default <StarBorder fontSize="inherit" />
   */
  emptyIcon: import_prop_types64.default.node,
  /**
   * The label read when the rating input is empty.
   * @default 'Empty'
   */
  emptyLabelText: import_prop_types64.default.node,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current value of the rating.
   * This is important for screen reader users.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @param {number} value The rating label's value to format.
   * @returns {string}
   * @default function defaultLabelText(value) {
   *   return `${value} Star${value !== 1 ? 's' : ''}`;
   * }
   */
  getLabelText: import_prop_types64.default.func,
  /**
   * If `true`, only the selected icon will be highlighted.
   * @default false
   */
  highlightSelectedOnly: import_prop_types64.default.bool,
  /**
   * The icon to display.
   * @default <Star fontSize="inherit" />
   */
  icon: import_prop_types64.default.node,
  /**
   * The component containing the icon.
   * @default function IconContainer(props) {
   *   const { value, ...other } = props;
   *   return <span {...other} />;
   * }
   */
  IconContainerComponent: import_prop_types64.default.elementType,
  /**
   * Maximum rating.
   * @default 5
   */
  max: import_prop_types64.default.number,
  /**
   * The name attribute of the radio `input` elements.
   * This input `name` should be unique within the page.
   * Being unique within a form is insufficient since the `name` is used to generated IDs.
   */
  name: import_prop_types64.default.string,
  /**
   * Callback fired when the value changes.
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {number|null} value The new value.
   */
  onChange: import_prop_types64.default.func,
  /**
   * Callback function that is fired when the hover state changes.
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {number} value The new value.
   */
  onChangeActive: import_prop_types64.default.func,
  /**
   * @ignore
   */
  onMouseLeave: import_prop_types64.default.func,
  /**
   * @ignore
   */
  onMouseMove: import_prop_types64.default.func,
  /**
   * The minimum increment value change allowed.
   * @default 1
   */
  precision: chainPropTypes(import_prop_types64.default.number, (props) => {
    if (props.precision < 0.1) {
      return new Error(["MUI: The prop `precision` should be above 0.1.", "A value below this limit has an imperceptible impact."].join("\n"));
    }
    return null;
  }),
  /**
   * Removes all hover effects and pointer events.
   * @default false
   */
  readOnly: import_prop_types64.default.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: import_prop_types64.default.oneOfType([import_prop_types64.default.oneOf(["small", "medium", "large"]), import_prop_types64.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types64.default.oneOfType([import_prop_types64.default.arrayOf(import_prop_types64.default.oneOfType([import_prop_types64.default.func, import_prop_types64.default.object, import_prop_types64.default.bool])), import_prop_types64.default.func, import_prop_types64.default.object]),
  /**
   * The rating value.
   */
  value: import_prop_types64.default.number
} : void 0;

// node_modules/@mui/material/ScopedCssBaseline/ScopedCssBaseline.js
init_objectWithoutPropertiesLoose();
init_extends();
var React83 = __toESM(require_react());
var import_prop_types65 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_useThemeProps();
init_styled();

// node_modules/@mui/material/ScopedCssBaseline/scopedCssBaselineClasses.js
init_esm();
init_generateUtilityClass();
function getScopedCssBaselineUtilityClass(slot) {
  return generateUtilityClass("MuiScopedCssBaseline", slot);
}
var scopedCssBaselineClasses = generateUtilityClasses("MuiScopedCssBaseline", ["root"]);

// node_modules/@mui/material/ScopedCssBaseline/ScopedCssBaseline.js
var import_jsx_runtime96 = __toESM(require_jsx_runtime());
var _excluded58 = ["className", "component", "enableColorScheme"];
var useUtilityClasses53 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getScopedCssBaselineUtilityClass, classes2);
};
var ScopedCssBaselineRoot = styled_default("div", {
  name: "MuiScopedCssBaseline",
  slot: "Root",
  overridesResolver: (props, styles20) => styles20.root
})(({
  theme,
  ownerState
}) => {
  const colorSchemeStyles = {};
  if (ownerState.enableColorScheme && theme.colorSchemes) {
    Object.entries(theme.colorSchemes).forEach(([key, scheme2]) => {
      var _scheme$palette;
      colorSchemeStyles[`&${theme.getColorSchemeSelector(key).replace(/\s*&/, "")}`] = {
        colorScheme: (_scheme$palette = scheme2.palette) == null ? void 0 : _scheme$palette.mode
      };
    });
  }
  return _extends({}, html(theme, ownerState.enableColorScheme), body(theme), {
    "& *, & *::before, & *::after": {
      boxSizing: "inherit"
    },
    "& strong, & b": {
      fontWeight: theme.typography.fontWeightBold
    }
  }, colorSchemeStyles);
});
var ScopedCssBaseline = React83.forwardRef(function ScopedCssBaseline2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiScopedCssBaseline"
  });
  const {
    className,
    component = "div"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded58);
  const ownerState = _extends({}, props, {
    component
  });
  const classes2 = useUtilityClasses53(ownerState);
  return (0, import_jsx_runtime96.jsx)(ScopedCssBaselineRoot, _extends({
    as: component,
    className: clsx_m_default(classes2.root, className),
    ref,
    ownerState
  }, other));
});
true ? ScopedCssBaseline.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types65.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types65.default.object,
  /**
   * @ignore
   */
  className: import_prop_types65.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types65.default.elementType,
  /**
   * Enable `color-scheme` CSS property to use `theme.palette.mode`.
   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme
   * For browser support, check out https://caniuse.com/?search=color-scheme
   */
  enableColorScheme: import_prop_types65.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types65.default.oneOfType([import_prop_types65.default.arrayOf(import_prop_types65.default.oneOfType([import_prop_types65.default.func, import_prop_types65.default.object, import_prop_types65.default.bool])), import_prop_types65.default.func, import_prop_types65.default.object])
} : void 0;

// node_modules/@mui/material/Skeleton/Skeleton.js
init_objectWithoutPropertiesLoose();
init_extends();
var React84 = __toESM(require_react());
init_clsx_m();
var import_prop_types66 = __toESM(require_prop_types());
init_esm2();
init_base();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/Skeleton/skeletonClasses.js
init_esm();
init_generateUtilityClass();
function getSkeletonUtilityClass(slot) {
  return generateUtilityClass("MuiSkeleton", slot);
}
var skeletonClasses = generateUtilityClasses("MuiSkeleton", ["root", "text", "rectangular", "rounded", "circular", "pulse", "wave", "withChildren", "fitContent", "heightAuto"]);

// node_modules/@mui/material/Skeleton/Skeleton.js
var import_jsx_runtime97 = __toESM(require_jsx_runtime());
var _excluded59 = ["animation", "className", "component", "height", "style", "variant", "width"];
var _3 = (t) => t;
var _t7;
var _t23;
var _t33;
var _t43;
var useUtilityClasses54 = (ownerState) => {
  const {
    classes: classes2,
    variant,
    animation,
    hasChildren,
    width,
    height
  } = ownerState;
  const slots = {
    root: ["root", variant, animation, hasChildren && "withChildren", hasChildren && !width && "fitContent", hasChildren && !height && "heightAuto"]
  };
  return composeClasses(slots, getSkeletonUtilityClass, classes2);
};
var pulseKeyframe = keyframes(_t7 || (_t7 = _3`
  0% {
    opacity: 1;
  }

  50% {
    opacity: 0.4;
  }

  100% {
    opacity: 1;
  }
`));
var waveKeyframe = keyframes(_t23 || (_t23 = _3`
  0% {
    transform: translateX(-100%);
  }

  50% {
    /* +0.5s of delay between each loop */
    transform: translateX(100%);
  }

  100% {
    transform: translateX(100%);
  }
`));
var SkeletonRoot = styled_default("span", {
  name: "MuiSkeleton",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, styles20[ownerState.variant], ownerState.animation !== false && styles20[ownerState.animation], ownerState.hasChildren && styles20.withChildren, ownerState.hasChildren && !ownerState.width && styles20.fitContent, ownerState.hasChildren && !ownerState.height && styles20.heightAuto];
  }
})(({
  theme,
  ownerState
}) => {
  const radiusUnit = getUnit(theme.shape.borderRadius) || "px";
  const radiusValue = toUnitless(theme.shape.borderRadius);
  return _extends({
    display: "block",
    // Create a "on paper" color with sufficient contrast retaining the color
    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === "light" ? 0.11 : 0.13),
    height: "1.2em"
  }, ownerState.variant === "text" && {
    marginTop: 0,
    marginBottom: 0,
    height: "auto",
    transformOrigin: "0 55%",
    transform: "scale(1, 0.60)",
    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,
    "&:empty:before": {
      content: '"\\00a0"'
    }
  }, ownerState.variant === "circular" && {
    borderRadius: "50%"
  }, ownerState.variant === "rounded" && {
    borderRadius: (theme.vars || theme).shape.borderRadius
  }, ownerState.hasChildren && {
    "& > *": {
      visibility: "hidden"
    }
  }, ownerState.hasChildren && !ownerState.width && {
    maxWidth: "fit-content"
  }, ownerState.hasChildren && !ownerState.height && {
    height: "auto"
  });
}, ({
  ownerState
}) => ownerState.animation === "pulse" && css(_t33 || (_t33 = _3`
      animation: ${0} 1.5s ease-in-out 0.5s infinite;
    `), pulseKeyframe), ({
  ownerState,
  theme
}) => ownerState.animation === "wave" && css(_t43 || (_t43 = _3`
      position: relative;
      overflow: hidden;

      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */
      -webkit-mask-image: -webkit-radial-gradient(white, black);

      &::after {
        animation: ${0} 1.6s linear 0.5s infinite;
        background: linear-gradient(
          90deg,
          transparent,
          ${0},
          transparent
        );
        content: '';
        position: absolute;
        transform: translateX(-100%); /* Avoid flash during server-side hydration */
        bottom: 0;
        left: 0;
        right: 0;
        top: 0;
      }
    `), waveKeyframe, (theme.vars || theme).palette.action.hover));
var Skeleton = React84.forwardRef(function Skeleton2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiSkeleton"
  });
  const {
    animation = "pulse",
    className,
    component = "span",
    height,
    style: style2,
    variant = "text",
    width
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded59);
  const ownerState = _extends({}, props, {
    animation,
    component,
    variant,
    hasChildren: Boolean(other.children)
  });
  const classes2 = useUtilityClasses54(ownerState);
  return (0, import_jsx_runtime97.jsx)(SkeletonRoot, _extends({
    as: component,
    ref,
    className: clsx_m_default(classes2.root, className),
    ownerState
  }, other, {
    style: _extends({
      width,
      height
    }, style2)
  }));
});
true ? Skeleton.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The animation.
   * If `false` the animation effect is disabled.
   * @default 'pulse'
   */
  animation: import_prop_types66.default.oneOf(["pulse", "wave", false]),
  /**
   * Optional children to infer width and height from.
   */
  children: import_prop_types66.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types66.default.object,
  /**
   * @ignore
   */
  className: import_prop_types66.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types66.default.elementType,
  /**
   * Height of the skeleton.
   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.
   */
  height: import_prop_types66.default.oneOfType([import_prop_types66.default.number, import_prop_types66.default.string]),
  /**
   * @ignore
   */
  style: import_prop_types66.default.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types66.default.oneOfType([import_prop_types66.default.arrayOf(import_prop_types66.default.oneOfType([import_prop_types66.default.func, import_prop_types66.default.object, import_prop_types66.default.bool])), import_prop_types66.default.func, import_prop_types66.default.object]),
  /**
   * The type of content that will be rendered.
   * @default 'text'
   */
  variant: import_prop_types66.default.oneOfType([import_prop_types66.default.oneOf(["circular", "rectangular", "rounded", "text"]), import_prop_types66.default.string]),
  /**
   * Width of the skeleton.
   * Useful when the skeleton is inside an inline element with no width of its own.
   */
  width: import_prop_types66.default.oneOfType([import_prop_types66.default.number, import_prop_types66.default.string])
} : void 0;

// node_modules/@mui/material/Slider/Slider.js
init_objectWithoutPropertiesLoose();
init_extends();
var React86 = __toESM(require_react());
var import_prop_types68 = __toESM(require_prop_types());
init_clsx_m();
init_esm();
init_base();
init_SliderUnstyled();
init_esm2();
init_useThemeProps();
init_styled();
init_capitalize();

// node_modules/@mui/material/Slider/SliderValueLabel.js
var React85 = __toESM(require_react());
var import_prop_types67 = __toESM(require_prop_types());
init_clsx_m();

// node_modules/@mui/material/Slider/sliderClasses.js
init_esm();
init_generateUtilityClass();
function getSliderUtilityClass(slot) {
  return generateUtilityClass("MuiSlider", slot);
}
var sliderClasses = generateUtilityClasses("MuiSlider", ["root", "active", "colorPrimary", "colorSecondary", "disabled", "dragging", "focusVisible", "mark", "markActive", "marked", "markLabel", "markLabelActive", "rail", "sizeSmall", "thumb", "thumbColorPrimary", "thumbColorSecondary", "track", "trackInverted", "trackFalse", "thumbSizeSmall", "valueLabel", "valueLabelOpen", "valueLabelCircle", "valueLabelLabel", "vertical"]);
var sliderClasses_default = sliderClasses;

// node_modules/@mui/material/Slider/SliderValueLabel.js
var import_jsx_runtime98 = __toESM(require_jsx_runtime());
var import_jsx_runtime99 = __toESM(require_jsx_runtime());
var useValueLabelClasses = (props) => {
  const {
    open
  } = props;
  const utilityClasses = {
    offset: clsx_m_default(open && sliderClasses_default.valueLabelOpen),
    circle: sliderClasses_default.valueLabelCircle,
    label: sliderClasses_default.valueLabelLabel
  };
  return utilityClasses;
};
function SliderValueLabel(props) {
  const {
    children,
    className,
    value
  } = props;
  const classes2 = useValueLabelClasses(props);
  if (!children) {
    return null;
  }
  return React85.cloneElement(children, {
    className: clsx_m_default(children.props.className)
  }, (0, import_jsx_runtime99.jsxs)(React85.Fragment, {
    children: [children.props.children, (0, import_jsx_runtime98.jsx)("span", {
      className: clsx_m_default(classes2.offset, className),
      "aria-hidden": true,
      children: (0, import_jsx_runtime98.jsx)("span", {
        className: classes2.circle,
        children: (0, import_jsx_runtime98.jsx)("span", {
          className: classes2.label,
          children: value
        })
      })
    })]
  }));
}
true ? SliderValueLabel.propTypes = {
  children: import_prop_types67.default.element.isRequired,
  className: import_prop_types67.default.string,
  value: import_prop_types67.default.node
} : void 0;

// node_modules/@mui/material/Slider/Slider.js
var import_jsx_runtime100 = __toESM(require_jsx_runtime());
var import_jsx_runtime101 = __toESM(require_jsx_runtime());
var _excluded60 = ["aria-label", "aria-valuetext", "aria-labelledby", "component", "components", "componentsProps", "color", "classes", "className", "disableSwap", "disabled", "getAriaLabel", "getAriaValueText", "marks", "max", "min", "name", "onChange", "onChangeCommitted", "orientation", "size", "step", "scale", "slotProps", "slots", "tabIndex", "track", "value", "valueLabelDisplay", "valueLabelFormat"];
var valueToPercent = (value, min3, max3) => (value - min3) * 100 / (max3 - min3);
function Identity(x2) {
  return x2;
}
var SliderRoot = styled_default("span", {
  name: "MuiSlider",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, styles20[`color${capitalize_default(ownerState.color)}`], ownerState.size !== "medium" && styles20[`size${capitalize_default(ownerState.size)}`], ownerState.marked && styles20.marked, ownerState.orientation === "vertical" && styles20.vertical, ownerState.track === "inverted" && styles20.trackInverted, ownerState.track === false && styles20.trackFalse];
  }
})(({
  theme,
  ownerState
}) => _extends({
  borderRadius: 12,
  boxSizing: "content-box",
  display: "inline-block",
  position: "relative",
  cursor: "pointer",
  touchAction: "none",
  color: (theme.vars || theme).palette[ownerState.color].main,
  WebkitTapHighlightColor: "transparent"
}, ownerState.orientation === "horizontal" && _extends({
  height: 4,
  width: "100%",
  padding: "13px 0",
  // The primary input mechanism of the device includes a pointing device of limited accuracy.
  "@media (pointer: coarse)": {
    // Reach 42px touch target, about ~8mm on screen.
    padding: "20px 0"
  }
}, ownerState.size === "small" && {
  height: 2
}, ownerState.marked && {
  marginBottom: 20
}), ownerState.orientation === "vertical" && _extends({
  height: "100%",
  width: 4,
  padding: "0 13px",
  // The primary input mechanism of the device includes a pointing device of limited accuracy.
  "@media (pointer: coarse)": {
    // Reach 42px touch target, about ~8mm on screen.
    padding: "0 20px"
  }
}, ownerState.size === "small" && {
  width: 2
}, ownerState.marked && {
  marginRight: 44
}), {
  "@media print": {
    colorAdjust: "exact"
  },
  [`&.${sliderClasses_default.disabled}`]: {
    pointerEvents: "none",
    cursor: "default",
    color: (theme.vars || theme).palette.grey[400]
  },
  [`&.${sliderClasses_default.dragging}`]: {
    [`& .${sliderClasses_default.thumb}, & .${sliderClasses_default.track}`]: {
      transition: "none"
    }
  }
}));
true ? SliderRoot.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  children: import_prop_types68.default.node
} : void 0;
var SliderRail = styled_default("span", {
  name: "MuiSlider",
  slot: "Rail",
  overridesResolver: (props, styles20) => styles20.rail
})(({
  ownerState
}) => _extends({
  display: "block",
  position: "absolute",
  borderRadius: "inherit",
  backgroundColor: "currentColor",
  opacity: 0.38
}, ownerState.orientation === "horizontal" && {
  width: "100%",
  height: "inherit",
  top: "50%",
  transform: "translateY(-50%)"
}, ownerState.orientation === "vertical" && {
  height: "100%",
  width: "inherit",
  left: "50%",
  transform: "translateX(-50%)"
}, ownerState.track === "inverted" && {
  opacity: 1
}));
true ? SliderRail.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  children: import_prop_types68.default.node
} : void 0;
var SliderTrack = styled_default("span", {
  name: "MuiSlider",
  slot: "Track",
  overridesResolver: (props, styles20) => styles20.track
})(({
  theme,
  ownerState
}) => {
  const color2 = (
    // Same logic as the LinearProgress track color
    theme.palette.mode === "light" ? lighten(theme.palette[ownerState.color].main, 0.62) : darken(theme.palette[ownerState.color].main, 0.5)
  );
  return _extends({
    display: "block",
    position: "absolute",
    borderRadius: "inherit",
    border: "1px solid currentColor",
    backgroundColor: "currentColor",
    transition: theme.transitions.create(["left", "width", "bottom", "height"], {
      duration: theme.transitions.duration.shortest
    })
  }, ownerState.size === "small" && {
    border: "none"
  }, ownerState.orientation === "horizontal" && {
    height: "inherit",
    top: "50%",
    transform: "translateY(-50%)"
  }, ownerState.orientation === "vertical" && {
    width: "inherit",
    left: "50%",
    transform: "translateX(-50%)"
  }, ownerState.track === false && {
    display: "none"
  }, ownerState.track === "inverted" && {
    backgroundColor: theme.vars ? theme.vars.palette.Slider[`${ownerState.color}Track`] : color2,
    borderColor: theme.vars ? theme.vars.palette.Slider[`${ownerState.color}Track`] : color2
  });
});
true ? SliderTrack.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  children: import_prop_types68.default.node
} : void 0;
var SliderThumb = styled_default("span", {
  name: "MuiSlider",
  slot: "Thumb",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.thumb, styles20[`thumbColor${capitalize_default(ownerState.color)}`], ownerState.size !== "medium" && styles20[`thumbSize${capitalize_default(ownerState.size)}`]];
  }
})(({
  theme,
  ownerState
}) => _extends({
  position: "absolute",
  width: 20,
  height: 20,
  boxSizing: "border-box",
  borderRadius: "50%",
  outline: 0,
  backgroundColor: "currentColor",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  transition: theme.transitions.create(["box-shadow", "left", "bottom"], {
    duration: theme.transitions.duration.shortest
  })
}, ownerState.size === "small" && {
  width: 12,
  height: 12
}, ownerState.orientation === "horizontal" && {
  top: "50%",
  transform: "translate(-50%, -50%)"
}, ownerState.orientation === "vertical" && {
  left: "50%",
  transform: "translate(-50%, 50%)"
}, {
  "&:before": _extends({
    position: "absolute",
    content: '""',
    borderRadius: "inherit",
    width: "100%",
    height: "100%",
    boxShadow: (theme.vars || theme).shadows[2]
  }, ownerState.size === "small" && {
    boxShadow: "none"
  }),
  "&::after": {
    position: "absolute",
    content: '""',
    borderRadius: "50%",
    // 42px is the hit target
    width: 42,
    height: 42,
    top: "50%",
    left: "50%",
    transform: "translate(-50%, -50%)"
  },
  [`&:hover, &.${sliderClasses_default.focusVisible}`]: {
    boxShadow: `0px 0px 0px 8px ${theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.16)` : alpha(theme.palette[ownerState.color].main, 0.16)}`,
    "@media (hover: none)": {
      boxShadow: "none"
    }
  },
  [`&.${sliderClasses_default.active}`]: {
    boxShadow: `0px 0px 0px 14px ${theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.16)` : alpha(theme.palette[ownerState.color].main, 0.16)}`
  },
  [`&.${sliderClasses_default.disabled}`]: {
    "&:hover": {
      boxShadow: "none"
    }
  }
}));
true ? SliderThumb.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  children: import_prop_types68.default.node
} : void 0;
var StyledSliderValueLabel = styled_default(SliderValueLabel, {
  name: "MuiSlider",
  slot: "ValueLabel",
  overridesResolver: (props, styles20) => styles20.valueLabel
})(({
  theme,
  ownerState
}) => _extends({
  [`&.${sliderClasses_default.valueLabelOpen}`]: {
    transform: "translateY(-100%) scale(1)"
  },
  zIndex: 1,
  whiteSpace: "nowrap"
}, theme.typography.body2, {
  fontWeight: 500,
  transition: theme.transitions.create(["transform"], {
    duration: theme.transitions.duration.shortest
  }),
  transform: "translateY(-100%) scale(0)",
  position: "absolute",
  backgroundColor: (theme.vars || theme).palette.grey[600],
  borderRadius: 2,
  color: (theme.vars || theme).palette.common.white,
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  padding: "0.25rem 0.75rem"
}, ownerState.orientation === "horizontal" && {
  top: "-10px",
  transformOrigin: "bottom center",
  "&:before": {
    position: "absolute",
    content: '""',
    width: 8,
    height: 8,
    transform: "translate(-50%, 50%) rotate(45deg)",
    backgroundColor: "inherit",
    bottom: 0,
    left: "50%"
  }
}, ownerState.orientation === "vertical" && {
  right: "30px",
  top: "24px",
  transformOrigin: "right center",
  "&:before": {
    position: "absolute",
    content: '""',
    width: 8,
    height: 8,
    transform: "translate(-50%, 50%) rotate(45deg)",
    backgroundColor: "inherit",
    right: "-20%",
    top: "25%"
  }
}, ownerState.size === "small" && {
  fontSize: theme.typography.pxToRem(12),
  padding: "0.25rem 0.5rem"
}));
true ? StyledSliderValueLabel.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  children: import_prop_types68.default.node
} : void 0;
var SliderMark = styled_default("span", {
  name: "MuiSlider",
  slot: "Mark",
  shouldForwardProp: (prop) => slotShouldForwardProp(prop) && prop !== "markActive",
  overridesResolver: (props, styles20) => {
    const {
      markActive
    } = props;
    return [styles20.mark, markActive && styles20.markActive];
  }
})(({
  theme,
  ownerState,
  markActive
}) => _extends({
  position: "absolute",
  width: 2,
  height: 2,
  borderRadius: 1,
  backgroundColor: "currentColor"
}, ownerState.orientation === "horizontal" && {
  top: "50%",
  transform: "translate(-1px, -50%)"
}, ownerState.orientation === "vertical" && {
  left: "50%",
  transform: "translate(-50%, 1px)"
}, markActive && {
  backgroundColor: (theme.vars || theme).palette.background.paper,
  opacity: 0.8
}));
true ? SliderMark.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  children: import_prop_types68.default.node
} : void 0;
var SliderMarkLabel = styled_default("span", {
  name: "MuiSlider",
  slot: "MarkLabel",
  shouldForwardProp: (prop) => slotShouldForwardProp(prop) && prop !== "markLabelActive",
  overridesResolver: (props, styles20) => styles20.markLabel
})(({
  theme,
  ownerState,
  markLabelActive
}) => _extends({}, theme.typography.body2, {
  color: (theme.vars || theme).palette.text.secondary,
  position: "absolute",
  whiteSpace: "nowrap"
}, ownerState.orientation === "horizontal" && {
  top: 30,
  transform: "translateX(-50%)",
  "@media (pointer: coarse)": {
    top: 40
  }
}, ownerState.orientation === "vertical" && {
  left: 36,
  transform: "translateY(50%)",
  "@media (pointer: coarse)": {
    left: 44
  }
}, markLabelActive && {
  color: (theme.vars || theme).palette.text.primary
}));
true ? SliderMarkLabel.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * @ignore
   */
  children: import_prop_types68.default.node
} : void 0;
var useUtilityClasses55 = (ownerState) => {
  const {
    disabled,
    dragging,
    marked,
    orientation,
    track,
    classes: classes2,
    color: color2,
    size
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", dragging && "dragging", marked && "marked", orientation === "vertical" && "vertical", track === "inverted" && "trackInverted", track === false && "trackFalse", color2 && `color${capitalize_default(color2)}`, size && `size${capitalize_default(size)}`],
    rail: ["rail"],
    track: ["track"],
    mark: ["mark"],
    markActive: ["markActive"],
    markLabel: ["markLabel"],
    markLabelActive: ["markLabelActive"],
    valueLabel: ["valueLabel"],
    thumb: ["thumb", disabled && "disabled", size && `thumbSize${capitalize_default(size)}`, color2 && `thumbColor${capitalize_default(color2)}`],
    active: ["active"],
    disabled: ["disabled"],
    focusVisible: ["focusVisible"]
  };
  return composeClasses(slots, getSliderUtilityClass, classes2);
};
var Forward = ({
  children
}) => children;
var Slider = React86.forwardRef(function Slider2(inputProps, ref) {
  var _ref, _slots$root, _ref2, _slots$rail, _ref3, _slots$track, _ref4, _slots$thumb, _ref5, _slots$valueLabel, _ref6, _slots$mark, _ref7, _slots$markLabel, _ref8, _slots$input, _slotProps$root, _slotProps$rail, _slotProps$track, _slotProps$thumb, _slotProps$valueLabel, _slotProps$mark, _slotProps$markLabel, _slotProps$input;
  const props = useThemeProps2({
    props: inputProps,
    name: "MuiSlider"
  });
  const theme = useTheme();
  const isRtl = theme.direction === "rtl";
  const {
    "aria-label": ariaLabel,
    "aria-valuetext": ariaValuetext,
    "aria-labelledby": ariaLabelledby,
    // eslint-disable-next-line react/prop-types
    component = "span",
    components = {},
    componentsProps = {},
    color: color2 = "primary",
    classes: classesProp,
    // eslint-disable-next-line react/prop-types
    className,
    disableSwap = false,
    disabled = false,
    getAriaLabel,
    getAriaValueText,
    marks: marksProp = false,
    max: max3 = 100,
    min: min3 = 0,
    orientation = "horizontal",
    size = "medium",
    step = 1,
    scale = Identity,
    slotProps,
    slots,
    track = "normal",
    valueLabelDisplay = "off",
    valueLabelFormat = Identity
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded60);
  const ownerState = _extends({}, props, {
    isRtl,
    max: max3,
    min: min3,
    classes: classesProp,
    disabled,
    disableSwap,
    orientation,
    marks: marksProp,
    color: color2,
    size,
    step,
    scale,
    track,
    valueLabelDisplay,
    valueLabelFormat
  });
  const {
    axisProps,
    getRootProps,
    getHiddenInputProps,
    getThumbProps,
    open,
    active,
    axis,
    focusedThumbIndex,
    range,
    dragging,
    marks,
    values,
    trackOffset,
    trackLeap
  } = useSlider(_extends({}, ownerState, {
    ref
  }));
  ownerState.marked = marks.length > 0 && marks.some((mark) => mark.label);
  ownerState.dragging = dragging;
  ownerState.focusedThumbIndex = focusedThumbIndex;
  const classes2 = useUtilityClasses55(ownerState);
  const RootSlot = (_ref = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components.Root) != null ? _ref : SliderRoot;
  const RailSlot = (_ref2 = (_slots$rail = slots == null ? void 0 : slots.rail) != null ? _slots$rail : components.Rail) != null ? _ref2 : SliderRail;
  const TrackSlot = (_ref3 = (_slots$track = slots == null ? void 0 : slots.track) != null ? _slots$track : components.Track) != null ? _ref3 : SliderTrack;
  const ThumbSlot = (_ref4 = (_slots$thumb = slots == null ? void 0 : slots.thumb) != null ? _slots$thumb : components.Thumb) != null ? _ref4 : SliderThumb;
  const ValueLabelSlot = (_ref5 = (_slots$valueLabel = slots == null ? void 0 : slots.valueLabel) != null ? _slots$valueLabel : components.ValueLabel) != null ? _ref5 : StyledSliderValueLabel;
  const MarkSlot = (_ref6 = (_slots$mark = slots == null ? void 0 : slots.mark) != null ? _slots$mark : components.Mark) != null ? _ref6 : SliderMark;
  const MarkLabelSlot = (_ref7 = (_slots$markLabel = slots == null ? void 0 : slots.markLabel) != null ? _slots$markLabel : components.MarkLabel) != null ? _ref7 : SliderMarkLabel;
  const InputSlot = (_ref8 = (_slots$input = slots == null ? void 0 : slots.input) != null ? _slots$input : components.Input) != null ? _ref8 : "input";
  const rootSlotProps = (_slotProps$root = slotProps == null ? void 0 : slotProps.root) != null ? _slotProps$root : componentsProps.root;
  const railSlotProps = (_slotProps$rail = slotProps == null ? void 0 : slotProps.rail) != null ? _slotProps$rail : componentsProps.rail;
  const trackSlotProps = (_slotProps$track = slotProps == null ? void 0 : slotProps.track) != null ? _slotProps$track : componentsProps.track;
  const thumbSlotProps = (_slotProps$thumb = slotProps == null ? void 0 : slotProps.thumb) != null ? _slotProps$thumb : componentsProps.thumb;
  const valueLabelSlotProps = (_slotProps$valueLabel = slotProps == null ? void 0 : slotProps.valueLabel) != null ? _slotProps$valueLabel : componentsProps.valueLabel;
  const markSlotProps = (_slotProps$mark = slotProps == null ? void 0 : slotProps.mark) != null ? _slotProps$mark : componentsProps.mark;
  const markLabelSlotProps = (_slotProps$markLabel = slotProps == null ? void 0 : slotProps.markLabel) != null ? _slotProps$markLabel : componentsProps.markLabel;
  const inputSlotProps = (_slotProps$input = slotProps == null ? void 0 : slotProps.input) != null ? _slotProps$input : componentsProps.input;
  const rootProps = useSlotProps({
    elementType: RootSlot,
    getSlotProps: getRootProps,
    externalSlotProps: rootSlotProps,
    externalForwardedProps: other,
    additionalProps: _extends({}, shouldSpreadAdditionalProps_default(RootSlot) && {
      as: component
    }),
    ownerState: _extends({}, ownerState, rootSlotProps == null ? void 0 : rootSlotProps.ownerState),
    className: [classes2.root, className]
  });
  const railProps = useSlotProps({
    elementType: RailSlot,
    externalSlotProps: railSlotProps,
    ownerState,
    className: classes2.rail
  });
  const trackProps = useSlotProps({
    elementType: TrackSlot,
    externalSlotProps: trackSlotProps,
    additionalProps: {
      style: _extends({}, axisProps[axis].offset(trackOffset), axisProps[axis].leap(trackLeap))
    },
    ownerState: _extends({}, ownerState, trackSlotProps == null ? void 0 : trackSlotProps.ownerState),
    className: classes2.track
  });
  const thumbProps = useSlotProps({
    elementType: ThumbSlot,
    getSlotProps: getThumbProps,
    externalSlotProps: thumbSlotProps,
    ownerState: _extends({}, ownerState, thumbSlotProps == null ? void 0 : thumbSlotProps.ownerState)
  });
  const valueLabelProps = useSlotProps({
    elementType: ValueLabelSlot,
    externalSlotProps: valueLabelSlotProps,
    ownerState: _extends({}, ownerState, valueLabelSlotProps == null ? void 0 : valueLabelSlotProps.ownerState),
    className: classes2.valueLabel
  });
  const markProps = useSlotProps({
    elementType: MarkSlot,
    externalSlotProps: markSlotProps,
    ownerState,
    className: classes2.mark
  });
  const markLabelProps = useSlotProps({
    elementType: MarkLabelSlot,
    externalSlotProps: markLabelSlotProps,
    ownerState
  });
  const inputSliderProps = useSlotProps({
    elementType: InputSlot,
    getSlotProps: getHiddenInputProps,
    externalSlotProps: inputSlotProps,
    ownerState
  });
  return (0, import_jsx_runtime101.jsxs)(RootSlot, _extends({}, rootProps, {
    children: [(0, import_jsx_runtime100.jsx)(RailSlot, _extends({}, railProps)), (0, import_jsx_runtime100.jsx)(TrackSlot, _extends({}, trackProps)), marks.filter((mark) => mark.value >= min3 && mark.value <= max3).map((mark, index2) => {
      const percent = valueToPercent(mark.value, min3, max3);
      const style2 = axisProps[axis].offset(percent);
      let markActive;
      if (track === false) {
        markActive = values.indexOf(mark.value) !== -1;
      } else {
        markActive = track === "normal" && (range ? mark.value >= values[0] && mark.value <= values[values.length - 1] : mark.value <= values[0]) || track === "inverted" && (range ? mark.value <= values[0] || mark.value >= values[values.length - 1] : mark.value >= values[0]);
      }
      return (0, import_jsx_runtime101.jsxs)(React86.Fragment, {
        children: [(0, import_jsx_runtime100.jsx)(MarkSlot, _extends({
          "data-index": index2
        }, markProps, !isHostComponent_default(MarkSlot) && {
          markActive
        }, {
          style: _extends({}, style2, markProps.style),
          className: clsx_m_default(markProps.className, markActive && classes2.markActive)
        })), mark.label != null ? (0, import_jsx_runtime100.jsx)(MarkLabelSlot, _extends({
          "aria-hidden": true,
          "data-index": index2
        }, markLabelProps, !isHostComponent_default(MarkLabelSlot) && {
          markLabelActive: markActive
        }, {
          style: _extends({}, style2, markLabelProps.style),
          className: clsx_m_default(classes2.markLabel, markLabelProps.className, markActive && classes2.markLabelActive),
          children: mark.label
        })) : null]
      }, index2);
    }), values.map((value, index2) => {
      const percent = valueToPercent(value, min3, max3);
      const style2 = axisProps[axis].offset(percent);
      const ValueLabelComponent = valueLabelDisplay === "off" ? Forward : ValueLabelSlot;
      return (0, import_jsx_runtime100.jsx)(React86.Fragment, {
        children: (0, import_jsx_runtime100.jsx)(ValueLabelComponent, _extends({}, !isHostComponent_default(ValueLabelComponent) && {
          valueLabelFormat,
          valueLabelDisplay,
          value: typeof valueLabelFormat === "function" ? valueLabelFormat(scale(value), index2) : valueLabelFormat,
          index: index2,
          open: open === index2 || active === index2 || valueLabelDisplay === "on",
          disabled
        }, valueLabelProps, {
          children: (0, import_jsx_runtime100.jsx)(ThumbSlot, _extends({
            "data-index": index2,
            "data-focusvisible": focusedThumbIndex === index2
          }, thumbProps, {
            className: clsx_m_default(classes2.thumb, thumbProps.className, active === index2 && classes2.active, focusedThumbIndex === index2 && classes2.focusVisible),
            style: _extends({}, style2, {
              pointerEvents: disableSwap && active !== index2 ? "none" : void 0
            }, thumbProps.style),
            children: (0, import_jsx_runtime100.jsx)(InputSlot, _extends({
              "data-index": index2,
              "aria-label": getAriaLabel ? getAriaLabel(index2) : ariaLabel,
              "aria-valuenow": scale(value),
              "aria-labelledby": ariaLabelledby,
              "aria-valuetext": getAriaValueText ? getAriaValueText(scale(value), index2) : ariaValuetext,
              value: values[index2]
            }, inputSliderProps))
          }))
        }))
      }, index2);
    })]
  }));
});
true ? Slider.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The label of the slider.
   */
  "aria-label": chainPropTypes(import_prop_types68.default.string, (props) => {
    const range = Array.isArray(props.value || props.defaultValue);
    if (range && props["aria-label"] != null) {
      return new Error("MUI: You need to use the `getAriaLabel` prop instead of `aria-label` when using a range slider.");
    }
    return null;
  }),
  /**
   * The id of the element containing a label for the slider.
   */
  "aria-labelledby": import_prop_types68.default.string,
  /**
   * A string value that provides a user-friendly name for the current value of the slider.
   */
  "aria-valuetext": chainPropTypes(import_prop_types68.default.string, (props) => {
    const range = Array.isArray(props.value || props.defaultValue);
    if (range && props["aria-valuetext"] != null) {
      return new Error("MUI: You need to use the `getAriaValueText` prop instead of `aria-valuetext` when using a range slider.");
    }
    return null;
  }),
  /**
   * @ignore
   */
  children: import_prop_types68.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types68.default.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'primary'
   */
  color: import_prop_types68.default.oneOfType([import_prop_types68.default.oneOf(["primary", "secondary"]), import_prop_types68.default.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: import_prop_types68.default.shape({
    Input: import_prop_types68.default.elementType,
    Mark: import_prop_types68.default.elementType,
    MarkLabel: import_prop_types68.default.elementType,
    Rail: import_prop_types68.default.elementType,
    Root: import_prop_types68.default.elementType,
    Thumb: import_prop_types68.default.elementType,
    Track: import_prop_types68.default.elementType,
    ValueLabel: import_prop_types68.default.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: import_prop_types68.default.shape({
    input: import_prop_types68.default.oneOfType([import_prop_types68.default.func, import_prop_types68.default.object]),
    mark: import_prop_types68.default.oneOfType([import_prop_types68.default.func, import_prop_types68.default.object]),
    markLabel: import_prop_types68.default.oneOfType([import_prop_types68.default.func, import_prop_types68.default.object]),
    rail: import_prop_types68.default.oneOfType([import_prop_types68.default.func, import_prop_types68.default.object]),
    root: import_prop_types68.default.oneOfType([import_prop_types68.default.func, import_prop_types68.default.object]),
    thumb: import_prop_types68.default.oneOfType([import_prop_types68.default.func, import_prop_types68.default.object]),
    track: import_prop_types68.default.oneOfType([import_prop_types68.default.func, import_prop_types68.default.object]),
    valueLabel: import_prop_types68.default.oneOfType([import_prop_types68.default.func, import_prop_types68.default.shape({
      children: import_prop_types68.default.element,
      className: import_prop_types68.default.string,
      open: import_prop_types68.default.bool,
      style: import_prop_types68.default.object,
      value: import_prop_types68.default.number,
      valueLabelDisplay: import_prop_types68.default.oneOf(["auto", "off", "on"])
    })])
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: import_prop_types68.default.oneOfType([import_prop_types68.default.arrayOf(import_prop_types68.default.number), import_prop_types68.default.number]),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types68.default.bool,
  /**
   * If `true`, the active thumb doesn't swap when moving pointer over a thumb while dragging another thumb.
   * @default false
   */
  disableSwap: import_prop_types68.default.bool,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the thumb labels of the slider.
   * This is important for screen reader users.
   * @param {number} index The thumb label's index to format.
   * @returns {string}
   */
  getAriaLabel: import_prop_types68.default.func,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current value of the slider.
   * This is important for screen reader users.
   * @param {number} value The thumb label's value to format.
   * @param {number} index The thumb label's index to format.
   * @returns {string}
   */
  getAriaValueText: import_prop_types68.default.func,
  /**
   * Marks indicate predetermined values to which the user can move the slider.
   * If `true` the marks are spaced according the value of the `step` prop.
   * If an array, it should contain objects with `value` and an optional `label` keys.
   * @default false
   */
  marks: import_prop_types68.default.oneOfType([import_prop_types68.default.arrayOf(import_prop_types68.default.shape({
    label: import_prop_types68.default.node,
    value: import_prop_types68.default.number.isRequired
  })), import_prop_types68.default.bool]),
  /**
   * The maximum allowed value of the slider.
   * Should not be equal to min.
   * @default 100
   */
  max: import_prop_types68.default.number,
  /**
   * The minimum allowed value of the slider.
   * Should not be equal to max.
   * @default 0
   */
  min: import_prop_types68.default.number,
  /**
   * Name attribute of the hidden `input` element.
   */
  name: import_prop_types68.default.string,
  /**
   * Callback function that is fired when the slider's value changed.
   *
   * @param {Event} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * **Warning**: This is a generic event not a change event.
   * @param {number | number[]} value The new value.
   * @param {number} activeThumb Index of the currently moved thumb.
   */
  onChange: import_prop_types68.default.func,
  /**
   * Callback function that is fired when the `mouseup` is triggered.
   *
   * @param {React.SyntheticEvent | Event} event The event source of the callback. **Warning**: This is a generic event not a change event.
   * @param {number | number[]} value The new value.
   */
  onChangeCommitted: import_prop_types68.default.func,
  /**
   * The component orientation.
   * @default 'horizontal'
   */
  orientation: import_prop_types68.default.oneOf(["horizontal", "vertical"]),
  /**
   * A transformation function, to change the scale of the slider.
   * @param {any} x
   * @returns {any}
   * @default function Identity(x) {
   *   return x;
   * }
   */
  scale: import_prop_types68.default.func,
  /**
   * The size of the slider.
   * @default 'medium'
   */
  size: import_prop_types68.default.oneOfType([import_prop_types68.default.oneOf(["small", "medium"]), import_prop_types68.default.string]),
  /**
   * The props used for each slot inside the Slider.
   * @default {}
   */
  slotProps: import_prop_types68.default.shape({
    input: import_prop_types68.default.oneOfType([import_prop_types68.default.func, import_prop_types68.default.object]),
    mark: import_prop_types68.default.oneOfType([import_prop_types68.default.func, import_prop_types68.default.object]),
    markLabel: import_prop_types68.default.oneOfType([import_prop_types68.default.func, import_prop_types68.default.object]),
    rail: import_prop_types68.default.oneOfType([import_prop_types68.default.func, import_prop_types68.default.object]),
    root: import_prop_types68.default.oneOfType([import_prop_types68.default.func, import_prop_types68.default.object]),
    thumb: import_prop_types68.default.oneOfType([import_prop_types68.default.func, import_prop_types68.default.object]),
    track: import_prop_types68.default.oneOfType([import_prop_types68.default.func, import_prop_types68.default.object]),
    valueLabel: import_prop_types68.default.oneOfType([import_prop_types68.default.func, import_prop_types68.default.shape({
      children: import_prop_types68.default.element,
      className: import_prop_types68.default.string,
      open: import_prop_types68.default.bool,
      style: import_prop_types68.default.object,
      value: import_prop_types68.default.number,
      valueLabelDisplay: import_prop_types68.default.oneOf(["auto", "off", "on"])
    })])
  }),
  /**
   * The components used for each slot inside the Slider.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: import_prop_types68.default.shape({
    input: import_prop_types68.default.elementType,
    mark: import_prop_types68.default.elementType,
    markLabel: import_prop_types68.default.elementType,
    rail: import_prop_types68.default.elementType,
    root: import_prop_types68.default.elementType,
    thumb: import_prop_types68.default.elementType,
    track: import_prop_types68.default.elementType,
    valueLabel: import_prop_types68.default.elementType
  }),
  /**
   * The granularity with which the slider can step through values. (A "discrete" slider.)
   * The `min` prop serves as the origin for the valid values.
   * We recommend (max - min) to be evenly divisible by the step.
   *
   * When step is `null`, the thumb can only be slid onto marks provided with the `marks` prop.
   * @default 1
   */
  step: import_prop_types68.default.number,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types68.default.oneOfType([import_prop_types68.default.arrayOf(import_prop_types68.default.oneOfType([import_prop_types68.default.func, import_prop_types68.default.object, import_prop_types68.default.bool])), import_prop_types68.default.func, import_prop_types68.default.object]),
  /**
   * Tab index attribute of the hidden `input` element.
   */
  tabIndex: import_prop_types68.default.number,
  /**
   * The track presentation:
   *
   * - `normal` the track will render a bar representing the slider value.
   * - `inverted` the track will render a bar representing the remaining slider value.
   * - `false` the track will render without a bar.
   * @default 'normal'
   */
  track: import_prop_types68.default.oneOf(["inverted", "normal", false]),
  /**
   * The value of the slider.
   * For ranged sliders, provide an array with two values.
   */
  value: import_prop_types68.default.oneOfType([import_prop_types68.default.arrayOf(import_prop_types68.default.number), import_prop_types68.default.number]),
  /**
   * Controls when the value label is displayed:
   *
   * - `auto` the value label will display when the thumb is hovered or focused.
   * - `on` will display persistently.
   * - `off` will never display.
   * @default 'off'
   */
  valueLabelDisplay: import_prop_types68.default.oneOf(["auto", "off", "on"]),
  /**
   * The format function the value label's value.
   *
   * When a function is provided, it should have the following signature:
   *
   * - {number} value The value label's value to format
   * - {number} index The value label's index to format
   * @param {any} x
   * @returns {any}
   * @default function Identity(x) {
   *   return x;
   * }
   */
  valueLabelFormat: import_prop_types68.default.oneOfType([import_prop_types68.default.func, import_prop_types68.default.string])
} : void 0;

// node_modules/@mui/material/Snackbar/Snackbar.js
init_objectWithoutPropertiesLoose();
init_extends();
var React88 = __toESM(require_react());
var import_prop_types70 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_ClickAwayListener();
init_styled();
init_useThemeProps();
init_useEventCallback();
init_capitalize();

// node_modules/@mui/material/SnackbarContent/SnackbarContent.js
init_objectWithoutPropertiesLoose();
init_extends();
var React87 = __toESM(require_react());
var import_prop_types69 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_esm2();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/SnackbarContent/snackbarContentClasses.js
init_esm();
init_generateUtilityClass();
function getSnackbarContentUtilityClass(slot) {
  return generateUtilityClass("MuiSnackbarContent", slot);
}
var snackbarContentClasses = generateUtilityClasses("MuiSnackbarContent", ["root", "message", "action"]);

// node_modules/@mui/material/SnackbarContent/SnackbarContent.js
var import_jsx_runtime102 = __toESM(require_jsx_runtime());
var import_jsx_runtime103 = __toESM(require_jsx_runtime());
var _excluded61 = ["action", "className", "message", "role"];
var useUtilityClasses56 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"],
    action: ["action"],
    message: ["message"]
  };
  return composeClasses(slots, getSnackbarContentUtilityClass, classes2);
};
var SnackbarContentRoot = styled_default(Paper_default, {
  name: "MuiSnackbarContent",
  slot: "Root",
  overridesResolver: (props, styles20) => styles20.root
})(({
  theme
}) => {
  const emphasis = theme.palette.mode === "light" ? 0.8 : 0.98;
  const backgroundColor = emphasize(theme.palette.background.default, emphasis);
  return _extends({}, theme.typography.body2, {
    color: theme.vars ? theme.vars.palette.SnackbarContent.color : theme.palette.getContrastText(backgroundColor),
    backgroundColor: theme.vars ? theme.vars.palette.SnackbarContent.bg : backgroundColor,
    display: "flex",
    alignItems: "center",
    flexWrap: "wrap",
    padding: "6px 16px",
    borderRadius: (theme.vars || theme).shape.borderRadius,
    flexGrow: 1,
    [theme.breakpoints.up("sm")]: {
      flexGrow: "initial",
      minWidth: 288
    }
  });
});
var SnackbarContentMessage = styled_default("div", {
  name: "MuiSnackbarContent",
  slot: "Message",
  overridesResolver: (props, styles20) => styles20.message
})({
  padding: "8px 0"
});
var SnackbarContentAction = styled_default("div", {
  name: "MuiSnackbarContent",
  slot: "Action",
  overridesResolver: (props, styles20) => styles20.action
})({
  display: "flex",
  alignItems: "center",
  marginLeft: "auto",
  paddingLeft: 16,
  marginRight: -8
});
var SnackbarContent = React87.forwardRef(function SnackbarContent2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiSnackbarContent"
  });
  const {
    action,
    className,
    message,
    role = "alert"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded61);
  const ownerState = props;
  const classes2 = useUtilityClasses56(ownerState);
  return (0, import_jsx_runtime103.jsxs)(SnackbarContentRoot, _extends({
    role,
    square: true,
    elevation: 6,
    className: clsx_m_default(classes2.root, className),
    ownerState,
    ref
  }, other, {
    children: [(0, import_jsx_runtime102.jsx)(SnackbarContentMessage, {
      className: classes2.message,
      ownerState,
      children: message
    }), action ? (0, import_jsx_runtime102.jsx)(SnackbarContentAction, {
      className: classes2.action,
      ownerState,
      children: action
    }) : null]
  }));
});
true ? SnackbarContent.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The action to display. It renders after the message, at the end of the snackbar.
   */
  action: import_prop_types69.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types69.default.object,
  /**
   * @ignore
   */
  className: import_prop_types69.default.string,
  /**
   * The message to display.
   */
  message: import_prop_types69.default.node,
  /**
   * The ARIA role attribute of the element.
   * @default 'alert'
   */
  role: import_prop_types69.default.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types69.default.oneOfType([import_prop_types69.default.arrayOf(import_prop_types69.default.oneOfType([import_prop_types69.default.func, import_prop_types69.default.object, import_prop_types69.default.bool])), import_prop_types69.default.func, import_prop_types69.default.object])
} : void 0;
var SnackbarContent_default = SnackbarContent;

// node_modules/@mui/material/Snackbar/snackbarClasses.js
init_esm();
init_generateUtilityClass();
function getSnackbarUtilityClass(slot) {
  return generateUtilityClass("MuiSnackbar", slot);
}
var snackbarClasses = generateUtilityClasses("MuiSnackbar", ["root", "anchorOriginTopCenter", "anchorOriginBottomCenter", "anchorOriginTopRight", "anchorOriginBottomRight", "anchorOriginTopLeft", "anchorOriginBottomLeft"]);

// node_modules/@mui/material/Snackbar/Snackbar.js
var import_jsx_runtime104 = __toESM(require_jsx_runtime());
var _excluded62 = ["onEnter", "onExited"];
var _excluded214 = ["action", "anchorOrigin", "autoHideDuration", "children", "className", "ClickAwayListenerProps", "ContentProps", "disableWindowBlurListener", "message", "onBlur", "onClose", "onFocus", "onMouseEnter", "onMouseLeave", "open", "resumeHideDuration", "TransitionComponent", "transitionDuration", "TransitionProps"];
var useUtilityClasses57 = (ownerState) => {
  const {
    classes: classes2,
    anchorOrigin
  } = ownerState;
  const slots = {
    root: ["root", `anchorOrigin${capitalize_default(anchorOrigin.vertical)}${capitalize_default(anchorOrigin.horizontal)}`]
  };
  return composeClasses(slots, getSnackbarUtilityClass, classes2);
};
var SnackbarRoot = styled_default("div", {
  name: "MuiSnackbar",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, styles20[`anchorOrigin${capitalize_default(ownerState.anchorOrigin.vertical)}${capitalize_default(ownerState.anchorOrigin.horizontal)}`]];
  }
})(({
  theme,
  ownerState
}) => {
  const center = {
    left: "50%",
    right: "auto",
    transform: "translateX(-50%)"
  };
  return _extends({
    zIndex: (theme.vars || theme).zIndex.snackbar,
    position: "fixed",
    display: "flex",
    left: 8,
    right: 8,
    justifyContent: "center",
    alignItems: "center"
  }, ownerState.anchorOrigin.vertical === "top" ? {
    top: 8
  } : {
    bottom: 8
  }, ownerState.anchorOrigin.horizontal === "left" && {
    justifyContent: "flex-start"
  }, ownerState.anchorOrigin.horizontal === "right" && {
    justifyContent: "flex-end"
  }, {
    [theme.breakpoints.up("sm")]: _extends({}, ownerState.anchorOrigin.vertical === "top" ? {
      top: 24
    } : {
      bottom: 24
    }, ownerState.anchorOrigin.horizontal === "center" && center, ownerState.anchorOrigin.horizontal === "left" && {
      left: 24,
      right: "auto"
    }, ownerState.anchorOrigin.horizontal === "right" && {
      right: 24,
      left: "auto"
    })
  });
});
var Snackbar = React88.forwardRef(function Snackbar2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiSnackbar"
  });
  const theme = useTheme();
  const defaultTransitionDuration = {
    enter: theme.transitions.duration.enteringScreen,
    exit: theme.transitions.duration.leavingScreen
  };
  const {
    action,
    anchorOrigin: {
      vertical,
      horizontal
    } = {
      vertical: "bottom",
      horizontal: "left"
    },
    autoHideDuration = null,
    children,
    className,
    ClickAwayListenerProps,
    ContentProps,
    disableWindowBlurListener = false,
    message,
    onBlur,
    onClose,
    onFocus,
    onMouseEnter,
    onMouseLeave,
    open,
    resumeHideDuration,
    TransitionComponent = Grow_default,
    transitionDuration = defaultTransitionDuration,
    TransitionProps: {
      onEnter,
      onExited
    } = {}
  } = props, TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, _excluded62), other = _objectWithoutPropertiesLoose(props, _excluded214);
  const ownerState = _extends({}, props, {
    anchorOrigin: {
      vertical,
      horizontal
    }
  });
  const classes2 = useUtilityClasses57(ownerState);
  const timerAutoHide = React88.useRef();
  const [exited, setExited] = React88.useState(true);
  const handleClose = useEventCallback_default((...args) => {
    if (onClose) {
      onClose(...args);
    }
  });
  const setAutoHideTimer = useEventCallback_default((autoHideDurationParam) => {
    if (!onClose || autoHideDurationParam == null) {
      return;
    }
    clearTimeout(timerAutoHide.current);
    timerAutoHide.current = setTimeout(() => {
      handleClose(null, "timeout");
    }, autoHideDurationParam);
  });
  React88.useEffect(() => {
    if (open) {
      setAutoHideTimer(autoHideDuration);
    }
    return () => {
      clearTimeout(timerAutoHide.current);
    };
  }, [open, autoHideDuration, setAutoHideTimer]);
  const handlePause = () => {
    clearTimeout(timerAutoHide.current);
  };
  const handleResume = React88.useCallback(() => {
    if (autoHideDuration != null) {
      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);
    }
  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);
  const handleFocus = (event) => {
    if (onFocus) {
      onFocus(event);
    }
    handlePause();
  };
  const handleMouseEnter = (event) => {
    if (onMouseEnter) {
      onMouseEnter(event);
    }
    handlePause();
  };
  const handleBlur = (event) => {
    if (onBlur) {
      onBlur(event);
    }
    handleResume();
  };
  const handleMouseLeave = (event) => {
    if (onMouseLeave) {
      onMouseLeave(event);
    }
    handleResume();
  };
  const handleClickAway = (event) => {
    if (onClose) {
      onClose(event, "clickaway");
    }
  };
  const handleExited = (node) => {
    setExited(true);
    if (onExited) {
      onExited(node);
    }
  };
  const handleEnter = (node, isAppearing) => {
    setExited(false);
    if (onEnter) {
      onEnter(node, isAppearing);
    }
  };
  React88.useEffect(() => {
    if (!disableWindowBlurListener && open) {
      window.addEventListener("focus", handleResume);
      window.addEventListener("blur", handlePause);
      return () => {
        window.removeEventListener("focus", handleResume);
        window.removeEventListener("blur", handlePause);
      };
    }
    return void 0;
  }, [disableWindowBlurListener, handleResume, open]);
  React88.useEffect(() => {
    if (!open) {
      return void 0;
    }
    function handleKeyDown(nativeEvent) {
      if (!nativeEvent.defaultPrevented) {
        if (nativeEvent.key === "Escape" || nativeEvent.key === "Esc") {
          if (onClose) {
            onClose(nativeEvent, "escapeKeyDown");
          }
        }
      }
    }
    document.addEventListener("keydown", handleKeyDown);
    return () => {
      document.removeEventListener("keydown", handleKeyDown);
    };
  }, [exited, open, onClose]);
  if (!open && exited) {
    return null;
  }
  return (0, import_jsx_runtime104.jsx)(ClickAwayListener_default, _extends({
    onClickAway: handleClickAway
  }, ClickAwayListenerProps, {
    children: (0, import_jsx_runtime104.jsx)(SnackbarRoot, _extends({
      className: clsx_m_default(classes2.root, className),
      onBlur: handleBlur,
      onFocus: handleFocus,
      onMouseEnter: handleMouseEnter,
      onMouseLeave: handleMouseLeave,
      ownerState,
      ref,
      role: "presentation"
    }, other, {
      children: (0, import_jsx_runtime104.jsx)(TransitionComponent, _extends({
        appear: true,
        in: open,
        timeout: transitionDuration,
        direction: vertical === "top" ? "down" : "up",
        onEnter: handleEnter,
        onExited: handleExited
      }, TransitionProps, {
        children: children || (0, import_jsx_runtime104.jsx)(SnackbarContent_default, _extends({
          message,
          action
        }, ContentProps))
      }))
    }))
  }));
});
true ? Snackbar.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The action to display. It renders after the message, at the end of the snackbar.
   */
  action: import_prop_types70.default.node,
  /**
   * The anchor of the `Snackbar`.
   * On smaller screens, the component grows to occupy all the available width,
   * the horizontal alignment is ignored.
   * @default { vertical: 'bottom', horizontal: 'left' }
   */
  anchorOrigin: import_prop_types70.default.shape({
    horizontal: import_prop_types70.default.oneOf(["center", "left", "right"]).isRequired,
    vertical: import_prop_types70.default.oneOf(["bottom", "top"]).isRequired
  }),
  /**
   * The number of milliseconds to wait before automatically calling the
   * `onClose` function. `onClose` should then set the state of the `open`
   * prop to hide the Snackbar. This behavior is disabled by default with
   * the `null` value.
   * @default null
   */
  autoHideDuration: import_prop_types70.default.number,
  /**
   * Replace the `SnackbarContent` component.
   */
  children: import_prop_types70.default.element,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types70.default.object,
  /**
   * @ignore
   */
  className: import_prop_types70.default.string,
  /**
   * Props applied to the `ClickAwayListener` element.
   */
  ClickAwayListenerProps: import_prop_types70.default.object,
  /**
   * Props applied to the [`SnackbarContent`](/material-ui/api/snackbar-content/) element.
   */
  ContentProps: import_prop_types70.default.object,
  /**
   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.
   * @default false
   */
  disableWindowBlurListener: import_prop_types70.default.bool,
  /**
   * When displaying multiple consecutive Snackbars from a parent rendering a single
   * <Snackbar/>, add the key prop to ensure independent treatment of each message.
   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and
   * features such as autoHideDuration may be canceled.
   */
  key: () => null,
  /**
   * The message to display.
   */
  message: import_prop_types70.default.node,
  /**
   * @ignore
   */
  onBlur: import_prop_types70.default.func,
  /**
   * Callback fired when the component requests to be closed.
   * Typically `onClose` is used to set state in the parent component,
   * which is used to control the `Snackbar` `open` prop.
   * The `reason` parameter can optionally be used to control the response to `onClose`,
   * for example ignoring `clickaway`.
   *
   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.
   * @param {string} reason Can be: `"timeout"` (`autoHideDuration` expired), `"clickaway"`, or `"escapeKeyDown"`.
   */
  onClose: import_prop_types70.default.func,
  /**
   * @ignore
   */
  onFocus: import_prop_types70.default.func,
  /**
   * @ignore
   */
  onMouseEnter: import_prop_types70.default.func,
  /**
   * @ignore
   */
  onMouseLeave: import_prop_types70.default.func,
  /**
   * If `true`, the component is shown.
   */
  open: import_prop_types70.default.bool,
  /**
   * The number of milliseconds to wait before dismissing after user interaction.
   * If `autoHideDuration` prop isn't specified, it does nothing.
   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,
   * we default to `autoHideDuration / 2` ms.
   */
  resumeHideDuration: import_prop_types70.default.number,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types70.default.oneOfType([import_prop_types70.default.arrayOf(import_prop_types70.default.oneOfType([import_prop_types70.default.func, import_prop_types70.default.object, import_prop_types70.default.bool])), import_prop_types70.default.func, import_prop_types70.default.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Grow
   */
  TransitionComponent: import_prop_types70.default.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: import_prop_types70.default.oneOfType([import_prop_types70.default.number, import_prop_types70.default.shape({
    appear: import_prop_types70.default.number,
    enter: import_prop_types70.default.number,
    exit: import_prop_types70.default.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.
   * @default {}
   */
  TransitionProps: import_prop_types70.default.object
} : void 0;

// node_modules/@mui/material/SpeedDial/SpeedDial.js
init_objectWithoutPropertiesLoose();
init_extends();
var React90 = __toESM(require_react());
var import_react_is6 = __toESM(require_react_is());
var import_prop_types72 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/Zoom/Zoom.js
init_extends();
init_objectWithoutPropertiesLoose();
var React89 = __toESM(require_react());
var import_prop_types71 = __toESM(require_prop_types());
init_esm();
init_useForkRef();
var import_jsx_runtime105 = __toESM(require_jsx_runtime());
var _excluded63 = ["addEndListener", "appear", "children", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"];
var styles3 = {
  entering: {
    transform: "none"
  },
  entered: {
    transform: "none"
  }
};
var Zoom = React89.forwardRef(function Zoom2(props, ref) {
  const theme = useTheme();
  const defaultTimeout = {
    enter: theme.transitions.duration.enteringScreen,
    exit: theme.transitions.duration.leavingScreen
  };
  const {
    addEndListener,
    appear = true,
    children,
    easing,
    in: inProp,
    onEnter,
    onEntered,
    onEntering,
    onExit,
    onExited,
    onExiting,
    style: style2,
    timeout = defaultTimeout,
    // eslint-disable-next-line react/prop-types
    TransitionComponent = Transition_default
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded63);
  const nodeRef = React89.useRef(null);
  const handleRef = useForkRef_default(nodeRef, children.ref, ref);
  const normalizedTransitionCallback = (callback) => (maybeIsAppearing) => {
    if (callback) {
      const node = nodeRef.current;
      if (maybeIsAppearing === void 0) {
        callback(node);
      } else {
        callback(node, maybeIsAppearing);
      }
    }
  };
  const handleEntering = normalizedTransitionCallback(onEntering);
  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {
    reflow(node);
    const transitionProps = getTransitionProps({
      style: style2,
      timeout,
      easing
    }, {
      mode: "enter"
    });
    node.style.webkitTransition = theme.transitions.create("transform", transitionProps);
    node.style.transition = theme.transitions.create("transform", transitionProps);
    if (onEnter) {
      onEnter(node, isAppearing);
    }
  });
  const handleEntered = normalizedTransitionCallback(onEntered);
  const handleExiting = normalizedTransitionCallback(onExiting);
  const handleExit = normalizedTransitionCallback((node) => {
    const transitionProps = getTransitionProps({
      style: style2,
      timeout,
      easing
    }, {
      mode: "exit"
    });
    node.style.webkitTransition = theme.transitions.create("transform", transitionProps);
    node.style.transition = theme.transitions.create("transform", transitionProps);
    if (onExit) {
      onExit(node);
    }
  });
  const handleExited = normalizedTransitionCallback(onExited);
  const handleAddEndListener = (next) => {
    if (addEndListener) {
      addEndListener(nodeRef.current, next);
    }
  };
  return (0, import_jsx_runtime105.jsx)(TransitionComponent, _extends({
    appear,
    in: inProp,
    nodeRef,
    onEnter: handleEnter,
    onEntered: handleEntered,
    onEntering: handleEntering,
    onExit: handleExit,
    onExited: handleExited,
    onExiting: handleExiting,
    addEndListener: handleAddEndListener,
    timeout
  }, other, {
    children: (state, childProps) => {
      return React89.cloneElement(children, _extends({
        style: _extends({
          transform: "scale(0)",
          visibility: state === "exited" && !inProp ? "hidden" : void 0
        }, styles3[state], style2, children.props.style),
        ref: handleRef
      }, childProps));
    }
  }));
});
true ? Zoom.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: import_prop_types71.default.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: import_prop_types71.default.bool,
  /**
   * A single child content element.
   */
  children: elementAcceptingRef_default.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: import_prop_types71.default.oneOfType([import_prop_types71.default.shape({
    enter: import_prop_types71.default.string,
    exit: import_prop_types71.default.string
  }), import_prop_types71.default.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: import_prop_types71.default.bool,
  /**
   * @ignore
   */
  onEnter: import_prop_types71.default.func,
  /**
   * @ignore
   */
  onEntered: import_prop_types71.default.func,
  /**
   * @ignore
   */
  onEntering: import_prop_types71.default.func,
  /**
   * @ignore
   */
  onExit: import_prop_types71.default.func,
  /**
   * @ignore
   */
  onExited: import_prop_types71.default.func,
  /**
   * @ignore
   */
  onExiting: import_prop_types71.default.func,
  /**
   * @ignore
   */
  style: import_prop_types71.default.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: import_prop_types71.default.oneOfType([import_prop_types71.default.number, import_prop_types71.default.shape({
    appear: import_prop_types71.default.number,
    enter: import_prop_types71.default.number,
    exit: import_prop_types71.default.number
  })])
} : void 0;
var Zoom_default = Zoom;

// node_modules/@mui/material/SpeedDial/SpeedDial.js
init_capitalize();
init_isMuiElement();
init_useForkRef();
init_useControlled();

// node_modules/@mui/material/SpeedDial/speedDialClasses.js
init_esm();
init_generateUtilityClass();
function getSpeedDialUtilityClass(slot) {
  return generateUtilityClass("MuiSpeedDial", slot);
}
var speedDialClasses = generateUtilityClasses("MuiSpeedDial", ["root", "fab", "directionUp", "directionDown", "directionLeft", "directionRight", "actions", "actionsClosed"]);
var speedDialClasses_default = speedDialClasses;

// node_modules/@mui/material/SpeedDial/SpeedDial.js
var import_jsx_runtime106 = __toESM(require_jsx_runtime());
var import_jsx_runtime107 = __toESM(require_jsx_runtime());
var _excluded64 = ["ref"];
var _excluded215 = ["ariaLabel", "FabProps", "children", "className", "direction", "hidden", "icon", "onBlur", "onClose", "onFocus", "onKeyDown", "onMouseEnter", "onMouseLeave", "onOpen", "open", "openIcon", "TransitionComponent", "transitionDuration", "TransitionProps"];
var _excluded310 = ["ref"];
var useUtilityClasses58 = (ownerState) => {
  const {
    classes: classes2,
    open,
    direction
  } = ownerState;
  const slots = {
    root: ["root", `direction${capitalize_default(direction)}`],
    fab: ["fab"],
    actions: ["actions", !open && "actionsClosed"]
  };
  return composeClasses(slots, getSpeedDialUtilityClass, classes2);
};
function getOrientation(direction) {
  if (direction === "up" || direction === "down") {
    return "vertical";
  }
  if (direction === "right" || direction === "left") {
    return "horizontal";
  }
  return void 0;
}
function clamp3(value, min3, max3) {
  if (value < min3) {
    return min3;
  }
  if (value > max3) {
    return max3;
  }
  return value;
}
var dialRadius = 32;
var spacingActions = 16;
var SpeedDialRoot = styled_default("div", {
  name: "MuiSpeedDial",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, styles20[`direction${capitalize_default(ownerState.direction)}`]];
  }
})(({
  theme,
  ownerState
}) => _extends({
  zIndex: (theme.vars || theme).zIndex.speedDial,
  display: "flex",
  alignItems: "center",
  pointerEvents: "none"
}, ownerState.direction === "up" && {
  flexDirection: "column-reverse",
  [`& .${speedDialClasses_default.actions}`]: {
    flexDirection: "column-reverse",
    marginBottom: -dialRadius,
    paddingBottom: spacingActions + dialRadius
  }
}, ownerState.direction === "down" && {
  flexDirection: "column",
  [`& .${speedDialClasses_default.actions}`]: {
    flexDirection: "column",
    marginTop: -dialRadius,
    paddingTop: spacingActions + dialRadius
  }
}, ownerState.direction === "left" && {
  flexDirection: "row-reverse",
  [`& .${speedDialClasses_default.actions}`]: {
    flexDirection: "row-reverse",
    marginRight: -dialRadius,
    paddingRight: spacingActions + dialRadius
  }
}, ownerState.direction === "right" && {
  flexDirection: "row",
  [`& .${speedDialClasses_default.actions}`]: {
    flexDirection: "row",
    marginLeft: -dialRadius,
    paddingLeft: spacingActions + dialRadius
  }
}));
var SpeedDialFab = styled_default(Fab_default, {
  name: "MuiSpeedDial",
  slot: "Fab",
  overridesResolver: (props, styles20) => styles20.fab
})(() => ({
  pointerEvents: "auto"
}));
var SpeedDialActions = styled_default("div", {
  name: "MuiSpeedDial",
  slot: "Actions",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.actions, !ownerState.open && styles20.actionsClosed];
  }
})(({
  ownerState
}) => _extends({
  display: "flex",
  pointerEvents: "auto"
}, !ownerState.open && {
  transition: "top 0s linear 0.2s",
  pointerEvents: "none"
}));
var SpeedDial = React90.forwardRef(function SpeedDial2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiSpeedDial"
  });
  const theme = useTheme();
  const defaultTransitionDuration = {
    enter: theme.transitions.duration.enteringScreen,
    exit: theme.transitions.duration.leavingScreen
  };
  const {
    ariaLabel,
    FabProps: {
      ref: origDialButtonRef
    } = {},
    children: childrenProp,
    className,
    direction = "up",
    hidden = false,
    icon,
    onBlur,
    onClose,
    onFocus,
    onKeyDown,
    onMouseEnter,
    onMouseLeave,
    onOpen,
    open: openProp,
    TransitionComponent = Zoom_default,
    transitionDuration = defaultTransitionDuration,
    TransitionProps
  } = props, FabProps = _objectWithoutPropertiesLoose(props.FabProps, _excluded64), other = _objectWithoutPropertiesLoose(props, _excluded215);
  const [open, setOpenState] = useControlled_default({
    controlled: openProp,
    default: false,
    name: "SpeedDial",
    state: "open"
  });
  const ownerState = _extends({}, props, {
    open,
    direction
  });
  const classes2 = useUtilityClasses58(ownerState);
  const eventTimer = React90.useRef();
  React90.useEffect(() => {
    return () => {
      clearTimeout(eventTimer.current);
    };
  }, []);
  const focusedAction = React90.useRef(0);
  const nextItemArrowKey = React90.useRef();
  const actions = React90.useRef([]);
  actions.current = [actions.current[0]];
  const handleOwnFabRef = React90.useCallback((fabFef) => {
    actions.current[0] = fabFef;
  }, []);
  const handleFabRef = useForkRef_default(origDialButtonRef, handleOwnFabRef);
  const createHandleSpeedDialActionButtonRef = (dialActionIndex, origButtonRef) => {
    return (buttonRef) => {
      actions.current[dialActionIndex + 1] = buttonRef;
      if (origButtonRef) {
        origButtonRef(buttonRef);
      }
    };
  };
  const handleKeyDown = (event) => {
    if (onKeyDown) {
      onKeyDown(event);
    }
    const key = event.key.replace("Arrow", "").toLowerCase();
    const {
      current: nextItemArrowKeyCurrent = key
    } = nextItemArrowKey;
    if (event.key === "Escape") {
      setOpenState(false);
      actions.current[0].focus();
      if (onClose) {
        onClose(event, "escapeKeyDown");
      }
      return;
    }
    if (getOrientation(key) === getOrientation(nextItemArrowKeyCurrent) && getOrientation(key) !== void 0) {
      event.preventDefault();
      const actionStep = key === nextItemArrowKeyCurrent ? 1 : -1;
      const nextAction = clamp3(focusedAction.current + actionStep, 0, actions.current.length - 1);
      actions.current[nextAction].focus();
      focusedAction.current = nextAction;
      nextItemArrowKey.current = nextItemArrowKeyCurrent;
    }
  };
  React90.useEffect(() => {
    if (!open) {
      focusedAction.current = 0;
      nextItemArrowKey.current = void 0;
    }
  }, [open]);
  const handleClose = (event) => {
    if (event.type === "mouseleave" && onMouseLeave) {
      onMouseLeave(event);
    }
    if (event.type === "blur" && onBlur) {
      onBlur(event);
    }
    clearTimeout(eventTimer.current);
    if (event.type === "blur") {
      eventTimer.current = setTimeout(() => {
        setOpenState(false);
        if (onClose) {
          onClose(event, "blur");
        }
      });
    } else {
      setOpenState(false);
      if (onClose) {
        onClose(event, "mouseLeave");
      }
    }
  };
  const handleClick = (event) => {
    if (FabProps.onClick) {
      FabProps.onClick(event);
    }
    clearTimeout(eventTimer.current);
    if (open) {
      setOpenState(false);
      if (onClose) {
        onClose(event, "toggle");
      }
    } else {
      setOpenState(true);
      if (onOpen) {
        onOpen(event, "toggle");
      }
    }
  };
  const handleOpen = (event) => {
    if (event.type === "mouseenter" && onMouseEnter) {
      onMouseEnter(event);
    }
    if (event.type === "focus" && onFocus) {
      onFocus(event);
    }
    clearTimeout(eventTimer.current);
    if (!open) {
      eventTimer.current = setTimeout(() => {
        setOpenState(true);
        if (onOpen) {
          const eventMap = {
            focus: "focus",
            mouseenter: "mouseEnter"
          };
          onOpen(event, eventMap[event.type]);
        }
      });
    }
  };
  const id = ariaLabel.replace(/^[^a-z]+|[^\w:.-]+/gi, "");
  const allItems = React90.Children.toArray(childrenProp).filter((child) => {
    if (true) {
      if ((0, import_react_is6.isFragment)(child)) {
        console.error(["MUI: The SpeedDial component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join("\n"));
      }
    }
    return React90.isValidElement(child);
  });
  const children = allItems.map((child, index2) => {
    const _child$props = child.props, {
      FabProps: {
        ref: origButtonRef
      } = {},
      tooltipPlacement: tooltipPlacementProp
    } = _child$props, ChildFabProps = _objectWithoutPropertiesLoose(_child$props.FabProps, _excluded310);
    const tooltipPlacement = tooltipPlacementProp || (getOrientation(direction) === "vertical" ? "left" : "top");
    return React90.cloneElement(child, {
      FabProps: _extends({}, ChildFabProps, {
        ref: createHandleSpeedDialActionButtonRef(index2, origButtonRef)
      }),
      delay: 30 * (open ? index2 : allItems.length - index2),
      open,
      tooltipPlacement,
      id: `${id}-action-${index2}`
    });
  });
  return (0, import_jsx_runtime107.jsxs)(SpeedDialRoot, _extends({
    className: clsx_m_default(classes2.root, className),
    ref,
    role: "presentation",
    onKeyDown: handleKeyDown,
    onBlur: handleClose,
    onFocus: handleOpen,
    onMouseEnter: handleOpen,
    onMouseLeave: handleClose,
    ownerState
  }, other, {
    children: [(0, import_jsx_runtime106.jsx)(TransitionComponent, _extends({
      in: !hidden,
      timeout: transitionDuration,
      unmountOnExit: true
    }, TransitionProps, {
      children: (0, import_jsx_runtime106.jsx)(SpeedDialFab, _extends({
        color: "primary",
        "aria-label": ariaLabel,
        "aria-haspopup": "true",
        "aria-expanded": open,
        "aria-controls": `${id}-actions`
      }, FabProps, {
        onClick: handleClick,
        className: clsx_m_default(classes2.fab, FabProps.className),
        ref: handleFabRef,
        ownerState,
        children: React90.isValidElement(icon) && isMuiElement_default(icon, ["SpeedDialIcon"]) ? React90.cloneElement(icon, {
          open
        }) : icon
      }))
    })), (0, import_jsx_runtime106.jsx)(SpeedDialActions, {
      id: `${id}-actions`,
      role: "menu",
      "aria-orientation": getOrientation(direction),
      className: clsx_m_default(classes2.actions, !open && classes2.actionsClosed),
      ownerState,
      children
    })]
  }));
});
true ? SpeedDial.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The aria-label of the button element.
   * Also used to provide the `id` for the `SpeedDial` element and its children.
   */
  ariaLabel: import_prop_types72.default.string.isRequired,
  /**
   * SpeedDialActions to display when the SpeedDial is `open`.
   */
  children: import_prop_types72.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types72.default.object,
  /**
   * @ignore
   */
  className: import_prop_types72.default.string,
  /**
   * The direction the actions open relative to the floating action button.
   * @default 'up'
   */
  direction: import_prop_types72.default.oneOf(["down", "left", "right", "up"]),
  /**
   * Props applied to the [`Fab`](/material-ui/api/fab/) element.
   * @default {}
   */
  FabProps: import_prop_types72.default.object,
  /**
   * If `true`, the SpeedDial is hidden.
   * @default false
   */
  hidden: import_prop_types72.default.bool,
  /**
   * The icon to display in the SpeedDial Fab. The `SpeedDialIcon` component
   * provides a default Icon with animation.
   */
  icon: import_prop_types72.default.node,
  /**
   * @ignore
   */
  onBlur: import_prop_types72.default.func,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"toggle"`, `"blur"`, `"mouseLeave"`, `"escapeKeyDown"`.
   */
  onClose: import_prop_types72.default.func,
  /**
   * @ignore
   */
  onFocus: import_prop_types72.default.func,
  /**
   * @ignore
   */
  onKeyDown: import_prop_types72.default.func,
  /**
   * @ignore
   */
  onMouseEnter: import_prop_types72.default.func,
  /**
   * @ignore
   */
  onMouseLeave: import_prop_types72.default.func,
  /**
   * Callback fired when the component requests to be open.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"toggle"`, `"focus"`, `"mouseEnter"`.
   */
  onOpen: import_prop_types72.default.func,
  /**
   * If `true`, the component is shown.
   */
  open: import_prop_types72.default.bool,
  /**
   * The icon to display in the SpeedDial Fab when the SpeedDial is open.
   */
  openIcon: import_prop_types72.default.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types72.default.oneOfType([import_prop_types72.default.arrayOf(import_prop_types72.default.oneOfType([import_prop_types72.default.func, import_prop_types72.default.object, import_prop_types72.default.bool])), import_prop_types72.default.func, import_prop_types72.default.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Zoom
   */
  TransitionComponent: import_prop_types72.default.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: import_prop_types72.default.oneOfType([import_prop_types72.default.number, import_prop_types72.default.shape({
    appear: import_prop_types72.default.number,
    enter: import_prop_types72.default.number,
    exit: import_prop_types72.default.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.
   */
  TransitionProps: import_prop_types72.default.object
} : void 0;

// node_modules/@mui/material/SpeedDialAction/SpeedDialAction.js
init_objectWithoutPropertiesLoose();
init_extends();
var React92 = __toESM(require_react());
var import_prop_types74 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_esm2();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/Tooltip/Tooltip.js
init_objectWithoutPropertiesLoose();
init_extends();
var React91 = __toESM(require_react());
var import_prop_types73 = __toESM(require_prop_types());
init_clsx_m();
init_esm();
init_base();
init_esm2();
init_styled();
init_useThemeProps();
init_capitalize();
init_useEventCallback();
init_useForkRef();
init_useId();
init_useIsFocusVisible();
init_useControlled();

// node_modules/@mui/material/Tooltip/tooltipClasses.js
init_esm();
init_generateUtilityClass();
function getTooltipUtilityClass(slot) {
  return generateUtilityClass("MuiTooltip", slot);
}
var tooltipClasses = generateUtilityClasses("MuiTooltip", ["popper", "popperInteractive", "popperArrow", "popperClose", "tooltip", "tooltipArrow", "touch", "tooltipPlacementLeft", "tooltipPlacementRight", "tooltipPlacementTop", "tooltipPlacementBottom", "arrow"]);
var tooltipClasses_default = tooltipClasses;

// node_modules/@mui/material/Tooltip/Tooltip.js
var import_jsx_runtime108 = __toESM(require_jsx_runtime());
var import_jsx_runtime109 = __toESM(require_jsx_runtime());
var _excluded65 = ["arrow", "children", "classes", "components", "componentsProps", "describeChild", "disableFocusListener", "disableHoverListener", "disableInteractive", "disableTouchListener", "enterDelay", "enterNextDelay", "enterTouchDelay", "followCursor", "id", "leaveDelay", "leaveTouchDelay", "onClose", "onOpen", "open", "placement", "PopperComponent", "PopperProps", "slotProps", "slots", "title", "TransitionComponent", "TransitionProps"];
function round(value) {
  return Math.round(value * 1e5) / 1e5;
}
var useUtilityClasses59 = (ownerState) => {
  const {
    classes: classes2,
    disableInteractive,
    arrow,
    touch,
    placement
  } = ownerState;
  const slots = {
    popper: ["popper", !disableInteractive && "popperInteractive", arrow && "popperArrow"],
    tooltip: ["tooltip", arrow && "tooltipArrow", touch && "touch", `tooltipPlacement${capitalize_default(placement.split("-")[0])}`],
    arrow: ["arrow"]
  };
  return composeClasses(slots, getTooltipUtilityClass, classes2);
};
var TooltipPopper = styled_default(Popper_default, {
  name: "MuiTooltip",
  slot: "Popper",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.popper, !ownerState.disableInteractive && styles20.popperInteractive, ownerState.arrow && styles20.popperArrow, !ownerState.open && styles20.popperClose];
  }
})(({
  theme,
  ownerState,
  open
}) => _extends({
  zIndex: (theme.vars || theme).zIndex.tooltip,
  pointerEvents: "none"
}, !ownerState.disableInteractive && {
  pointerEvents: "auto"
}, !open && {
  pointerEvents: "none"
}, ownerState.arrow && {
  [`&[data-popper-placement*="bottom"] .${tooltipClasses_default.arrow}`]: {
    top: 0,
    marginTop: "-0.71em",
    "&::before": {
      transformOrigin: "0 100%"
    }
  },
  [`&[data-popper-placement*="top"] .${tooltipClasses_default.arrow}`]: {
    bottom: 0,
    marginBottom: "-0.71em",
    "&::before": {
      transformOrigin: "100% 0"
    }
  },
  [`&[data-popper-placement*="right"] .${tooltipClasses_default.arrow}`]: _extends({}, !ownerState.isRtl ? {
    left: 0,
    marginLeft: "-0.71em"
  } : {
    right: 0,
    marginRight: "-0.71em"
  }, {
    height: "1em",
    width: "0.71em",
    "&::before": {
      transformOrigin: "100% 100%"
    }
  }),
  [`&[data-popper-placement*="left"] .${tooltipClasses_default.arrow}`]: _extends({}, !ownerState.isRtl ? {
    right: 0,
    marginRight: "-0.71em"
  } : {
    left: 0,
    marginLeft: "-0.71em"
  }, {
    height: "1em",
    width: "0.71em",
    "&::before": {
      transformOrigin: "0 0"
    }
  })
}));
var TooltipTooltip = styled_default("div", {
  name: "MuiTooltip",
  slot: "Tooltip",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.tooltip, ownerState.touch && styles20.touch, ownerState.arrow && styles20.tooltipArrow, styles20[`tooltipPlacement${capitalize_default(ownerState.placement.split("-")[0])}`]];
  }
})(({
  theme,
  ownerState
}) => _extends({
  backgroundColor: theme.vars ? theme.vars.palette.Tooltip.bg : alpha(theme.palette.grey[700], 0.92),
  borderRadius: (theme.vars || theme).shape.borderRadius,
  color: (theme.vars || theme).palette.common.white,
  fontFamily: theme.typography.fontFamily,
  padding: "4px 8px",
  fontSize: theme.typography.pxToRem(11),
  maxWidth: 300,
  margin: 2,
  wordWrap: "break-word",
  fontWeight: theme.typography.fontWeightMedium
}, ownerState.arrow && {
  position: "relative",
  margin: 0
}, ownerState.touch && {
  padding: "8px 16px",
  fontSize: theme.typography.pxToRem(14),
  lineHeight: `${round(16 / 14)}em`,
  fontWeight: theme.typography.fontWeightRegular
}, {
  [`.${tooltipClasses_default.popper}[data-popper-placement*="left"] &`]: _extends({
    transformOrigin: "right center"
  }, !ownerState.isRtl ? _extends({
    marginRight: "14px"
  }, ownerState.touch && {
    marginRight: "24px"
  }) : _extends({
    marginLeft: "14px"
  }, ownerState.touch && {
    marginLeft: "24px"
  })),
  [`.${tooltipClasses_default.popper}[data-popper-placement*="right"] &`]: _extends({
    transformOrigin: "left center"
  }, !ownerState.isRtl ? _extends({
    marginLeft: "14px"
  }, ownerState.touch && {
    marginLeft: "24px"
  }) : _extends({
    marginRight: "14px"
  }, ownerState.touch && {
    marginRight: "24px"
  })),
  [`.${tooltipClasses_default.popper}[data-popper-placement*="top"] &`]: _extends({
    transformOrigin: "center bottom",
    marginBottom: "14px"
  }, ownerState.touch && {
    marginBottom: "24px"
  }),
  [`.${tooltipClasses_default.popper}[data-popper-placement*="bottom"] &`]: _extends({
    transformOrigin: "center top",
    marginTop: "14px"
  }, ownerState.touch && {
    marginTop: "24px"
  })
}));
var TooltipArrow = styled_default("span", {
  name: "MuiTooltip",
  slot: "Arrow",
  overridesResolver: (props, styles20) => styles20.arrow
})(({
  theme
}) => ({
  overflow: "hidden",
  position: "absolute",
  width: "1em",
  height: "0.71em",
  boxSizing: "border-box",
  color: theme.vars ? theme.vars.palette.Tooltip.bg : alpha(theme.palette.grey[700], 0.9),
  "&::before": {
    content: '""',
    margin: "auto",
    display: "block",
    width: "100%",
    height: "100%",
    backgroundColor: "currentColor",
    transform: "rotate(45deg)"
  }
}));
var hystersisOpen = false;
var hystersisTimer = null;
function composeEventHandler(handler, eventHandler) {
  return (event) => {
    if (eventHandler) {
      eventHandler(event);
    }
    handler(event);
  };
}
var Tooltip2 = React91.forwardRef(function Tooltip3(inProps, ref) {
  var _ref, _slots$popper, _ref2, _ref3, _slots$transition, _ref4, _slots$tooltip, _ref5, _slots$arrow, _slotProps$popper, _ref6, _slotProps$popper2, _slotProps$transition, _slotProps$tooltip, _ref7, _slotProps$tooltip2, _slotProps$arrow, _ref8, _slotProps$arrow2;
  const props = useThemeProps2({
    props: inProps,
    name: "MuiTooltip"
  });
  const {
    arrow = false,
    children,
    components = {},
    componentsProps = {},
    describeChild = false,
    disableFocusListener = false,
    disableHoverListener = false,
    disableInteractive: disableInteractiveProp = false,
    disableTouchListener = false,
    enterDelay = 100,
    enterNextDelay = 0,
    enterTouchDelay = 700,
    followCursor = false,
    id: idProp,
    leaveDelay = 0,
    leaveTouchDelay = 1500,
    onClose,
    onOpen,
    open: openProp,
    placement = "bottom",
    PopperComponent: PopperComponentProp,
    PopperProps = {},
    slotProps = {},
    slots = {},
    title,
    TransitionComponent: TransitionComponentProp = Grow_default,
    TransitionProps
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded65);
  const theme = useTheme();
  const isRtl = theme.direction === "rtl";
  const [childNode, setChildNode] = React91.useState();
  const [arrowRef, setArrowRef] = React91.useState(null);
  const ignoreNonTouchEvents = React91.useRef(false);
  const disableInteractive = disableInteractiveProp || followCursor;
  const closeTimer = React91.useRef();
  const enterTimer = React91.useRef();
  const leaveTimer = React91.useRef();
  const touchTimer = React91.useRef();
  const [openState, setOpenState] = useControlled_default({
    controlled: openProp,
    default: false,
    name: "Tooltip",
    state: "open"
  });
  let open = openState;
  if (true) {
    const {
      current: isControlled
    } = React91.useRef(openProp !== void 0);
    React91.useEffect(() => {
      if (childNode && childNode.disabled && !isControlled && title !== "" && childNode.tagName.toLowerCase() === "button") {
        console.error(["MUI: You are providing a disabled `button` child to the Tooltip component.", "A disabled element does not fire events.", "Tooltip needs to listen to the child element's events to display the title.", "", "Add a simple wrapper element, such as a `span`."].join("\n"));
      }
    }, [title, childNode, isControlled]);
  }
  const id = useId_default(idProp);
  const prevUserSelect = React91.useRef();
  const stopTouchInteraction = React91.useCallback(() => {
    if (prevUserSelect.current !== void 0) {
      document.body.style.WebkitUserSelect = prevUserSelect.current;
      prevUserSelect.current = void 0;
    }
    clearTimeout(touchTimer.current);
  }, []);
  React91.useEffect(() => {
    return () => {
      clearTimeout(closeTimer.current);
      clearTimeout(enterTimer.current);
      clearTimeout(leaveTimer.current);
      stopTouchInteraction();
    };
  }, [stopTouchInteraction]);
  const handleOpen = (event) => {
    clearTimeout(hystersisTimer);
    hystersisOpen = true;
    setOpenState(true);
    if (onOpen && !open) {
      onOpen(event);
    }
  };
  const handleClose = useEventCallback_default(
    /**
     * @param {React.SyntheticEvent | Event} event
     */
    (event) => {
      clearTimeout(hystersisTimer);
      hystersisTimer = setTimeout(() => {
        hystersisOpen = false;
      }, 800 + leaveDelay);
      setOpenState(false);
      if (onClose && open) {
        onClose(event);
      }
      clearTimeout(closeTimer.current);
      closeTimer.current = setTimeout(() => {
        ignoreNonTouchEvents.current = false;
      }, theme.transitions.duration.shortest);
    }
  );
  const handleEnter = (event) => {
    if (ignoreNonTouchEvents.current && event.type !== "touchstart") {
      return;
    }
    if (childNode) {
      childNode.removeAttribute("title");
    }
    clearTimeout(enterTimer.current);
    clearTimeout(leaveTimer.current);
    if (enterDelay || hystersisOpen && enterNextDelay) {
      enterTimer.current = setTimeout(() => {
        handleOpen(event);
      }, hystersisOpen ? enterNextDelay : enterDelay);
    } else {
      handleOpen(event);
    }
  };
  const handleLeave = (event) => {
    clearTimeout(enterTimer.current);
    clearTimeout(leaveTimer.current);
    leaveTimer.current = setTimeout(() => {
      handleClose(event);
    }, leaveDelay);
  };
  const {
    isFocusVisibleRef,
    onBlur: handleBlurVisible,
    onFocus: handleFocusVisible,
    ref: focusVisibleRef
  } = useIsFocusVisible_default();
  const [, setChildIsFocusVisible] = React91.useState(false);
  const handleBlur = (event) => {
    handleBlurVisible(event);
    if (isFocusVisibleRef.current === false) {
      setChildIsFocusVisible(false);
      handleLeave(event);
    }
  };
  const handleFocus = (event) => {
    if (!childNode) {
      setChildNode(event.currentTarget);
    }
    handleFocusVisible(event);
    if (isFocusVisibleRef.current === true) {
      setChildIsFocusVisible(true);
      handleEnter(event);
    }
  };
  const detectTouchStart = (event) => {
    ignoreNonTouchEvents.current = true;
    const childrenProps2 = children.props;
    if (childrenProps2.onTouchStart) {
      childrenProps2.onTouchStart(event);
    }
  };
  const handleMouseOver = handleEnter;
  const handleMouseLeave = handleLeave;
  const handleTouchStart = (event) => {
    detectTouchStart(event);
    clearTimeout(leaveTimer.current);
    clearTimeout(closeTimer.current);
    stopTouchInteraction();
    prevUserSelect.current = document.body.style.WebkitUserSelect;
    document.body.style.WebkitUserSelect = "none";
    touchTimer.current = setTimeout(() => {
      document.body.style.WebkitUserSelect = prevUserSelect.current;
      handleEnter(event);
    }, enterTouchDelay);
  };
  const handleTouchEnd = (event) => {
    if (children.props.onTouchEnd) {
      children.props.onTouchEnd(event);
    }
    stopTouchInteraction();
    clearTimeout(leaveTimer.current);
    leaveTimer.current = setTimeout(() => {
      handleClose(event);
    }, leaveTouchDelay);
  };
  React91.useEffect(() => {
    if (!open) {
      return void 0;
    }
    function handleKeyDown(nativeEvent) {
      if (nativeEvent.key === "Escape" || nativeEvent.key === "Esc") {
        handleClose(nativeEvent);
      }
    }
    document.addEventListener("keydown", handleKeyDown);
    return () => {
      document.removeEventListener("keydown", handleKeyDown);
    };
  }, [handleClose, open]);
  const handleRef = useForkRef_default(children.ref, focusVisibleRef, setChildNode, ref);
  if (!title && title !== 0) {
    open = false;
  }
  const positionRef = React91.useRef({
    x: 0,
    y: 0
  });
  const popperRef = React91.useRef();
  const handleMouseMove = (event) => {
    const childrenProps2 = children.props;
    if (childrenProps2.onMouseMove) {
      childrenProps2.onMouseMove(event);
    }
    positionRef.current = {
      x: event.clientX,
      y: event.clientY
    };
    if (popperRef.current) {
      popperRef.current.update();
    }
  };
  const nameOrDescProps = {};
  const titleIsString = typeof title === "string";
  if (describeChild) {
    nameOrDescProps.title = !open && titleIsString && !disableHoverListener ? title : null;
    nameOrDescProps["aria-describedby"] = open ? id : null;
  } else {
    nameOrDescProps["aria-label"] = titleIsString ? title : null;
    nameOrDescProps["aria-labelledby"] = open && !titleIsString ? id : null;
  }
  const childrenProps = _extends({}, nameOrDescProps, other, children.props, {
    className: clsx_m_default(other.className, children.props.className),
    onTouchStart: detectTouchStart,
    ref: handleRef
  }, followCursor ? {
    onMouseMove: handleMouseMove
  } : {});
  if (true) {
    childrenProps["data-mui-internal-clone-element"] = true;
    React91.useEffect(() => {
      if (childNode && !childNode.getAttribute("data-mui-internal-clone-element")) {
        console.error(["MUI: The `children` component of the Tooltip is not forwarding its props correctly.", "Please make sure that props are spread on the same element that the ref is applied to."].join("\n"));
      }
    }, [childNode]);
  }
  const interactiveWrapperListeners = {};
  if (!disableTouchListener) {
    childrenProps.onTouchStart = handleTouchStart;
    childrenProps.onTouchEnd = handleTouchEnd;
  }
  if (!disableHoverListener) {
    childrenProps.onMouseOver = composeEventHandler(handleMouseOver, childrenProps.onMouseOver);
    childrenProps.onMouseLeave = composeEventHandler(handleMouseLeave, childrenProps.onMouseLeave);
    if (!disableInteractive) {
      interactiveWrapperListeners.onMouseOver = handleMouseOver;
      interactiveWrapperListeners.onMouseLeave = handleMouseLeave;
    }
  }
  if (!disableFocusListener) {
    childrenProps.onFocus = composeEventHandler(handleFocus, childrenProps.onFocus);
    childrenProps.onBlur = composeEventHandler(handleBlur, childrenProps.onBlur);
    if (!disableInteractive) {
      interactiveWrapperListeners.onFocus = handleFocus;
      interactiveWrapperListeners.onBlur = handleBlur;
    }
  }
  if (true) {
    if (children.props.title) {
      console.error(["MUI: You have provided a `title` prop to the child of <Tooltip />.", `Remove this title prop \`${children.props.title}\` or the Tooltip component.`].join("\n"));
    }
  }
  const popperOptions = React91.useMemo(() => {
    var _PopperProps$popperOp;
    let tooltipModifiers = [{
      name: "arrow",
      enabled: Boolean(arrowRef),
      options: {
        element: arrowRef,
        padding: 4
      }
    }];
    if ((_PopperProps$popperOp = PopperProps.popperOptions) != null && _PopperProps$popperOp.modifiers) {
      tooltipModifiers = tooltipModifiers.concat(PopperProps.popperOptions.modifiers);
    }
    return _extends({}, PopperProps.popperOptions, {
      modifiers: tooltipModifiers
    });
  }, [arrowRef, PopperProps]);
  const ownerState = _extends({}, props, {
    isRtl,
    arrow,
    disableInteractive,
    placement,
    PopperComponentProp,
    touch: ignoreNonTouchEvents.current
  });
  const classes2 = useUtilityClasses59(ownerState);
  const PopperComponent = (_ref = (_slots$popper = slots.popper) != null ? _slots$popper : components.Popper) != null ? _ref : TooltipPopper;
  const TransitionComponent = (_ref2 = (_ref3 = (_slots$transition = slots.transition) != null ? _slots$transition : components.Transition) != null ? _ref3 : TransitionComponentProp) != null ? _ref2 : Grow_default;
  const TooltipComponent = (_ref4 = (_slots$tooltip = slots.tooltip) != null ? _slots$tooltip : components.Tooltip) != null ? _ref4 : TooltipTooltip;
  const ArrowComponent = (_ref5 = (_slots$arrow = slots.arrow) != null ? _slots$arrow : components.Arrow) != null ? _ref5 : TooltipArrow;
  const popperProps = appendOwnerState(PopperComponent, _extends({}, PopperProps, (_slotProps$popper = slotProps.popper) != null ? _slotProps$popper : componentsProps.popper, {
    className: clsx_m_default(classes2.popper, PopperProps == null ? void 0 : PopperProps.className, (_ref6 = (_slotProps$popper2 = slotProps.popper) != null ? _slotProps$popper2 : componentsProps.popper) == null ? void 0 : _ref6.className)
  }), ownerState);
  const transitionProps = appendOwnerState(TransitionComponent, _extends({}, TransitionProps, (_slotProps$transition = slotProps.transition) != null ? _slotProps$transition : componentsProps.transition), ownerState);
  const tooltipProps = appendOwnerState(TooltipComponent, _extends({}, (_slotProps$tooltip = slotProps.tooltip) != null ? _slotProps$tooltip : componentsProps.tooltip, {
    className: clsx_m_default(classes2.tooltip, (_ref7 = (_slotProps$tooltip2 = slotProps.tooltip) != null ? _slotProps$tooltip2 : componentsProps.tooltip) == null ? void 0 : _ref7.className)
  }), ownerState);
  const tooltipArrowProps = appendOwnerState(ArrowComponent, _extends({}, (_slotProps$arrow = slotProps.arrow) != null ? _slotProps$arrow : componentsProps.arrow, {
    className: clsx_m_default(classes2.arrow, (_ref8 = (_slotProps$arrow2 = slotProps.arrow) != null ? _slotProps$arrow2 : componentsProps.arrow) == null ? void 0 : _ref8.className)
  }), ownerState);
  return (0, import_jsx_runtime109.jsxs)(React91.Fragment, {
    children: [React91.cloneElement(children, childrenProps), (0, import_jsx_runtime108.jsx)(PopperComponent, _extends({
      as: PopperComponentProp != null ? PopperComponentProp : Popper_default,
      placement,
      anchorEl: followCursor ? {
        getBoundingClientRect: () => ({
          top: positionRef.current.y,
          left: positionRef.current.x,
          right: positionRef.current.x,
          bottom: positionRef.current.y,
          width: 0,
          height: 0
        })
      } : childNode,
      popperRef,
      open: childNode ? open : false,
      id,
      transition: true
    }, interactiveWrapperListeners, popperProps, {
      popperOptions,
      children: ({
        TransitionProps: TransitionPropsInner
      }) => (0, import_jsx_runtime108.jsx)(TransitionComponent, _extends({
        timeout: theme.transitions.duration.shorter
      }, TransitionPropsInner, transitionProps, {
        children: (0, import_jsx_runtime109.jsxs)(TooltipComponent, _extends({}, tooltipProps, {
          children: [title, arrow ? (0, import_jsx_runtime108.jsx)(ArrowComponent, _extends({}, tooltipArrowProps, {
            ref: setArrowRef
          })) : null]
        }))
      }))
    }))]
  });
});
true ? Tooltip2.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * If `true`, adds an arrow to the tooltip.
   * @default false
   */
  arrow: import_prop_types73.default.bool,
  /**
   * Tooltip reference element.
   */
  children: elementAcceptingRef_default.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types73.default.object,
  /**
   * @ignore
   */
  className: import_prop_types73.default.string,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: import_prop_types73.default.shape({
    Arrow: import_prop_types73.default.elementType,
    Popper: import_prop_types73.default.elementType,
    Tooltip: import_prop_types73.default.elementType,
    Transition: import_prop_types73.default.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: import_prop_types73.default.shape({
    arrow: import_prop_types73.default.object,
    popper: import_prop_types73.default.object,
    tooltip: import_prop_types73.default.object,
    transition: import_prop_types73.default.object
  }),
  /**
   * Set to `true` if the `title` acts as an accessible description.
   * By default the `title` acts as an accessible label for the child.
   * @default false
   */
  describeChild: import_prop_types73.default.bool,
  /**
   * Do not respond to focus-visible events.
   * @default false
   */
  disableFocusListener: import_prop_types73.default.bool,
  /**
   * Do not respond to hover events.
   * @default false
   */
  disableHoverListener: import_prop_types73.default.bool,
  /**
   * Makes a tooltip not interactive, i.e. it will close when the user
   * hovers over the tooltip before the `leaveDelay` is expired.
   * @default false
   */
  disableInteractive: import_prop_types73.default.bool,
  /**
   * Do not respond to long press touch events.
   * @default false
   */
  disableTouchListener: import_prop_types73.default.bool,
  /**
   * The number of milliseconds to wait before showing the tooltip.
   * This prop won't impact the enter touch delay (`enterTouchDelay`).
   * @default 100
   */
  enterDelay: import_prop_types73.default.number,
  /**
   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.
   * @default 0
   */
  enterNextDelay: import_prop_types73.default.number,
  /**
   * The number of milliseconds a user must touch the element before showing the tooltip.
   * @default 700
   */
  enterTouchDelay: import_prop_types73.default.number,
  /**
   * If `true`, the tooltip follow the cursor over the wrapped element.
   * @default false
   */
  followCursor: import_prop_types73.default.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide this prop. It falls back to a randomly generated id.
   */
  id: import_prop_types73.default.string,
  /**
   * The number of milliseconds to wait before hiding the tooltip.
   * This prop won't impact the leave touch delay (`leaveTouchDelay`).
   * @default 0
   */
  leaveDelay: import_prop_types73.default.number,
  /**
   * The number of milliseconds after the user stops touching an element before hiding the tooltip.
   * @default 1500
   */
  leaveTouchDelay: import_prop_types73.default.number,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: import_prop_types73.default.func,
  /**
   * Callback fired when the component requests to be open.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: import_prop_types73.default.func,
  /**
   * If `true`, the component is shown.
   */
  open: import_prop_types73.default.bool,
  /**
   * Tooltip placement.
   * @default 'bottom'
   */
  placement: import_prop_types73.default.oneOf(["bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * The component used for the popper.
   * @default Popper
   */
  PopperComponent: import_prop_types73.default.elementType,
  /**
   * Props applied to the [`Popper`](/material-ui/api/popper/) element.
   * @default {}
   */
  PopperProps: import_prop_types73.default.object,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: import_prop_types73.default.shape({
    arrow: import_prop_types73.default.object,
    popper: import_prop_types73.default.object,
    tooltip: import_prop_types73.default.object,
    transition: import_prop_types73.default.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: import_prop_types73.default.shape({
    arrow: import_prop_types73.default.elementType,
    popper: import_prop_types73.default.elementType,
    tooltip: import_prop_types73.default.elementType,
    transition: import_prop_types73.default.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types73.default.oneOfType([import_prop_types73.default.arrayOf(import_prop_types73.default.oneOfType([import_prop_types73.default.func, import_prop_types73.default.object, import_prop_types73.default.bool])), import_prop_types73.default.func, import_prop_types73.default.object]),
  /**
   * Tooltip title. Zero-length titles string, undefined, null and false are never displayed.
   */
  title: import_prop_types73.default.node,
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Grow
   */
  TransitionComponent: import_prop_types73.default.elementType,
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.
   */
  TransitionProps: import_prop_types73.default.object
} : void 0;
var Tooltip_default = Tooltip2;

// node_modules/@mui/material/SpeedDialAction/SpeedDialAction.js
init_capitalize();

// node_modules/@mui/material/SpeedDialAction/speedDialActionClasses.js
init_esm();
init_generateUtilityClass();
function getSpeedDialActionUtilityClass(slot) {
  return generateUtilityClass("MuiSpeedDialAction", slot);
}
var speedDialActionClasses = generateUtilityClasses("MuiSpeedDialAction", ["fab", "fabClosed", "staticTooltip", "staticTooltipClosed", "staticTooltipLabel", "tooltipPlacementLeft", "tooltipPlacementRight"]);
var speedDialActionClasses_default = speedDialActionClasses;

// node_modules/@mui/material/SpeedDialAction/SpeedDialAction.js
var import_jsx_runtime110 = __toESM(require_jsx_runtime());
var import_jsx_runtime111 = __toESM(require_jsx_runtime());
var _excluded66 = ["className", "delay", "FabProps", "icon", "id", "open", "TooltipClasses", "tooltipOpen", "tooltipPlacement", "tooltipTitle"];
var useUtilityClasses60 = (ownerState) => {
  const {
    open,
    tooltipPlacement,
    classes: classes2
  } = ownerState;
  const slots = {
    fab: ["fab", !open && "fabClosed"],
    staticTooltip: ["staticTooltip", `tooltipPlacement${capitalize_default(tooltipPlacement)}`, !open && "staticTooltipClosed"],
    staticTooltipLabel: ["staticTooltipLabel"]
  };
  return composeClasses(slots, getSpeedDialActionUtilityClass, classes2);
};
var SpeedDialActionFab = styled_default(Fab_default, {
  name: "MuiSpeedDialAction",
  slot: "Fab",
  skipVariantsResolver: false,
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.fab, !ownerState.open && styles20.fabClosed];
  }
})(({
  theme,
  ownerState
}) => _extends({
  margin: 8,
  color: (theme.vars || theme).palette.text.secondary,
  backgroundColor: (theme.vars || theme).palette.background.paper,
  "&:hover": {
    backgroundColor: theme.vars ? theme.vars.palette.SpeedDialAction.fabHoverBg : emphasize(theme.palette.background.paper, 0.15)
  },
  transition: `${theme.transitions.create("transform", {
    duration: theme.transitions.duration.shorter
  })}, opacity 0.8s`,
  opacity: 1
}, !ownerState.open && {
  opacity: 0,
  transform: "scale(0)"
}));
var SpeedDialActionStaticTooltip = styled_default("span", {
  name: "MuiSpeedDialAction",
  slot: "StaticTooltip",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.staticTooltip, !ownerState.open && styles20.staticTooltipClosed, styles20[`tooltipPlacement${capitalize_default(ownerState.tooltipPlacement)}`]];
  }
})(({
  theme,
  ownerState
}) => ({
  position: "relative",
  display: "flex",
  alignItems: "center",
  [`& .${speedDialActionClasses_default.staticTooltipLabel}`]: _extends({
    transition: theme.transitions.create(["transform", "opacity"], {
      duration: theme.transitions.duration.shorter
    }),
    opacity: 1
  }, !ownerState.open && {
    opacity: 0,
    transform: "scale(0.5)"
  }, ownerState.tooltipPlacement === "left" && {
    transformOrigin: "100% 50%",
    right: "100%",
    marginRight: 8
  }, ownerState.tooltipPlacement === "right" && {
    transformOrigin: "0% 50%",
    left: "100%",
    marginLeft: 8
  })
}));
var SpeedDialActionStaticTooltipLabel = styled_default("span", {
  name: "MuiSpeedDialAction",
  slot: "StaticTooltipLabel",
  overridesResolver: (props, styles20) => styles20.staticTooltipLabel
})(({
  theme
}) => _extends({
  position: "absolute"
}, theme.typography.body1, {
  backgroundColor: (theme.vars || theme).palette.background.paper,
  borderRadius: (theme.vars || theme).shape.borderRadius,
  boxShadow: (theme.vars || theme).shadows[1],
  color: (theme.vars || theme).palette.text.secondary,
  padding: "4px 16px",
  wordBreak: "keep-all"
}));
var SpeedDialAction = React92.forwardRef(function SpeedDialAction2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiSpeedDialAction"
  });
  const {
    className,
    delay = 0,
    FabProps = {},
    icon,
    id,
    open,
    TooltipClasses,
    tooltipOpen: tooltipOpenProp = false,
    tooltipPlacement = "left",
    tooltipTitle
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded66);
  const ownerState = _extends({}, props, {
    tooltipPlacement
  });
  const classes2 = useUtilityClasses60(ownerState);
  const [tooltipOpen, setTooltipOpen] = React92.useState(tooltipOpenProp);
  const handleTooltipClose = () => {
    setTooltipOpen(false);
  };
  const handleTooltipOpen = () => {
    setTooltipOpen(true);
  };
  const transitionStyle = {
    transitionDelay: `${delay}ms`
  };
  const fab = (0, import_jsx_runtime110.jsx)(SpeedDialActionFab, _extends({
    size: "small",
    className: clsx_m_default(classes2.fab, className),
    tabIndex: -1,
    role: "menuitem",
    ownerState
  }, FabProps, {
    style: _extends({}, transitionStyle, FabProps.style),
    children: icon
  }));
  if (tooltipOpenProp) {
    return (0, import_jsx_runtime111.jsxs)(SpeedDialActionStaticTooltip, _extends({
      id,
      ref,
      className: classes2.staticTooltip,
      ownerState
    }, other, {
      children: [(0, import_jsx_runtime110.jsx)(SpeedDialActionStaticTooltipLabel, {
        style: transitionStyle,
        id: `${id}-label`,
        className: classes2.staticTooltipLabel,
        ownerState,
        children: tooltipTitle
      }), React92.cloneElement(fab, {
        "aria-labelledby": `${id}-label`
      })]
    }));
  }
  if (!open && tooltipOpen) {
    setTooltipOpen(false);
  }
  return (0, import_jsx_runtime110.jsx)(Tooltip_default, _extends({
    id,
    ref,
    title: tooltipTitle,
    placement: tooltipPlacement,
    onClose: handleTooltipClose,
    onOpen: handleTooltipOpen,
    open: open && tooltipOpen,
    classes: TooltipClasses
  }, other, {
    children: fab
  }));
});
true ? SpeedDialAction.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types74.default.object,
  /**
   * @ignore
   */
  className: import_prop_types74.default.string,
  /**
   * Adds a transition delay, to allow a series of SpeedDialActions to be animated.
   * @default 0
   */
  delay: import_prop_types74.default.number,
  /**
   * Props applied to the [`Fab`](/material-ui/api/fab/) component.
   * @default {}
   */
  FabProps: import_prop_types74.default.object,
  /**
   * The icon to display in the SpeedDial Fab.
   */
  icon: import_prop_types74.default.node,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide this prop. It falls back to a randomly generated id.
   */
  id: import_prop_types74.default.string,
  /**
   * If `true`, the component is shown.
   */
  open: import_prop_types74.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types74.default.oneOfType([import_prop_types74.default.arrayOf(import_prop_types74.default.oneOfType([import_prop_types74.default.func, import_prop_types74.default.object, import_prop_types74.default.bool])), import_prop_types74.default.func, import_prop_types74.default.object]),
  /**
   * `classes` prop applied to the [`Tooltip`](/material-ui/api/tooltip/) element.
   */
  TooltipClasses: import_prop_types74.default.object,
  /**
   * Make the tooltip always visible when the SpeedDial is open.
   * @default false
   */
  tooltipOpen: import_prop_types74.default.bool,
  /**
   * Placement of the tooltip.
   * @default 'left'
   */
  tooltipPlacement: import_prop_types74.default.oneOf(["bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Label to display in the tooltip.
   */
  tooltipTitle: import_prop_types74.default.node
} : void 0;

// node_modules/@mui/material/SpeedDialIcon/SpeedDialIcon.js
init_objectWithoutPropertiesLoose();
init_extends();
var React94 = __toESM(require_react());
var import_prop_types75 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/internal/svg-icons/Add.js
var React93 = __toESM(require_react());
init_utils();
var import_jsx_runtime112 = __toESM(require_jsx_runtime());
var Add_default = createSvgIcon((0, import_jsx_runtime112.jsx)("path", {
  d: "M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
}), "Add");

// node_modules/@mui/material/SpeedDialIcon/speedDialIconClasses.js
init_esm();
init_generateUtilityClass();
function getSpeedDialIconUtilityClass(slot) {
  return generateUtilityClass("MuiSpeedDialIcon", slot);
}
var speedDialIconClasses = generateUtilityClasses("MuiSpeedDialIcon", ["root", "icon", "iconOpen", "iconWithOpenIconOpen", "openIcon", "openIconOpen"]);
var speedDialIconClasses_default = speedDialIconClasses;

// node_modules/@mui/material/SpeedDialIcon/SpeedDialIcon.js
var import_jsx_runtime113 = __toESM(require_jsx_runtime());
var import_jsx_runtime114 = __toESM(require_jsx_runtime());
var _excluded67 = ["className", "icon", "open", "openIcon"];
var useUtilityClasses61 = (ownerState) => {
  const {
    classes: classes2,
    open,
    openIcon
  } = ownerState;
  const slots = {
    root: ["root"],
    icon: ["icon", open && "iconOpen", openIcon && open && "iconWithOpenIconOpen"],
    openIcon: ["openIcon", open && "openIconOpen"]
  };
  return composeClasses(slots, getSpeedDialIconUtilityClass, classes2);
};
var SpeedDialIconRoot = styled_default("span", {
  name: "MuiSpeedDialIcon",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [{
      [`& .${speedDialIconClasses_default.icon}`]: styles20.icon
    }, {
      [`& .${speedDialIconClasses_default.icon}`]: ownerState.open && styles20.iconOpen
    }, {
      [`& .${speedDialIconClasses_default.icon}`]: ownerState.open && ownerState.openIcon && styles20.iconWithOpenIconOpen
    }, {
      [`& .${speedDialIconClasses_default.openIcon}`]: styles20.openIcon
    }, {
      [`& .${speedDialIconClasses_default.openIcon}`]: ownerState.open && styles20.openIconOpen
    }, styles20.root];
  }
})(({
  theme,
  ownerState
}) => ({
  height: 24,
  [`& .${speedDialIconClasses_default.icon}`]: _extends({
    transition: theme.transitions.create(["transform", "opacity"], {
      duration: theme.transitions.duration.short
    })
  }, ownerState.open && _extends({
    transform: "rotate(45deg)"
  }, ownerState.openIcon && {
    opacity: 0
  })),
  [`& .${speedDialIconClasses_default.openIcon}`]: _extends({
    position: "absolute",
    transition: theme.transitions.create(["transform", "opacity"], {
      duration: theme.transitions.duration.short
    }),
    opacity: 0,
    transform: "rotate(-45deg)"
  }, ownerState.open && {
    transform: "rotate(0deg)",
    opacity: 1
  })
}));
var SpeedDialIcon = React94.forwardRef(function SpeedDialIcon2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiSpeedDialIcon"
  });
  const {
    className,
    icon: iconProp,
    openIcon: openIconProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded67);
  const ownerState = props;
  const classes2 = useUtilityClasses61(ownerState);
  function formatIcon(icon, newClassName) {
    if (React94.isValidElement(icon)) {
      return React94.cloneElement(icon, {
        className: newClassName
      });
    }
    return icon;
  }
  return (0, import_jsx_runtime114.jsxs)(SpeedDialIconRoot, _extends({
    className: clsx_m_default(classes2.root, className),
    ref,
    ownerState
  }, other, {
    children: [openIconProp ? formatIcon(openIconProp, classes2.openIcon) : null, iconProp ? formatIcon(iconProp, classes2.icon) : (0, import_jsx_runtime113.jsx)(Add_default, {
      className: classes2.icon
    })]
  }));
});
true ? SpeedDialIcon.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types75.default.object,
  /**
   * @ignore
   */
  className: import_prop_types75.default.string,
  /**
   * The icon to display.
   */
  icon: import_prop_types75.default.node,
  /**
   * @ignore
   * If `true`, the component is shown.
   */
  open: import_prop_types75.default.bool,
  /**
   * The icon to display in the SpeedDial Floating Action Button when the SpeedDial is open.
   */
  openIcon: import_prop_types75.default.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types75.default.oneOfType([import_prop_types75.default.arrayOf(import_prop_types75.default.oneOfType([import_prop_types75.default.func, import_prop_types75.default.object, import_prop_types75.default.bool])), import_prop_types75.default.func, import_prop_types75.default.object])
} : void 0;
SpeedDialIcon.muiName = "SpeedDialIcon";

// node_modules/@mui/material/Stack/Stack.js
init_objectWithoutPropertiesLoose();
init_extends();
var React95 = __toESM(require_react());
var import_prop_types76 = __toESM(require_prop_types());
init_esm2();
init_esm();
init_styled();
init_useThemeProps();
var import_jsx_runtime115 = __toESM(require_jsx_runtime());
var _excluded68 = ["component", "direction", "spacing", "divider", "children"];
function joinChildren(children, separator) {
  const childrenArray = React95.Children.toArray(children).filter(Boolean);
  return childrenArray.reduce((output, child, index2) => {
    output.push(child);
    if (index2 < childrenArray.length - 1) {
      output.push(React95.cloneElement(separator, {
        key: `separator-${index2}`
      }));
    }
    return output;
  }, []);
}
var getSideFromDirection = (direction) => {
  return {
    row: "Left",
    "row-reverse": "Right",
    column: "Top",
    "column-reverse": "Bottom"
  }[direction];
};
var style = ({
  ownerState,
  theme
}) => {
  let styles20 = _extends({
    display: "flex",
    flexDirection: "column"
  }, handleBreakpoints({
    theme
  }, resolveBreakpointValues({
    values: ownerState.direction,
    breakpoints: theme.breakpoints.values
  }), (propValue) => ({
    flexDirection: propValue
  })));
  if (ownerState.spacing) {
    const transformer2 = createUnarySpacing(theme);
    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {
      if (typeof ownerState.spacing === "object" && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === "object" && ownerState.direction[breakpoint] != null) {
        acc[breakpoint] = true;
      }
      return acc;
    }, {});
    const directionValues = resolveBreakpointValues({
      values: ownerState.direction,
      base
    });
    const spacingValues = resolveBreakpointValues({
      values: ownerState.spacing,
      base
    });
    if (typeof directionValues === "object") {
      Object.keys(directionValues).forEach((breakpoint, index2, breakpoints) => {
        const directionValue = directionValues[breakpoint];
        if (!directionValue) {
          const previousDirectionValue = index2 > 0 ? directionValues[breakpoints[index2 - 1]] : "column";
          directionValues[breakpoint] = previousDirectionValue;
        }
      });
    }
    const styleFromPropValue = (propValue, breakpoint) => {
      return {
        "& > :not(style) + :not(style)": {
          margin: 0,
          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer2, propValue)
        }
      };
    };
    styles20 = deepmerge(styles20, handleBreakpoints({
      theme
    }, spacingValues, styleFromPropValue));
  }
  styles20 = mergeBreakpointsInOrder(theme.breakpoints, styles20);
  return styles20;
};
var StackRoot = styled_default("div", {
  name: "MuiStack",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    return [styles20.root];
  }
})(style);
var Stack = React95.forwardRef(function Stack2(inProps, ref) {
  const themeProps = useThemeProps2({
    props: inProps,
    name: "MuiStack"
  });
  const props = extendSxProp(themeProps);
  const {
    component = "div",
    direction = "column",
    spacing = 0,
    divider,
    children
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded68);
  const ownerState = {
    direction,
    spacing
  };
  return (0, import_jsx_runtime115.jsx)(StackRoot, _extends({
    as: component,
    ownerState,
    ref
  }, other, {
    children: divider ? joinChildren(children, divider) : children
  }));
});
true ? Stack.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types76.default.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types76.default.elementType,
  /**
   * Defines the `flex-direction` style property.
   * It is applied for all screen sizes.
   * @default 'column'
   */
  direction: import_prop_types76.default.oneOfType([import_prop_types76.default.oneOf(["column-reverse", "column", "row-reverse", "row"]), import_prop_types76.default.arrayOf(import_prop_types76.default.oneOf(["column-reverse", "column", "row-reverse", "row"])), import_prop_types76.default.object]),
  /**
   * Add an element between each child.
   */
  divider: import_prop_types76.default.node,
  /**
   * Defines the space between immediate children.
   * @default 0
   */
  spacing: import_prop_types76.default.oneOfType([import_prop_types76.default.arrayOf(import_prop_types76.default.oneOfType([import_prop_types76.default.number, import_prop_types76.default.string])), import_prop_types76.default.number, import_prop_types76.default.object, import_prop_types76.default.string]),
  /**
   * The system prop, which allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types76.default.oneOfType([import_prop_types76.default.arrayOf(import_prop_types76.default.oneOfType([import_prop_types76.default.func, import_prop_types76.default.object, import_prop_types76.default.bool])), import_prop_types76.default.func, import_prop_types76.default.object])
} : void 0;

// node_modules/@mui/material/Step/Step.js
init_objectWithoutPropertiesLoose();
init_extends();
var React98 = __toESM(require_react());
var import_prop_types77 = __toESM(require_prop_types());
init_clsx_m();
init_esm();
init_base();

// node_modules/@mui/material/Stepper/StepperContext.js
var React96 = __toESM(require_react());
var StepperContext = React96.createContext({});
if (true) {
  StepperContext.displayName = "StepperContext";
}
var StepperContext_default = StepperContext;

// node_modules/@mui/material/Step/StepContext.js
var React97 = __toESM(require_react());
var StepContext = React97.createContext({});
if (true) {
  StepContext.displayName = "StepContext";
}
var StepContext_default = StepContext;

// node_modules/@mui/material/Step/Step.js
init_useThemeProps();
init_styled();

// node_modules/@mui/material/Step/stepClasses.js
init_esm();
init_generateUtilityClass();
function getStepUtilityClass(slot) {
  return generateUtilityClass("MuiStep", slot);
}
var stepClasses = generateUtilityClasses("MuiStep", ["root", "horizontal", "vertical", "alternativeLabel", "completed"]);

// node_modules/@mui/material/Step/Step.js
var import_jsx_runtime116 = __toESM(require_jsx_runtime());
var import_jsx_runtime117 = __toESM(require_jsx_runtime());
var _excluded69 = ["active", "children", "className", "component", "completed", "disabled", "expanded", "index", "last"];
var useUtilityClasses62 = (ownerState) => {
  const {
    classes: classes2,
    orientation,
    alternativeLabel,
    completed
  } = ownerState;
  const slots = {
    root: ["root", orientation, alternativeLabel && "alternativeLabel", completed && "completed"]
  };
  return composeClasses(slots, getStepUtilityClass, classes2);
};
var StepRoot = styled_default("div", {
  name: "MuiStep",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, styles20[ownerState.orientation], ownerState.alternativeLabel && styles20.alternativeLabel, ownerState.completed && styles20.completed];
  }
})(({
  ownerState
}) => _extends({}, ownerState.orientation === "horizontal" && {
  paddingLeft: 8,
  paddingRight: 8
}, ownerState.alternativeLabel && {
  flex: 1,
  position: "relative"
}));
var Step2 = React98.forwardRef(function Step3(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiStep"
  });
  const {
    active: activeProp,
    children,
    className,
    component = "div",
    completed: completedProp,
    disabled: disabledProp,
    expanded = false,
    index: index2,
    last
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded69);
  const {
    activeStep,
    connector,
    alternativeLabel,
    orientation,
    nonLinear
  } = React98.useContext(StepperContext_default);
  let [active = false, completed = false, disabled = false] = [activeProp, completedProp, disabledProp];
  if (activeStep === index2) {
    active = activeProp !== void 0 ? activeProp : true;
  } else if (!nonLinear && activeStep > index2) {
    completed = completedProp !== void 0 ? completedProp : true;
  } else if (!nonLinear && activeStep < index2) {
    disabled = disabledProp !== void 0 ? disabledProp : true;
  }
  const contextValue = React98.useMemo(() => ({
    index: index2,
    last,
    expanded,
    icon: index2 + 1,
    active,
    completed,
    disabled
  }), [index2, last, expanded, active, completed, disabled]);
  const ownerState = _extends({}, props, {
    active,
    orientation,
    alternativeLabel,
    completed,
    disabled,
    expanded,
    component
  });
  const classes2 = useUtilityClasses62(ownerState);
  const newChildren = (0, import_jsx_runtime116.jsxs)(StepRoot, _extends({
    as: component,
    className: clsx_m_default(classes2.root, className),
    ref,
    ownerState
  }, other, {
    children: [connector && alternativeLabel && index2 !== 0 ? connector : null, children]
  }));
  return (0, import_jsx_runtime117.jsx)(StepContext_default.Provider, {
    value: contextValue,
    children: connector && !alternativeLabel && index2 !== 0 ? (0, import_jsx_runtime116.jsxs)(React98.Fragment, {
      children: [connector, newChildren]
    }) : newChildren
  });
});
true ? Step2.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Sets the step as active. Is passed to child components.
   */
  active: import_prop_types77.default.bool,
  /**
   * Should be `Step` sub-components such as `StepLabel`, `StepContent`.
   */
  children: import_prop_types77.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types77.default.object,
  /**
   * @ignore
   */
  className: import_prop_types77.default.string,
  /**
   * Mark the step as completed. Is passed to child components.
   */
  completed: import_prop_types77.default.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types77.default.elementType,
  /**
   * If `true`, the step is disabled, will also disable the button if
   * `StepButton` is a child of `Step`. Is passed to child components.
   */
  disabled: import_prop_types77.default.bool,
  /**
   * Expand the step.
   * @default false
   */
  expanded: import_prop_types77.default.bool,
  /**
   * The position of the step.
   * The prop defaults to the value inherited from the parent Stepper component.
   */
  index: integerPropType_default,
  /**
   * If `true`, the Step is displayed as rendered last.
   * The prop defaults to the value inherited from the parent Stepper component.
   */
  last: import_prop_types77.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types77.default.oneOfType([import_prop_types77.default.arrayOf(import_prop_types77.default.oneOfType([import_prop_types77.default.func, import_prop_types77.default.object, import_prop_types77.default.bool])), import_prop_types77.default.func, import_prop_types77.default.object])
} : void 0;

// node_modules/@mui/material/StepButton/StepButton.js
init_objectWithoutPropertiesLoose();
init_extends();
var React103 = __toESM(require_react());
var import_prop_types80 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/StepLabel/StepLabel.js
init_objectWithoutPropertiesLoose();
init_extends();
var React102 = __toESM(require_react());
var import_prop_types79 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/StepIcon/StepIcon.js
init_extends();
init_objectWithoutPropertiesLoose();
var React101 = __toESM(require_react());
var import_prop_types78 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/internal/svg-icons/CheckCircle.js
var React99 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime118 = __toESM(require_jsx_runtime());
var CheckCircle_default = createSvgIcon((0, import_jsx_runtime118.jsx)("path", {
  d: "M12 0a12 12 0 1 0 0 24 12 12 0 0 0 0-24zm-2 17l-5-5 1.4-1.4 3.6 3.6 7.6-7.6L19 8l-9 9z"
}), "CheckCircle");

// node_modules/@mui/material/internal/svg-icons/Warning.js
var React100 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime119 = __toESM(require_jsx_runtime());
var Warning_default = createSvgIcon((0, import_jsx_runtime119.jsx)("path", {
  d: "M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"
}), "Warning");

// node_modules/@mui/material/StepIcon/StepIcon.js
init_SvgIcon();

// node_modules/@mui/material/StepIcon/stepIconClasses.js
init_esm();
init_generateUtilityClass();
function getStepIconUtilityClass(slot) {
  return generateUtilityClass("MuiStepIcon", slot);
}
var stepIconClasses = generateUtilityClasses("MuiStepIcon", ["root", "active", "completed", "error", "text"]);
var stepIconClasses_default = stepIconClasses;

// node_modules/@mui/material/StepIcon/StepIcon.js
var import_jsx_runtime120 = __toESM(require_jsx_runtime());
var import_jsx_runtime121 = __toESM(require_jsx_runtime());
var _circle;
var _excluded70 = ["active", "className", "completed", "error", "icon"];
var useUtilityClasses63 = (ownerState) => {
  const {
    classes: classes2,
    active,
    completed,
    error
  } = ownerState;
  const slots = {
    root: ["root", active && "active", completed && "completed", error && "error"],
    text: ["text"]
  };
  return composeClasses(slots, getStepIconUtilityClass, classes2);
};
var StepIconRoot = styled_default(SvgIcon_default, {
  name: "MuiStepIcon",
  slot: "Root",
  overridesResolver: (props, styles20) => styles20.root
})(({
  theme
}) => ({
  display: "block",
  transition: theme.transitions.create("color", {
    duration: theme.transitions.duration.shortest
  }),
  color: (theme.vars || theme).palette.text.disabled,
  [`&.${stepIconClasses_default.completed}`]: {
    color: (theme.vars || theme).palette.primary.main
  },
  [`&.${stepIconClasses_default.active}`]: {
    color: (theme.vars || theme).palette.primary.main
  },
  [`&.${stepIconClasses_default.error}`]: {
    color: (theme.vars || theme).palette.error.main
  }
}));
var StepIconText = styled_default("text", {
  name: "MuiStepIcon",
  slot: "Text",
  overridesResolver: (props, styles20) => styles20.text
})(({
  theme
}) => ({
  fill: (theme.vars || theme).palette.primary.contrastText,
  fontSize: theme.typography.caption.fontSize,
  fontFamily: theme.typography.fontFamily
}));
var StepIcon = React101.forwardRef(function StepIcon2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiStepIcon"
  });
  const {
    active = false,
    className: classNameProp,
    completed = false,
    error = false,
    icon
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded70);
  const ownerState = _extends({}, props, {
    active,
    completed,
    error
  });
  const classes2 = useUtilityClasses63(ownerState);
  if (typeof icon === "number" || typeof icon === "string") {
    const className = clsx_m_default(classNameProp, classes2.root);
    if (error) {
      return (0, import_jsx_runtime120.jsx)(StepIconRoot, _extends({
        as: Warning_default,
        className,
        ref,
        ownerState
      }, other));
    }
    if (completed) {
      return (0, import_jsx_runtime120.jsx)(StepIconRoot, _extends({
        as: CheckCircle_default,
        className,
        ref,
        ownerState
      }, other));
    }
    return (0, import_jsx_runtime121.jsxs)(StepIconRoot, _extends({
      className,
      ref,
      ownerState
    }, other, {
      children: [_circle || (_circle = (0, import_jsx_runtime120.jsx)("circle", {
        cx: "12",
        cy: "12",
        r: "12"
      })), (0, import_jsx_runtime120.jsx)(StepIconText, {
        className: classes2.text,
        x: "12",
        y: "12",
        textAnchor: "middle",
        dominantBaseline: "central",
        ownerState,
        children: icon
      })]
    }));
  }
  return icon;
});
true ? StepIcon.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Whether this step is active.
   * @default false
   */
  active: import_prop_types78.default.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types78.default.object,
  /**
   * @ignore
   */
  className: import_prop_types78.default.string,
  /**
   * Mark the step as completed. Is passed to child components.
   * @default false
   */
  completed: import_prop_types78.default.bool,
  /**
   * If `true`, the step is marked as failed.
   * @default false
   */
  error: import_prop_types78.default.bool,
  /**
   * The label displayed in the step icon.
   */
  icon: import_prop_types78.default.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types78.default.oneOfType([import_prop_types78.default.arrayOf(import_prop_types78.default.oneOfType([import_prop_types78.default.func, import_prop_types78.default.object, import_prop_types78.default.bool])), import_prop_types78.default.func, import_prop_types78.default.object])
} : void 0;
var StepIcon_default = StepIcon;

// node_modules/@mui/material/StepLabel/stepLabelClasses.js
init_esm();
init_generateUtilityClass();
function getStepLabelUtilityClass(slot) {
  return generateUtilityClass("MuiStepLabel", slot);
}
var stepLabelClasses = generateUtilityClasses("MuiStepLabel", ["root", "horizontal", "vertical", "label", "active", "completed", "error", "disabled", "iconContainer", "alternativeLabel", "labelContainer"]);
var stepLabelClasses_default = stepLabelClasses;

// node_modules/@mui/material/StepLabel/StepLabel.js
var import_jsx_runtime122 = __toESM(require_jsx_runtime());
var import_jsx_runtime123 = __toESM(require_jsx_runtime());
var _excluded71 = ["children", "className", "componentsProps", "error", "icon", "optional", "slotProps", "StepIconComponent", "StepIconProps"];
var useUtilityClasses64 = (ownerState) => {
  const {
    classes: classes2,
    orientation,
    active,
    completed,
    error,
    disabled,
    alternativeLabel
  } = ownerState;
  const slots = {
    root: ["root", orientation, error && "error", disabled && "disabled", alternativeLabel && "alternativeLabel"],
    label: ["label", active && "active", completed && "completed", error && "error", disabled && "disabled", alternativeLabel && "alternativeLabel"],
    iconContainer: ["iconContainer", active && "active", completed && "completed", error && "error", disabled && "disabled", alternativeLabel && "alternativeLabel"],
    labelContainer: ["labelContainer", alternativeLabel && "alternativeLabel"]
  };
  return composeClasses(slots, getStepLabelUtilityClass, classes2);
};
var StepLabelRoot = styled_default("span", {
  name: "MuiStepLabel",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, styles20[ownerState.orientation]];
  }
})(({
  ownerState
}) => _extends({
  display: "flex",
  alignItems: "center",
  [`&.${stepLabelClasses_default.alternativeLabel}`]: {
    flexDirection: "column"
  },
  [`&.${stepLabelClasses_default.disabled}`]: {
    cursor: "default"
  }
}, ownerState.orientation === "vertical" && {
  textAlign: "left",
  padding: "8px 0"
}));
var StepLabelLabel = styled_default("span", {
  name: "MuiStepLabel",
  slot: "Label",
  overridesResolver: (props, styles20) => styles20.label
})(({
  theme
}) => _extends({}, theme.typography.body2, {
  display: "block",
  transition: theme.transitions.create("color", {
    duration: theme.transitions.duration.shortest
  }),
  [`&.${stepLabelClasses_default.active}`]: {
    color: (theme.vars || theme).palette.text.primary,
    fontWeight: 500
  },
  [`&.${stepLabelClasses_default.completed}`]: {
    color: (theme.vars || theme).palette.text.primary,
    fontWeight: 500
  },
  [`&.${stepLabelClasses_default.alternativeLabel}`]: {
    marginTop: 16
  },
  [`&.${stepLabelClasses_default.error}`]: {
    color: (theme.vars || theme).palette.error.main
  }
}));
var StepLabelIconContainer = styled_default("span", {
  name: "MuiStepLabel",
  slot: "IconContainer",
  overridesResolver: (props, styles20) => styles20.iconContainer
})(() => ({
  flexShrink: 0,
  // Fix IE11 issue
  display: "flex",
  paddingRight: 8,
  [`&.${stepLabelClasses_default.alternativeLabel}`]: {
    paddingRight: 0
  }
}));
var StepLabelLabelContainer = styled_default("span", {
  name: "MuiStepLabel",
  slot: "LabelContainer",
  overridesResolver: (props, styles20) => styles20.labelContainer
})(({
  theme
}) => ({
  width: "100%",
  color: (theme.vars || theme).palette.text.secondary,
  [`&.${stepLabelClasses_default.alternativeLabel}`]: {
    textAlign: "center"
  }
}));
var StepLabel = React102.forwardRef(function StepLabel2(inProps, ref) {
  var _slotProps$label;
  const props = useThemeProps2({
    props: inProps,
    name: "MuiStepLabel"
  });
  const {
    children,
    className,
    componentsProps = {},
    error = false,
    icon: iconProp,
    optional,
    slotProps = {},
    StepIconComponent: StepIconComponentProp,
    StepIconProps
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded71);
  const {
    alternativeLabel,
    orientation
  } = React102.useContext(StepperContext_default);
  const {
    active,
    disabled,
    completed,
    icon: iconContext
  } = React102.useContext(StepContext_default);
  const icon = iconProp || iconContext;
  let StepIconComponent = StepIconComponentProp;
  if (icon && !StepIconComponent) {
    StepIconComponent = StepIcon_default;
  }
  const ownerState = _extends({}, props, {
    active,
    alternativeLabel,
    completed,
    disabled,
    error,
    orientation
  });
  const classes2 = useUtilityClasses64(ownerState);
  const labelSlotProps = (_slotProps$label = slotProps.label) != null ? _slotProps$label : componentsProps.label;
  return (0, import_jsx_runtime123.jsxs)(StepLabelRoot, _extends({
    className: clsx_m_default(classes2.root, className),
    ref,
    ownerState
  }, other, {
    children: [icon || StepIconComponent ? (0, import_jsx_runtime122.jsx)(StepLabelIconContainer, {
      className: classes2.iconContainer,
      ownerState,
      children: (0, import_jsx_runtime122.jsx)(StepIconComponent, _extends({
        completed,
        active,
        error,
        icon
      }, StepIconProps))
    }) : null, (0, import_jsx_runtime123.jsxs)(StepLabelLabelContainer, {
      className: classes2.labelContainer,
      ownerState,
      children: [children ? (0, import_jsx_runtime122.jsx)(StepLabelLabel, _extends({
        ownerState
      }, labelSlotProps, {
        className: clsx_m_default(classes2.label, labelSlotProps == null ? void 0 : labelSlotProps.className),
        children
      })) : null, optional]
    })]
  }));
});
true ? StepLabel.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * In most cases will simply be a string containing a title for the label.
   */
  children: import_prop_types79.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types79.default.object,
  /**
   * @ignore
   */
  className: import_prop_types79.default.string,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  componentsProps: import_prop_types79.default.shape({
    label: import_prop_types79.default.object
  }),
  /**
   * If `true`, the step is marked as failed.
   * @default false
   */
  error: import_prop_types79.default.bool,
  /**
   * Override the default label of the step icon.
   */
  icon: import_prop_types79.default.node,
  /**
   * The optional node to display.
   */
  optional: import_prop_types79.default.node,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: import_prop_types79.default.shape({
    label: import_prop_types79.default.object
  }),
  /**
   * The component to render in place of the [`StepIcon`](/material-ui/api/step-icon/).
   */
  StepIconComponent: import_prop_types79.default.elementType,
  /**
   * Props applied to the [`StepIcon`](/material-ui/api/step-icon/) element.
   */
  StepIconProps: import_prop_types79.default.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types79.default.oneOfType([import_prop_types79.default.arrayOf(import_prop_types79.default.oneOfType([import_prop_types79.default.func, import_prop_types79.default.object, import_prop_types79.default.bool])), import_prop_types79.default.func, import_prop_types79.default.object])
} : void 0;
StepLabel.muiName = "StepLabel";
var StepLabel_default = StepLabel;

// node_modules/@mui/material/StepButton/StepButton.js
init_isMuiElement();

// node_modules/@mui/material/StepButton/stepButtonClasses.js
init_esm();
init_generateUtilityClass();
function getStepButtonUtilityClass(slot) {
  return generateUtilityClass("MuiStepButton", slot);
}
var stepButtonClasses = generateUtilityClasses("MuiStepButton", ["root", "horizontal", "vertical", "touchRipple"]);
var stepButtonClasses_default = stepButtonClasses;

// node_modules/@mui/material/StepButton/StepButton.js
var import_jsx_runtime124 = __toESM(require_jsx_runtime());
var _excluded72 = ["children", "className", "icon", "optional"];
var useUtilityClasses65 = (ownerState) => {
  const {
    classes: classes2,
    orientation
  } = ownerState;
  const slots = {
    root: ["root", orientation],
    touchRipple: ["touchRipple"]
  };
  return composeClasses(slots, getStepButtonUtilityClass, classes2);
};
var StepButtonRoot = styled_default(ButtonBase_default, {
  name: "MuiStepButton",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [{
      [`& .${stepButtonClasses_default.touchRipple}`]: styles20.touchRipple
    }, styles20.root, styles20[ownerState.orientation]];
  }
})(({
  ownerState
}) => _extends({
  width: "100%",
  padding: "24px 16px",
  margin: "-24px -16px",
  boxSizing: "content-box"
}, ownerState.orientation === "vertical" && {
  justifyContent: "flex-start",
  padding: "8px",
  margin: "-8px"
}, {
  [`& .${stepButtonClasses_default.touchRipple}`]: {
    color: "rgba(0, 0, 0, 0.3)"
  }
}));
var StepButton = React103.forwardRef(function StepButton2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiStepButton"
  });
  const {
    children,
    className,
    icon,
    optional
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded72);
  const {
    disabled
  } = React103.useContext(StepContext_default);
  const {
    orientation
  } = React103.useContext(StepperContext_default);
  const ownerState = _extends({}, props, {
    orientation
  });
  const classes2 = useUtilityClasses65(ownerState);
  const childProps = {
    icon,
    optional
  };
  const child = isMuiElement_default(children, ["StepLabel"]) ? React103.cloneElement(children, childProps) : (0, import_jsx_runtime124.jsx)(StepLabel_default, _extends({}, childProps, {
    children
  }));
  return (0, import_jsx_runtime124.jsx)(StepButtonRoot, _extends({
    focusRipple: true,
    disabled,
    TouchRippleProps: {
      className: classes2.touchRipple
    },
    className: clsx_m_default(classes2.root, className),
    ref,
    ownerState
  }, other, {
    children: child
  }));
});
true ? StepButton.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Can be a `StepLabel` or a node to place inside `StepLabel` as children.
   */
  children: import_prop_types80.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types80.default.object,
  /**
   * @ignore
   */
  className: import_prop_types80.default.string,
  /**
   * The icon displayed by the step label.
   */
  icon: import_prop_types80.default.node,
  /**
   * The optional node to display.
   */
  optional: import_prop_types80.default.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types80.default.oneOfType([import_prop_types80.default.arrayOf(import_prop_types80.default.oneOfType([import_prop_types80.default.func, import_prop_types80.default.object, import_prop_types80.default.bool])), import_prop_types80.default.func, import_prop_types80.default.object])
} : void 0;

// node_modules/@mui/material/StepConnector/StepConnector.js
init_objectWithoutPropertiesLoose();
init_extends();
var React104 = __toESM(require_react());
var import_prop_types81 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_capitalize();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/StepConnector/stepConnectorClasses.js
init_esm();
init_generateUtilityClass();
function getStepConnectorUtilityClass(slot) {
  return generateUtilityClass("MuiStepConnector", slot);
}
var stepConnectorClasses = generateUtilityClasses("MuiStepConnector", ["root", "horizontal", "vertical", "alternativeLabel", "active", "completed", "disabled", "line", "lineHorizontal", "lineVertical"]);

// node_modules/@mui/material/StepConnector/StepConnector.js
var import_jsx_runtime125 = __toESM(require_jsx_runtime());
var _excluded73 = ["className"];
var useUtilityClasses66 = (ownerState) => {
  const {
    classes: classes2,
    orientation,
    alternativeLabel,
    active,
    completed,
    disabled
  } = ownerState;
  const slots = {
    root: ["root", orientation, alternativeLabel && "alternativeLabel", active && "active", completed && "completed", disabled && "disabled"],
    line: ["line", `line${capitalize_default(orientation)}`]
  };
  return composeClasses(slots, getStepConnectorUtilityClass, classes2);
};
var StepConnectorRoot = styled_default("div", {
  name: "MuiStepConnector",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, styles20[ownerState.orientation], ownerState.alternativeLabel && styles20.alternativeLabel, ownerState.completed && styles20.completed];
  }
})(({
  ownerState
}) => _extends({
  flex: "1 1 auto"
}, ownerState.orientation === "vertical" && {
  marginLeft: 12
  // half icon
}, ownerState.alternativeLabel && {
  position: "absolute",
  top: 8 + 4,
  left: "calc(-50% + 20px)",
  right: "calc(50% + 20px)"
}));
var StepConnectorLine = styled_default("span", {
  name: "MuiStepConnector",
  slot: "Line",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.line, styles20[`line${capitalize_default(ownerState.orientation)}`]];
  }
})(({
  ownerState,
  theme
}) => {
  const borderColor = theme.palette.mode === "light" ? theme.palette.grey[400] : theme.palette.grey[600];
  return _extends({
    display: "block",
    borderColor: theme.vars ? theme.vars.palette.StepConnector.border : borderColor
  }, ownerState.orientation === "horizontal" && {
    borderTopStyle: "solid",
    borderTopWidth: 1
  }, ownerState.orientation === "vertical" && {
    borderLeftStyle: "solid",
    borderLeftWidth: 1,
    minHeight: 24
  });
});
var StepConnector = React104.forwardRef(function StepConnector2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiStepConnector"
  });
  const {
    className
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded73);
  const {
    alternativeLabel,
    orientation = "horizontal"
  } = React104.useContext(StepperContext_default);
  const {
    active,
    disabled,
    completed
  } = React104.useContext(StepContext_default);
  const ownerState = _extends({}, props, {
    alternativeLabel,
    orientation,
    active,
    completed,
    disabled
  });
  const classes2 = useUtilityClasses66(ownerState);
  return (0, import_jsx_runtime125.jsx)(StepConnectorRoot, _extends({
    className: clsx_m_default(classes2.root, className),
    ref,
    ownerState
  }, other, {
    children: (0, import_jsx_runtime125.jsx)(StepConnectorLine, {
      className: classes2.line,
      ownerState
    })
  }));
});
true ? StepConnector.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types81.default.object,
  /**
   * @ignore
   */
  className: import_prop_types81.default.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types81.default.oneOfType([import_prop_types81.default.arrayOf(import_prop_types81.default.oneOfType([import_prop_types81.default.func, import_prop_types81.default.object, import_prop_types81.default.bool])), import_prop_types81.default.func, import_prop_types81.default.object])
} : void 0;
var StepConnector_default = StepConnector;

// node_modules/@mui/material/StepContent/StepContent.js
init_objectWithoutPropertiesLoose();
init_extends();
var React105 = __toESM(require_react());
var import_prop_types82 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/StepContent/stepContentClasses.js
init_esm();
init_generateUtilityClass();
function getStepContentUtilityClass(slot) {
  return generateUtilityClass("MuiStepContent", slot);
}
var stepContentClasses = generateUtilityClasses("MuiStepContent", ["root", "last", "transition"]);

// node_modules/@mui/material/StepContent/StepContent.js
var import_jsx_runtime126 = __toESM(require_jsx_runtime());
var _excluded74 = ["children", "className", "TransitionComponent", "transitionDuration", "TransitionProps"];
var useUtilityClasses67 = (ownerState) => {
  const {
    classes: classes2,
    last
  } = ownerState;
  const slots = {
    root: ["root", last && "last"],
    transition: ["transition"]
  };
  return composeClasses(slots, getStepContentUtilityClass, classes2);
};
var StepContentRoot = styled_default("div", {
  name: "MuiStepContent",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, ownerState.last && styles20.last];
  }
})(({
  ownerState,
  theme
}) => _extends({
  marginLeft: 12,
  // half icon
  paddingLeft: 8 + 12,
  // margin + half icon
  paddingRight: 8,
  borderLeft: theme.vars ? `1px solid ${theme.vars.palette.StepContent.border}` : `1px solid ${theme.palette.mode === "light" ? theme.palette.grey[400] : theme.palette.grey[600]}`
}, ownerState.last && {
  borderLeft: "none"
}));
var StepContentTransition = styled_default(Collapse_default, {
  name: "MuiStepContent",
  slot: "Transition",
  overridesResolver: (props, styles20) => styles20.transition
})({});
var StepContent = React105.forwardRef(function StepContent2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiStepContent"
  });
  const {
    children,
    className,
    TransitionComponent = Collapse_default,
    transitionDuration: transitionDurationProp = "auto",
    TransitionProps
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded74);
  const {
    orientation
  } = React105.useContext(StepperContext_default);
  const {
    active,
    last,
    expanded
  } = React105.useContext(StepContext_default);
  const ownerState = _extends({}, props, {
    last
  });
  const classes2 = useUtilityClasses67(ownerState);
  if (true) {
    if (orientation !== "vertical") {
      console.error("MUI: <StepContent /> is only designed for use with the vertical stepper.");
    }
  }
  let transitionDuration = transitionDurationProp;
  if (transitionDurationProp === "auto" && !TransitionComponent.muiSupportAuto) {
    transitionDuration = void 0;
  }
  return (0, import_jsx_runtime126.jsx)(StepContentRoot, _extends({
    className: clsx_m_default(classes2.root, className),
    ref,
    ownerState
  }, other, {
    children: (0, import_jsx_runtime126.jsx)(StepContentTransition, _extends({
      as: TransitionComponent,
      in: active || expanded,
      className: classes2.transition,
      ownerState,
      timeout: transitionDuration,
      unmountOnExit: true
    }, TransitionProps, {
      children
    }))
  }));
});
true ? StepContent.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types82.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types82.default.object,
  /**
   * @ignore
   */
  className: import_prop_types82.default.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types82.default.oneOfType([import_prop_types82.default.arrayOf(import_prop_types82.default.oneOfType([import_prop_types82.default.func, import_prop_types82.default.object, import_prop_types82.default.bool])), import_prop_types82.default.func, import_prop_types82.default.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Collapse
   */
  TransitionComponent: import_prop_types82.default.elementType,
  /**
   * Adjust the duration of the content expand transition.
   * Passed as a prop to the transition component.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: import_prop_types82.default.oneOfType([import_prop_types82.default.oneOf(["auto"]), import_prop_types82.default.number, import_prop_types82.default.shape({
    appear: import_prop_types82.default.number,
    enter: import_prop_types82.default.number,
    exit: import_prop_types82.default.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.
   */
  TransitionProps: import_prop_types82.default.object
} : void 0;

// node_modules/@mui/material/Stepper/Stepper.js
init_objectWithoutPropertiesLoose();
init_extends();
var React106 = __toESM(require_react());
var import_prop_types83 = __toESM(require_prop_types());
init_clsx_m();
init_esm();
init_base();
init_useThemeProps();
init_styled();

// node_modules/@mui/material/Stepper/stepperClasses.js
init_esm();
init_generateUtilityClass();
function getStepperUtilityClass(slot) {
  return generateUtilityClass("MuiStepper", slot);
}
var stepperClasses = generateUtilityClasses("MuiStepper", ["root", "horizontal", "vertical", "alternativeLabel"]);

// node_modules/@mui/material/Stepper/Stepper.js
var import_jsx_runtime127 = __toESM(require_jsx_runtime());
var _excluded75 = ["activeStep", "alternativeLabel", "children", "className", "component", "connector", "nonLinear", "orientation"];
var useUtilityClasses68 = (ownerState) => {
  const {
    orientation,
    alternativeLabel,
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root", orientation, alternativeLabel && "alternativeLabel"]
  };
  return composeClasses(slots, getStepperUtilityClass, classes2);
};
var StepperRoot = styled_default("div", {
  name: "MuiStepper",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, styles20[ownerState.orientation], ownerState.alternativeLabel && styles20.alternativeLabel];
  }
})(({
  ownerState
}) => _extends({
  display: "flex"
}, ownerState.orientation === "horizontal" && {
  flexDirection: "row",
  alignItems: "center"
}, ownerState.orientation === "vertical" && {
  flexDirection: "column"
}, ownerState.alternativeLabel && {
  alignItems: "flex-start"
}));
var defaultConnector = (0, import_jsx_runtime127.jsx)(StepConnector_default, {});
var Stepper = React106.forwardRef(function Stepper2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiStepper"
  });
  const {
    activeStep = 0,
    alternativeLabel = false,
    children,
    className,
    component = "div",
    connector = defaultConnector,
    nonLinear = false,
    orientation = "horizontal"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded75);
  const ownerState = _extends({}, props, {
    alternativeLabel,
    orientation,
    component
  });
  const classes2 = useUtilityClasses68(ownerState);
  const childrenArray = React106.Children.toArray(children).filter(Boolean);
  const steps = childrenArray.map((step, index2) => {
    return React106.cloneElement(step, _extends({
      index: index2,
      last: index2 + 1 === childrenArray.length
    }, step.props));
  });
  const contextValue = React106.useMemo(() => ({
    activeStep,
    alternativeLabel,
    connector,
    nonLinear,
    orientation
  }), [activeStep, alternativeLabel, connector, nonLinear, orientation]);
  return (0, import_jsx_runtime127.jsx)(StepperContext_default.Provider, {
    value: contextValue,
    children: (0, import_jsx_runtime127.jsx)(StepperRoot, _extends({
      as: component,
      ownerState,
      className: clsx_m_default(classes2.root, className),
      ref
    }, other, {
      children: steps
    }))
  });
});
true ? Stepper.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Set the active step (zero based index).
   * Set to -1 to disable all the steps.
   * @default 0
   */
  activeStep: integerPropType_default,
  /**
   * If set to 'true' and orientation is horizontal,
   * then the step label will be positioned under the icon.
   * @default false
   */
  alternativeLabel: import_prop_types83.default.bool,
  /**
   * Two or more `<Step />` components.
   */
  children: import_prop_types83.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types83.default.object,
  /**
   * @ignore
   */
  className: import_prop_types83.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types83.default.elementType,
  /**
   * An element to be placed between each step.
   * @default <StepConnector />
   */
  connector: import_prop_types83.default.element,
  /**
   * If set the `Stepper` will not assist in controlling steps for linear flow.
   * @default false
   */
  nonLinear: import_prop_types83.default.bool,
  /**
   * The component orientation (layout flow direction).
   * @default 'horizontal'
   */
  orientation: import_prop_types83.default.oneOf(["horizontal", "vertical"]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types83.default.oneOfType([import_prop_types83.default.arrayOf(import_prop_types83.default.oneOfType([import_prop_types83.default.func, import_prop_types83.default.object, import_prop_types83.default.bool])), import_prop_types83.default.func, import_prop_types83.default.object])
} : void 0;

// node_modules/@mui/material/index.js
init_SvgIcon();
init_SvgIcon();

// node_modules/@mui/material/SwipeableDrawer/SwipeableDrawer.js
init_extends();
init_objectWithoutPropertiesLoose();
var React108 = __toESM(require_react());
var import_react_dom2 = __toESM(require_react_dom());
var import_prop_types85 = __toESM(require_prop_types());
init_esm();
init_esm2();
init_base();
init_useForkRef();
init_ownerDocument();
init_ownerWindow();
init_useEventCallback();
init_useEnhancedEffect();

// node_modules/@mui/material/SwipeableDrawer/SwipeArea.js
init_objectWithoutPropertiesLoose();
init_extends();
var React107 = __toESM(require_react());
var import_prop_types84 = __toESM(require_prop_types());
init_clsx_m();
init_styled();
init_capitalize();
var import_jsx_runtime128 = __toESM(require_jsx_runtime());
var _excluded76 = ["anchor", "classes", "className", "width", "style"];
var SwipeAreaRoot = styled_default("div")(({
  theme,
  ownerState
}) => _extends({
  position: "fixed",
  top: 0,
  left: 0,
  bottom: 0,
  zIndex: theme.zIndex.drawer - 1
}, ownerState.anchor === "left" && {
  right: "auto"
}, ownerState.anchor === "right" && {
  left: "auto",
  right: 0
}, ownerState.anchor === "top" && {
  bottom: "auto",
  right: 0
}, ownerState.anchor === "bottom" && {
  top: "auto",
  bottom: 0,
  right: 0
}));
var SwipeArea = React107.forwardRef(function SwipeArea2(props, ref) {
  const {
    anchor,
    classes: classes2 = {},
    className,
    width,
    style: style2
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded76);
  const ownerState = props;
  return (0, import_jsx_runtime128.jsx)(SwipeAreaRoot, _extends({
    className: clsx_m_default("PrivateSwipeArea-root", classes2.root, classes2[`anchor${capitalize_default(anchor)}`], className),
    ref,
    style: _extends({
      [isHorizontal2(anchor) ? "width" : "height"]: width
    }, style2),
    ownerState
  }, other));
});
true ? SwipeArea.propTypes = {
  /**
   * Side on which to attach the discovery area.
   */
  anchor: import_prop_types84.default.oneOf(["left", "top", "right", "bottom"]).isRequired,
  /**
   * @ignore
   */
  classes: import_prop_types84.default.object,
  /**
   * @ignore
   */
  className: import_prop_types84.default.string,
  /**
   * @ignore
   */
  style: import_prop_types84.default.object,
  /**
   * The width of the left most (or right most) area in `px` where the
   * drawer can be swiped open from.
   */
  width: import_prop_types84.default.number.isRequired
} : void 0;
var SwipeArea_default = SwipeArea;

// node_modules/@mui/material/SwipeableDrawer/SwipeableDrawer.js
var import_jsx_runtime129 = __toESM(require_jsx_runtime());
var import_jsx_runtime130 = __toESM(require_jsx_runtime());
var _excluded77 = ["BackdropProps"];
var _excluded216 = ["anchor", "disableBackdropTransition", "disableDiscovery", "disableSwipeToOpen", "hideBackdrop", "hysteresis", "allowSwipeInChildren", "minFlingVelocity", "ModalProps", "onClose", "onOpen", "open", "PaperProps", "SwipeAreaProps", "swipeAreaWidth", "transitionDuration", "variant"];
var UNCERTAINTY_THRESHOLD = 3;
var DRAG_STARTED_SIGNAL = 20;
var claimedSwipeInstance = null;
function calculateCurrentX(anchor, touches, doc) {
  return anchor === "right" ? doc.body.offsetWidth - touches[0].pageX : touches[0].pageX;
}
function calculateCurrentY(anchor, touches, containerWindow) {
  return anchor === "bottom" ? containerWindow.innerHeight - touches[0].clientY : touches[0].clientY;
}
function getMaxTranslate(horizontalSwipe, paperInstance) {
  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;
}
function getTranslate(currentTranslate, startLocation, open, maxTranslate) {
  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);
}
function getDomTreeShapes(element, rootNode) {
  const domTreeShapes = [];
  while (element && element !== rootNode.parentElement) {
    const style2 = ownerWindow_default(rootNode).getComputedStyle(element);
    if (
      // Ignore the scroll children if the element is absolute positioned.
      style2.getPropertyValue("position") === "absolute" || // Ignore the scroll children if the element has an overflowX hidden
      style2.getPropertyValue("overflow-x") === "hidden"
    ) {
    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {
      domTreeShapes.push(element);
    }
    element = element.parentElement;
  }
  return domTreeShapes;
}
function computeHasNativeHandler({
  domTreeShapes,
  start,
  current,
  anchor
}) {
  const axisProperties = {
    scrollPosition: {
      x: "scrollLeft",
      y: "scrollTop"
    },
    scrollLength: {
      x: "scrollWidth",
      y: "scrollHeight"
    },
    clientLength: {
      x: "clientWidth",
      y: "clientHeight"
    }
  };
  return domTreeShapes.some((shape) => {
    let goingForward = current >= start;
    if (anchor === "top" || anchor === "left") {
      goingForward = !goingForward;
    }
    const axis = anchor === "left" || anchor === "right" ? "x" : "y";
    const scrollPosition = Math.round(shape[axisProperties.scrollPosition[axis]]);
    const areNotAtStart = scrollPosition > 0;
    const areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];
    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {
      return true;
    }
    return false;
  });
}
var iOS = typeof navigator !== "undefined" && /iPad|iPhone|iPod/.test(navigator.userAgent);
var SwipeableDrawer = React108.forwardRef(function SwipeableDrawer2(inProps, ref) {
  const props = useThemeProps({
    name: "MuiSwipeableDrawer",
    props: inProps
  });
  const theme = useTheme();
  const transitionDurationDefault = {
    enter: theme.transitions.duration.enteringScreen,
    exit: theme.transitions.duration.leavingScreen
  };
  const {
    anchor = "left",
    disableBackdropTransition = false,
    disableDiscovery = false,
    disableSwipeToOpen = iOS,
    hideBackdrop,
    hysteresis = 0.52,
    allowSwipeInChildren = false,
    minFlingVelocity = 450,
    ModalProps: {
      BackdropProps
    } = {},
    onClose,
    onOpen,
    open = false,
    PaperProps = {},
    SwipeAreaProps,
    swipeAreaWidth = 20,
    transitionDuration = transitionDurationDefault,
    variant = "temporary"
  } = props, ModalPropsProp = _objectWithoutPropertiesLoose(props.ModalProps, _excluded77), other = _objectWithoutPropertiesLoose(props, _excluded216);
  const [maybeSwiping, setMaybeSwiping] = React108.useState(false);
  const swipeInstance = React108.useRef({
    isSwiping: null
  });
  const swipeAreaRef = React108.useRef();
  const backdropRef = React108.useRef();
  const paperRef = React108.useRef();
  const handleRef = useForkRef_default(PaperProps.ref, paperRef);
  const touchDetected = React108.useRef(false);
  const calculatedDurationRef = React108.useRef();
  useEnhancedEffect_default(() => {
    calculatedDurationRef.current = null;
  }, [open]);
  const setPosition = React108.useCallback((translate, options = {}) => {
    const {
      mode = null,
      changeTransition = true
    } = options;
    const anchorRtl = getAnchor(theme, anchor);
    const rtlTranslateMultiplier = ["right", "bottom"].indexOf(anchorRtl) !== -1 ? 1 : -1;
    const horizontalSwipe = isHorizontal2(anchor);
    const transform = horizontalSwipe ? `translate(${rtlTranslateMultiplier * translate}px, 0)` : `translate(0, ${rtlTranslateMultiplier * translate}px)`;
    const drawerStyle = paperRef.current.style;
    drawerStyle.webkitTransform = transform;
    drawerStyle.transform = transform;
    let transition = "";
    if (mode) {
      transition = theme.transitions.create("all", getTransitionProps({
        easing: void 0,
        style: void 0,
        timeout: transitionDuration
      }, {
        mode
      }));
    }
    if (changeTransition) {
      drawerStyle.webkitTransition = transition;
      drawerStyle.transition = transition;
    }
    if (!disableBackdropTransition && !hideBackdrop) {
      const backdropStyle = backdropRef.current.style;
      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);
      if (changeTransition) {
        backdropStyle.webkitTransition = transition;
        backdropStyle.transition = transition;
      }
    }
  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);
  const handleBodyTouchEnd = useEventCallback_default((nativeEvent) => {
    if (!touchDetected.current) {
      return;
    }
    claimedSwipeInstance = null;
    touchDetected.current = false;
    (0, import_react_dom2.flushSync)(() => {
      setMaybeSwiping(false);
    });
    if (!swipeInstance.current.isSwiping) {
      swipeInstance.current.isSwiping = null;
      return;
    }
    swipeInstance.current.isSwiping = null;
    const anchorRtl = getAnchor(theme, anchor);
    const horizontal = isHorizontal2(anchor);
    let current;
    if (horizontal) {
      current = calculateCurrentX(anchorRtl, nativeEvent.changedTouches, ownerDocument_default(nativeEvent.currentTarget));
    } else {
      current = calculateCurrentY(anchorRtl, nativeEvent.changedTouches, ownerWindow_default(nativeEvent.currentTarget));
    }
    const startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;
    const maxTranslate = getMaxTranslate(horizontal, paperRef.current);
    const currentTranslate = getTranslate(current, startLocation, open, maxTranslate);
    const translateRatio = currentTranslate / maxTranslate;
    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {
      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1e3;
    }
    if (open) {
      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {
        onClose();
      } else {
        setPosition(0, {
          mode: "exit"
        });
      }
      return;
    }
    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {
      onOpen();
    } else {
      setPosition(getMaxTranslate(horizontal, paperRef.current), {
        mode: "enter"
      });
    }
  });
  const startMaybeSwiping = (force = false) => {
    if (!maybeSwiping) {
      if (force || !(disableDiscovery && allowSwipeInChildren)) {
        (0, import_react_dom2.flushSync)(() => {
          setMaybeSwiping(true);
        });
      }
      const horizontalSwipe = isHorizontal2(anchor);
      if (!open && paperRef.current) {
        setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 15 : -DRAG_STARTED_SIGNAL), {
          changeTransition: false
        });
      }
      swipeInstance.current.velocity = 0;
      swipeInstance.current.lastTime = null;
      swipeInstance.current.lastTranslate = null;
      swipeInstance.current.paperHit = false;
      touchDetected.current = true;
    }
  };
  const handleBodyTouchMove = useEventCallback_default((nativeEvent) => {
    if (!paperRef.current || !touchDetected.current) {
      return;
    }
    if (claimedSwipeInstance !== null && claimedSwipeInstance !== swipeInstance.current) {
      return;
    }
    startMaybeSwiping(true);
    const anchorRtl = getAnchor(theme, anchor);
    const horizontalSwipe = isHorizontal2(anchor);
    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, ownerDocument_default(nativeEvent.currentTarget));
    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, ownerWindow_default(nativeEvent.currentTarget));
    if (open && paperRef.current.contains(nativeEvent.target) && claimedSwipeInstance === null) {
      const domTreeShapes = getDomTreeShapes(nativeEvent.target, paperRef.current);
      const hasNativeHandler = computeHasNativeHandler({
        domTreeShapes,
        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,
        current: horizontalSwipe ? currentX : currentY,
        anchor
      });
      if (hasNativeHandler) {
        claimedSwipeInstance = true;
        return;
      }
      claimedSwipeInstance = swipeInstance.current;
    }
    if (swipeInstance.current.isSwiping == null) {
      const dx = Math.abs(currentX - swipeInstance.current.startX);
      const dy = Math.abs(currentY - swipeInstance.current.startY);
      const definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;
      if (definitelySwiping && nativeEvent.cancelable) {
        nativeEvent.preventDefault();
      }
      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {
        swipeInstance.current.isSwiping = definitelySwiping;
        if (!definitelySwiping) {
          handleBodyTouchEnd(nativeEvent);
          return;
        }
        swipeInstance.current.startX = currentX;
        swipeInstance.current.startY = currentY;
        if (!disableDiscovery && !open) {
          if (horizontalSwipe) {
            swipeInstance.current.startX -= DRAG_STARTED_SIGNAL;
          } else {
            swipeInstance.current.startY -= DRAG_STARTED_SIGNAL;
          }
        }
      }
    }
    if (!swipeInstance.current.isSwiping) {
      return;
    }
    const maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);
    let startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;
    if (open && !swipeInstance.current.paperHit) {
      startLocation = Math.min(startLocation, maxTranslate);
    }
    const translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);
    if (open) {
      if (!swipeInstance.current.paperHit) {
        const paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;
        if (paperHit) {
          swipeInstance.current.paperHit = true;
          swipeInstance.current.startX = currentX;
          swipeInstance.current.startY = currentY;
        } else {
          return;
        }
      } else if (translate === 0) {
        swipeInstance.current.startX = currentX;
        swipeInstance.current.startY = currentY;
      }
    }
    if (swipeInstance.current.lastTranslate === null) {
      swipeInstance.current.lastTranslate = translate;
      swipeInstance.current.lastTime = performance.now() + 1;
    }
    const velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3;
    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;
    swipeInstance.current.lastTranslate = translate;
    swipeInstance.current.lastTime = performance.now();
    if (nativeEvent.cancelable) {
      nativeEvent.preventDefault();
    }
    setPosition(translate);
  });
  const handleBodyTouchStart = useEventCallback_default((nativeEvent) => {
    if (nativeEvent.defaultPrevented) {
      return;
    }
    if (nativeEvent.defaultMuiPrevented) {
      return;
    }
    if (open && (hideBackdrop || !backdropRef.current.contains(nativeEvent.target)) && !paperRef.current.contains(nativeEvent.target)) {
      return;
    }
    const anchorRtl = getAnchor(theme, anchor);
    const horizontalSwipe = isHorizontal2(anchor);
    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, ownerDocument_default(nativeEvent.currentTarget));
    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, ownerWindow_default(nativeEvent.currentTarget));
    if (!open) {
      var _paperRef$current;
      if (disableSwipeToOpen || !(nativeEvent.target === swipeAreaRef.current || (_paperRef$current = paperRef.current) != null && _paperRef$current.contains(nativeEvent.target) && (typeof allowSwipeInChildren === "function" ? allowSwipeInChildren(nativeEvent, swipeAreaRef.current, paperRef.current) : allowSwipeInChildren))) {
        return;
      }
      if (horizontalSwipe) {
        if (currentX > swipeAreaWidth) {
          return;
        }
      } else if (currentY > swipeAreaWidth) {
        return;
      }
    }
    nativeEvent.defaultMuiPrevented = true;
    claimedSwipeInstance = null;
    swipeInstance.current.startX = currentX;
    swipeInstance.current.startY = currentY;
    startMaybeSwiping();
  });
  React108.useEffect(() => {
    if (variant === "temporary") {
      const doc = ownerDocument_default(paperRef.current);
      doc.addEventListener("touchstart", handleBodyTouchStart);
      doc.addEventListener("touchmove", handleBodyTouchMove, {
        passive: !open
      });
      doc.addEventListener("touchend", handleBodyTouchEnd);
      return () => {
        doc.removeEventListener("touchstart", handleBodyTouchStart);
        doc.removeEventListener("touchmove", handleBodyTouchMove, {
          passive: !open
        });
        doc.removeEventListener("touchend", handleBodyTouchEnd);
      };
    }
    return void 0;
  }, [variant, open, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);
  React108.useEffect(() => () => {
    if (claimedSwipeInstance === swipeInstance.current) {
      claimedSwipeInstance = null;
    }
  }, []);
  React108.useEffect(() => {
    if (!open) {
      setMaybeSwiping(false);
    }
  }, [open]);
  return (0, import_jsx_runtime130.jsxs)(React108.Fragment, {
    children: [(0, import_jsx_runtime129.jsx)(Drawer_default, _extends({
      open: variant === "temporary" && maybeSwiping ? true : open,
      variant,
      ModalProps: _extends({
        BackdropProps: _extends({}, BackdropProps, {
          ref: backdropRef
        })
      }, variant === "temporary" && {
        keepMounted: true
      }, ModalPropsProp),
      hideBackdrop,
      PaperProps: _extends({}, PaperProps, {
        style: _extends({
          pointerEvents: variant === "temporary" && !open && !allowSwipeInChildren ? "none" : ""
        }, PaperProps.style),
        ref: handleRef
      }),
      anchor,
      transitionDuration: calculatedDurationRef.current || transitionDuration,
      onClose,
      ref
    }, other)), !disableSwipeToOpen && variant === "temporary" && (0, import_jsx_runtime129.jsx)(NoSsr_default, {
      children: (0, import_jsx_runtime129.jsx)(SwipeArea_default, _extends({
        anchor,
        ref: swipeAreaRef,
        width: swipeAreaWidth
      }, SwipeAreaProps))
    })]
  });
});
true ? SwipeableDrawer.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * If set to true, the swipe event will open the drawer even if the user begins the swipe on one of the drawer's children.
   * This can be useful in scenarios where the drawer is partially visible.
   * You can customize it further with a callback that determines which children the user can drag over to open the drawer
   * (for example, to ignore other elements that handle touch move events, like sliders).
   *
   * @param {TouchEvent} event The 'touchstart' event
   * @param {HTMLDivElement} swipeArea The swipe area element
   * @param {HTMLDivElement} paper The drawer's paper element
   *
   * @default false
   */
  allowSwipeInChildren: import_prop_types85.default.oneOfType([import_prop_types85.default.bool, import_prop_types85.default.func]),
  /**
   * @ignore
   */
  anchor: import_prop_types85.default.oneOf(["bottom", "left", "right", "top"]),
  /**
   * The content of the component.
   */
  children: import_prop_types85.default.node,
  /**
   * Disable the backdrop transition.
   * This can improve the FPS on low-end devices.
   * @default false
   */
  disableBackdropTransition: import_prop_types85.default.bool,
  /**
   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit
   * to promote accidental discovery of the swipe gesture.
   * @default false
   */
  disableDiscovery: import_prop_types85.default.bool,
  /**
   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers
   * navigation actions. Swipe to open is disabled on iOS browsers by default.
   * @default typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent)
   */
  disableSwipeToOpen: import_prop_types85.default.bool,
  /**
   * @ignore
   */
  hideBackdrop: import_prop_types85.default.bool,
  /**
   * Affects how far the drawer must be opened/closed to change its state.
   * Specified as percent (0-1) of the width of the drawer
   * @default 0.52
   */
  hysteresis: import_prop_types85.default.number,
  /**
   * Defines, from which (average) velocity on, the swipe is
   * defined as complete although hysteresis isn't reached.
   * Good threshold is between 250 - 1000 px/s
   * @default 450
   */
  minFlingVelocity: import_prop_types85.default.number,
  /**
   * @ignore
   */
  ModalProps: import_prop_types85.default.shape({
    BackdropProps: import_prop_types85.default.shape({
      component: elementTypeAcceptingRef_default
    })
  }),
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   */
  onClose: import_prop_types85.default.func.isRequired,
  /**
   * Callback fired when the component requests to be opened.
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: import_prop_types85.default.func.isRequired,
  /**
   * If `true`, the component is shown.
   * @default false
   */
  open: import_prop_types85.default.bool.isRequired,
  /**
   * @ignore
   */
  PaperProps: import_prop_types85.default.shape({
    component: elementTypeAcceptingRef_default,
    style: import_prop_types85.default.object
  }),
  /**
   * The element is used to intercept the touch events on the edge.
   */
  SwipeAreaProps: import_prop_types85.default.object,
  /**
   * The width of the left most (or right most) area in `px` that
   * the drawer can be swiped open from.
   * @default 20
   */
  swipeAreaWidth: import_prop_types85.default.number,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: import_prop_types85.default.oneOfType([import_prop_types85.default.number, import_prop_types85.default.shape({
    appear: import_prop_types85.default.number,
    enter: import_prop_types85.default.number,
    exit: import_prop_types85.default.number
  })]),
  /**
   * @ignore
   */
  variant: import_prop_types85.default.oneOf(["permanent", "persistent", "temporary"])
} : void 0;

// node_modules/@mui/material/Switch/Switch.js
init_objectWithoutPropertiesLoose();
init_extends();
var React109 = __toESM(require_react());
var import_prop_types86 = __toESM(require_prop_types());
init_clsx_m();
init_esm();
init_base();
init_esm2();
init_capitalize();
init_useThemeProps();
init_styled();

// node_modules/@mui/material/Switch/switchClasses.js
init_esm();
init_generateUtilityClass();
function getSwitchUtilityClass(slot) {
  return generateUtilityClass("MuiSwitch", slot);
}
var switchClasses = generateUtilityClasses("MuiSwitch", ["root", "edgeStart", "edgeEnd", "switchBase", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium", "checked", "disabled", "input", "thumb", "track"]);
var switchClasses_default = switchClasses;

// node_modules/@mui/material/Switch/Switch.js
var import_jsx_runtime131 = __toESM(require_jsx_runtime());
var import_jsx_runtime132 = __toESM(require_jsx_runtime());
var _excluded78 = ["className", "color", "edge", "size", "sx"];
var useUtilityClasses69 = (ownerState) => {
  const {
    classes: classes2,
    edge,
    size,
    color: color2,
    checked,
    disabled
  } = ownerState;
  const slots = {
    root: ["root", edge && `edge${capitalize_default(edge)}`, `size${capitalize_default(size)}`],
    switchBase: ["switchBase", `color${capitalize_default(color2)}`, checked && "checked", disabled && "disabled"],
    thumb: ["thumb"],
    track: ["track"],
    input: ["input"]
  };
  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes2);
  return _extends({}, classes2, composedClasses);
};
var SwitchRoot = styled_default("span", {
  name: "MuiSwitch",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, ownerState.edge && styles20[`edge${capitalize_default(ownerState.edge)}`], styles20[`size${capitalize_default(ownerState.size)}`]];
  }
})(({
  ownerState
}) => _extends({
  display: "inline-flex",
  width: 34 + 12 * 2,
  height: 14 + 12 * 2,
  overflow: "hidden",
  padding: 12,
  boxSizing: "border-box",
  position: "relative",
  flexShrink: 0,
  zIndex: 0,
  // Reset the stacking context.
  verticalAlign: "middle",
  // For correct alignment with the text.
  "@media print": {
    colorAdjust: "exact"
  }
}, ownerState.edge === "start" && {
  marginLeft: -8
}, ownerState.edge === "end" && {
  marginRight: -8
}, ownerState.size === "small" && {
  width: 40,
  height: 24,
  padding: 7,
  [`& .${switchClasses_default.thumb}`]: {
    width: 16,
    height: 16
  },
  [`& .${switchClasses_default.switchBase}`]: {
    padding: 4,
    [`&.${switchClasses_default.checked}`]: {
      transform: "translateX(16px)"
    }
  }
}));
var SwitchSwitchBase = styled_default(SwitchBase_default, {
  name: "MuiSwitch",
  slot: "SwitchBase",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.switchBase, {
      [`& .${switchClasses_default.input}`]: styles20.input
    }, ownerState.color !== "default" && styles20[`color${capitalize_default(ownerState.color)}`]];
  }
})(({
  theme
}) => ({
  position: "absolute",
  top: 0,
  left: 0,
  zIndex: 1,
  // Render above the focus ripple.
  color: theme.vars ? theme.vars.palette.Switch.defaultColor : `${theme.palette.mode === "light" ? theme.palette.common.white : theme.palette.grey[300]}`,
  transition: theme.transitions.create(["left", "transform"], {
    duration: theme.transitions.duration.shortest
  }),
  [`&.${switchClasses_default.checked}`]: {
    transform: "translateX(20px)"
  },
  [`&.${switchClasses_default.disabled}`]: {
    color: theme.vars ? theme.vars.palette.Switch.defaultDisabledColor : `${theme.palette.mode === "light" ? theme.palette.grey[100] : theme.palette.grey[600]}`
  },
  [`&.${switchClasses_default.checked} + .${switchClasses_default.track}`]: {
    opacity: 0.5
  },
  [`&.${switchClasses_default.disabled} + .${switchClasses_default.track}`]: {
    opacity: theme.vars ? theme.vars.opacity.switchTrackDisabled : `${theme.palette.mode === "light" ? 0.12 : 0.2}`
  },
  [`& .${switchClasses_default.input}`]: {
    left: "-100%",
    width: "300%"
  }
}), ({
  theme,
  ownerState
}) => _extends({
  "&:hover": {
    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  }
}, ownerState.color !== "default" && {
  [`&.${switchClasses_default.checked}`]: {
    color: (theme.vars || theme).palette[ownerState.color].main,
    "&:hover": {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    },
    [`&.${switchClasses_default.disabled}`]: {
      color: theme.vars ? theme.vars.palette.Switch[`${ownerState.color}DisabledColor`] : `${theme.palette.mode === "light" ? lighten(theme.palette[ownerState.color].main, 0.62) : darken(theme.palette[ownerState.color].main, 0.55)}`
    }
  },
  [`&.${switchClasses_default.checked} + .${switchClasses_default.track}`]: {
    backgroundColor: (theme.vars || theme).palette[ownerState.color].main
  }
}));
var SwitchTrack = styled_default("span", {
  name: "MuiSwitch",
  slot: "Track",
  overridesResolver: (props, styles20) => styles20.track
})(({
  theme
}) => ({
  height: "100%",
  width: "100%",
  borderRadius: 14 / 2,
  zIndex: -1,
  transition: theme.transitions.create(["opacity", "background-color"], {
    duration: theme.transitions.duration.shortest
  }),
  backgroundColor: theme.vars ? theme.vars.palette.common.onBackground : `${theme.palette.mode === "light" ? theme.palette.common.black : theme.palette.common.white}`,
  opacity: theme.vars ? theme.vars.opacity.switchTrack : `${theme.palette.mode === "light" ? 0.38 : 0.3}`
}));
var SwitchThumb = styled_default("span", {
  name: "MuiSwitch",
  slot: "Thumb",
  overridesResolver: (props, styles20) => styles20.thumb
})(({
  theme
}) => ({
  boxShadow: (theme.vars || theme).shadows[1],
  backgroundColor: "currentColor",
  width: 20,
  height: 20,
  borderRadius: "50%"
}));
var Switch = React109.forwardRef(function Switch2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiSwitch"
  });
  const {
    className,
    color: color2 = "primary",
    edge = false,
    size = "medium",
    sx
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded78);
  const ownerState = _extends({}, props, {
    color: color2,
    edge,
    size
  });
  const classes2 = useUtilityClasses69(ownerState);
  const icon = (0, import_jsx_runtime131.jsx)(SwitchThumb, {
    className: classes2.thumb,
    ownerState
  });
  return (0, import_jsx_runtime132.jsxs)(SwitchRoot, {
    className: clsx_m_default(classes2.root, className),
    sx,
    ownerState,
    children: [(0, import_jsx_runtime131.jsx)(SwitchSwitchBase, _extends({
      type: "checkbox",
      icon,
      checkedIcon: icon,
      ref,
      ownerState
    }, other, {
      classes: _extends({}, classes2, {
        root: classes2.switchBase
      })
    })), (0, import_jsx_runtime131.jsx)(SwitchTrack, {
      className: classes2.track,
      ownerState
    })]
  });
});
true ? Switch.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the component is checked.
   */
  checked: import_prop_types86.default.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: import_prop_types86.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types86.default.object,
  /**
   * @ignore
   */
  className: import_prop_types86.default.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'primary'
   */
  color: import_prop_types86.default.oneOfType([import_prop_types86.default.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), import_prop_types86.default.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: import_prop_types86.default.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: import_prop_types86.default.bool,
  /**
   * If `true`, the ripple effect is disabled.
   */
  disableRipple: import_prop_types86.default.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: import_prop_types86.default.oneOf(["end", "start", false]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: import_prop_types86.default.node,
  /**
   * The id of the `input` element.
   */
  id: import_prop_types86.default.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: import_prop_types86.default.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: refType_default,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: import_prop_types86.default.func,
  /**
   * If `true`, the `input` element is required.
   */
  required: import_prop_types86.default.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense switch styling.
   * @default 'medium'
   */
  size: import_prop_types86.default.oneOfType([import_prop_types86.default.oneOf(["medium", "small"]), import_prop_types86.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types86.default.oneOfType([import_prop_types86.default.arrayOf(import_prop_types86.default.oneOfType([import_prop_types86.default.func, import_prop_types86.default.object, import_prop_types86.default.bool])), import_prop_types86.default.func, import_prop_types86.default.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: import_prop_types86.default.any
} : void 0;

// node_modules/@mui/material/Tab/Tab.js
init_objectWithoutPropertiesLoose();
init_extends();
var React110 = __toESM(require_react());
var import_prop_types87 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_capitalize();
init_useThemeProps();
init_styled();
init_unsupportedProp();

// node_modules/@mui/material/Tab/tabClasses.js
init_esm();
init_generateUtilityClass();
function getTabUtilityClass(slot) {
  return generateUtilityClass("MuiTab", slot);
}
var tabClasses = generateUtilityClasses("MuiTab", ["root", "labelIcon", "textColorInherit", "textColorPrimary", "textColorSecondary", "selected", "disabled", "fullWidth", "wrapped", "iconWrapper"]);
var tabClasses_default = tabClasses;

// node_modules/@mui/material/Tab/Tab.js
var import_jsx_runtime133 = __toESM(require_jsx_runtime());
var _excluded79 = ["className", "disabled", "disableFocusRipple", "fullWidth", "icon", "iconPosition", "indicator", "label", "onChange", "onClick", "onFocus", "selected", "selectionFollowsFocus", "textColor", "value", "wrapped"];
var useUtilityClasses70 = (ownerState) => {
  const {
    classes: classes2,
    textColor,
    fullWidth,
    wrapped,
    icon,
    label,
    selected,
    disabled
  } = ownerState;
  const slots = {
    root: ["root", icon && label && "labelIcon", `textColor${capitalize_default(textColor)}`, fullWidth && "fullWidth", wrapped && "wrapped", selected && "selected", disabled && "disabled"],
    iconWrapper: ["iconWrapper"]
  };
  return composeClasses(slots, getTabUtilityClass, classes2);
};
var TabRoot = styled_default(ButtonBase_default, {
  name: "MuiTab",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, ownerState.label && ownerState.icon && styles20.labelIcon, styles20[`textColor${capitalize_default(ownerState.textColor)}`], ownerState.fullWidth && styles20.fullWidth, ownerState.wrapped && styles20.wrapped];
  }
})(({
  theme,
  ownerState
}) => _extends({}, theme.typography.button, {
  maxWidth: 360,
  minWidth: 90,
  position: "relative",
  minHeight: 48,
  flexShrink: 0,
  padding: "12px 16px",
  overflow: "hidden",
  whiteSpace: "normal",
  textAlign: "center"
}, ownerState.label && {
  flexDirection: ownerState.iconPosition === "top" || ownerState.iconPosition === "bottom" ? "column" : "row"
}, {
  lineHeight: 1.25
}, ownerState.icon && ownerState.label && {
  minHeight: 72,
  paddingTop: 9,
  paddingBottom: 9,
  [`& > .${tabClasses_default.iconWrapper}`]: _extends({}, ownerState.iconPosition === "top" && {
    marginBottom: 6
  }, ownerState.iconPosition === "bottom" && {
    marginTop: 6
  }, ownerState.iconPosition === "start" && {
    marginRight: theme.spacing(1)
  }, ownerState.iconPosition === "end" && {
    marginLeft: theme.spacing(1)
  })
}, ownerState.textColor === "inherit" && {
  color: "inherit",
  opacity: 0.6,
  // same opacity as theme.palette.text.secondary
  [`&.${tabClasses_default.selected}`]: {
    opacity: 1
  },
  [`&.${tabClasses_default.disabled}`]: {
    opacity: (theme.vars || theme).palette.action.disabledOpacity
  }
}, ownerState.textColor === "primary" && {
  color: (theme.vars || theme).palette.text.secondary,
  [`&.${tabClasses_default.selected}`]: {
    color: (theme.vars || theme).palette.primary.main
  },
  [`&.${tabClasses_default.disabled}`]: {
    color: (theme.vars || theme).palette.text.disabled
  }
}, ownerState.textColor === "secondary" && {
  color: (theme.vars || theme).palette.text.secondary,
  [`&.${tabClasses_default.selected}`]: {
    color: (theme.vars || theme).palette.secondary.main
  },
  [`&.${tabClasses_default.disabled}`]: {
    color: (theme.vars || theme).palette.text.disabled
  }
}, ownerState.fullWidth && {
  flexShrink: 1,
  flexGrow: 1,
  flexBasis: 0,
  maxWidth: "none"
}, ownerState.wrapped && {
  fontSize: theme.typography.pxToRem(12)
}));
var Tab = React110.forwardRef(function Tab2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiTab"
  });
  const {
    className,
    disabled = false,
    disableFocusRipple = false,
    // eslint-disable-next-line react/prop-types
    fullWidth,
    icon: iconProp,
    iconPosition = "top",
    // eslint-disable-next-line react/prop-types
    indicator,
    label,
    onChange,
    onClick,
    onFocus,
    // eslint-disable-next-line react/prop-types
    selected,
    // eslint-disable-next-line react/prop-types
    selectionFollowsFocus,
    // eslint-disable-next-line react/prop-types
    textColor = "inherit",
    value,
    wrapped = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded79);
  const ownerState = _extends({}, props, {
    disabled,
    disableFocusRipple,
    selected,
    icon: !!iconProp,
    iconPosition,
    label: !!label,
    fullWidth,
    textColor,
    wrapped
  });
  const classes2 = useUtilityClasses70(ownerState);
  const icon = iconProp && label && React110.isValidElement(iconProp) ? React110.cloneElement(iconProp, {
    className: clsx_m_default(classes2.iconWrapper, iconProp.props.className)
  }) : iconProp;
  const handleClick = (event) => {
    if (!selected && onChange) {
      onChange(event, value);
    }
    if (onClick) {
      onClick(event);
    }
  };
  const handleFocus = (event) => {
    if (selectionFollowsFocus && !selected && onChange) {
      onChange(event, value);
    }
    if (onFocus) {
      onFocus(event);
    }
  };
  return (0, import_jsx_runtime133.jsxs)(TabRoot, _extends({
    focusRipple: !disableFocusRipple,
    className: clsx_m_default(classes2.root, className),
    ref,
    role: "tab",
    "aria-selected": selected,
    disabled,
    onClick: handleClick,
    onFocus: handleFocus,
    ownerState,
    tabIndex: selected ? 0 : -1
  }, other, {
    children: [iconPosition === "top" || iconPosition === "start" ? (0, import_jsx_runtime133.jsxs)(React110.Fragment, {
      children: [icon, label]
    }) : (0, import_jsx_runtime133.jsxs)(React110.Fragment, {
      children: [label, icon]
    }), indicator]
  }));
});
true ? Tab.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * This prop isn't supported.
   * Use the `component` prop if you need to change the children structure.
   */
  children: unsupportedProp_default,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types87.default.object,
  /**
   * @ignore
   */
  className: import_prop_types87.default.string,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types87.default.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: import_prop_types87.default.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: import_prop_types87.default.bool,
  /**
   * The icon to display.
   */
  icon: import_prop_types87.default.oneOfType([import_prop_types87.default.element, import_prop_types87.default.string]),
  /**
   * The position of the icon relative to the label.
   * @default 'top'
   */
  iconPosition: import_prop_types87.default.oneOf(["bottom", "end", "start", "top"]),
  /**
   * The label element.
   */
  label: import_prop_types87.default.node,
  /**
   * @ignore
   */
  onChange: import_prop_types87.default.func,
  /**
   * @ignore
   */
  onClick: import_prop_types87.default.func,
  /**
   * @ignore
   */
  onFocus: import_prop_types87.default.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types87.default.oneOfType([import_prop_types87.default.arrayOf(import_prop_types87.default.oneOfType([import_prop_types87.default.func, import_prop_types87.default.object, import_prop_types87.default.bool])), import_prop_types87.default.func, import_prop_types87.default.object]),
  /**
   * You can provide your own value. Otherwise, we fallback to the child position index.
   */
  value: import_prop_types87.default.any,
  /**
   * Tab labels appear in a single row.
   * They can use a second line if needed.
   * @default false
   */
  wrapped: import_prop_types87.default.bool
} : void 0;

// node_modules/@mui/material/Table/Table.js
init_objectWithoutPropertiesLoose();
init_extends();
var React112 = __toESM(require_react());
var import_prop_types88 = __toESM(require_prop_types());
init_clsx_m();
init_base();

// node_modules/@mui/material/Table/TableContext.js
var React111 = __toESM(require_react());
var TableContext = React111.createContext();
if (true) {
  TableContext.displayName = "TableContext";
}
var TableContext_default = TableContext;

// node_modules/@mui/material/Table/Table.js
init_useThemeProps();
init_styled();

// node_modules/@mui/material/Table/tableClasses.js
init_esm();
init_generateUtilityClass();
function getTableUtilityClass(slot) {
  return generateUtilityClass("MuiTable", slot);
}
var tableClasses = generateUtilityClasses("MuiTable", ["root", "stickyHeader"]);

// node_modules/@mui/material/Table/Table.js
var import_jsx_runtime134 = __toESM(require_jsx_runtime());
var _excluded80 = ["className", "component", "padding", "size", "stickyHeader"];
var useUtilityClasses71 = (ownerState) => {
  const {
    classes: classes2,
    stickyHeader
  } = ownerState;
  const slots = {
    root: ["root", stickyHeader && "stickyHeader"]
  };
  return composeClasses(slots, getTableUtilityClass, classes2);
};
var TableRoot = styled_default("table", {
  name: "MuiTable",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, ownerState.stickyHeader && styles20.stickyHeader];
  }
})(({
  theme,
  ownerState
}) => _extends({
  display: "table",
  width: "100%",
  borderCollapse: "collapse",
  borderSpacing: 0,
  "& caption": _extends({}, theme.typography.body2, {
    padding: theme.spacing(2),
    color: (theme.vars || theme).palette.text.secondary,
    textAlign: "left",
    captionSide: "bottom"
  })
}, ownerState.stickyHeader && {
  borderCollapse: "separate"
}));
var defaultComponent = "table";
var Table = React112.forwardRef(function Table2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiTable"
  });
  const {
    className,
    component = defaultComponent,
    padding = "normal",
    size = "medium",
    stickyHeader = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded80);
  const ownerState = _extends({}, props, {
    component,
    padding,
    size,
    stickyHeader
  });
  const classes2 = useUtilityClasses71(ownerState);
  const table = React112.useMemo(() => ({
    padding,
    size,
    stickyHeader
  }), [padding, size, stickyHeader]);
  return (0, import_jsx_runtime134.jsx)(TableContext_default.Provider, {
    value: table,
    children: (0, import_jsx_runtime134.jsx)(TableRoot, _extends({
      as: component,
      role: component === defaultComponent ? null : "table",
      ref,
      className: clsx_m_default(classes2.root, className),
      ownerState
    }, other))
  });
});
true ? Table.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the table, normally `TableHead` and `TableBody`.
   */
  children: import_prop_types88.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types88.default.object,
  /**
   * @ignore
   */
  className: import_prop_types88.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types88.default.elementType,
  /**
   * Allows TableCells to inherit padding of the Table.
   * @default 'normal'
   */
  padding: import_prop_types88.default.oneOf(["checkbox", "none", "normal"]),
  /**
   * Allows TableCells to inherit size of the Table.
   * @default 'medium'
   */
  size: import_prop_types88.default.oneOfType([import_prop_types88.default.oneOf(["medium", "small"]), import_prop_types88.default.string]),
  /**
   * Set the header sticky.
   *
   * ⚠️ It doesn't work with IE11.
   * @default false
   */
  stickyHeader: import_prop_types88.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types88.default.oneOfType([import_prop_types88.default.arrayOf(import_prop_types88.default.oneOfType([import_prop_types88.default.func, import_prop_types88.default.object, import_prop_types88.default.bool])), import_prop_types88.default.func, import_prop_types88.default.object])
} : void 0;

// node_modules/@mui/material/TableBody/TableBody.js
init_extends();
init_objectWithoutPropertiesLoose();
var React114 = __toESM(require_react());
var import_prop_types89 = __toESM(require_prop_types());
init_clsx_m();
init_base();

// node_modules/@mui/material/Table/Tablelvl2Context.js
var React113 = __toESM(require_react());
var Tablelvl2Context = React113.createContext();
if (true) {
  Tablelvl2Context.displayName = "Tablelvl2Context";
}
var Tablelvl2Context_default = Tablelvl2Context;

// node_modules/@mui/material/TableBody/TableBody.js
init_useThemeProps();
init_styled();

// node_modules/@mui/material/TableBody/tableBodyClasses.js
init_esm();
init_generateUtilityClass();
function getTableBodyUtilityClass(slot) {
  return generateUtilityClass("MuiTableBody", slot);
}
var tableBodyClasses = generateUtilityClasses("MuiTableBody", ["root"]);

// node_modules/@mui/material/TableBody/TableBody.js
var import_jsx_runtime135 = __toESM(require_jsx_runtime());
var _excluded81 = ["className", "component"];
var useUtilityClasses72 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getTableBodyUtilityClass, classes2);
};
var TableBodyRoot = styled_default("tbody", {
  name: "MuiTableBody",
  slot: "Root",
  overridesResolver: (props, styles20) => styles20.root
})({
  display: "table-row-group"
});
var tablelvl2 = {
  variant: "body"
};
var defaultComponent2 = "tbody";
var TableBody = React114.forwardRef(function TableBody2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiTableBody"
  });
  const {
    className,
    component = defaultComponent2
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded81);
  const ownerState = _extends({}, props, {
    component
  });
  const classes2 = useUtilityClasses72(ownerState);
  return (0, import_jsx_runtime135.jsx)(Tablelvl2Context_default.Provider, {
    value: tablelvl2,
    children: (0, import_jsx_runtime135.jsx)(TableBodyRoot, _extends({
      className: clsx_m_default(classes2.root, className),
      as: component,
      ref,
      role: component === defaultComponent2 ? null : "rowgroup",
      ownerState
    }, other))
  });
});
true ? TableBody.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component, normally `TableRow`.
   */
  children: import_prop_types89.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types89.default.object,
  /**
   * @ignore
   */
  className: import_prop_types89.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types89.default.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types89.default.oneOfType([import_prop_types89.default.arrayOf(import_prop_types89.default.oneOfType([import_prop_types89.default.func, import_prop_types89.default.object, import_prop_types89.default.bool])), import_prop_types89.default.func, import_prop_types89.default.object])
} : void 0;

// node_modules/@mui/material/TableCell/TableCell.js
init_objectWithoutPropertiesLoose();
init_extends();
var React115 = __toESM(require_react());
var import_prop_types90 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_esm2();
init_capitalize();
init_useThemeProps();
init_styled();

// node_modules/@mui/material/TableCell/tableCellClasses.js
init_esm();
init_generateUtilityClass();
function getTableCellUtilityClass(slot) {
  return generateUtilityClass("MuiTableCell", slot);
}
var tableCellClasses = generateUtilityClasses("MuiTableCell", ["root", "head", "body", "footer", "sizeSmall", "sizeMedium", "paddingCheckbox", "paddingNone", "alignLeft", "alignCenter", "alignRight", "alignJustify", "stickyHeader"]);
var tableCellClasses_default = tableCellClasses;

// node_modules/@mui/material/TableCell/TableCell.js
var import_jsx_runtime136 = __toESM(require_jsx_runtime());
var _excluded82 = ["align", "className", "component", "padding", "scope", "size", "sortDirection", "variant"];
var useUtilityClasses73 = (ownerState) => {
  const {
    classes: classes2,
    variant,
    align,
    padding,
    size,
    stickyHeader
  } = ownerState;
  const slots = {
    root: ["root", variant, stickyHeader && "stickyHeader", align !== "inherit" && `align${capitalize_default(align)}`, padding !== "normal" && `padding${capitalize_default(padding)}`, `size${capitalize_default(size)}`]
  };
  return composeClasses(slots, getTableCellUtilityClass, classes2);
};
var TableCellRoot = styled_default("td", {
  name: "MuiTableCell",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, styles20[ownerState.variant], styles20[`size${capitalize_default(ownerState.size)}`], ownerState.padding !== "normal" && styles20[`padding${capitalize_default(ownerState.padding)}`], ownerState.align !== "inherit" && styles20[`align${capitalize_default(ownerState.align)}`], ownerState.stickyHeader && styles20.stickyHeader];
  }
})(({
  theme,
  ownerState
}) => _extends({}, theme.typography.body2, {
  display: "table-cell",
  verticalAlign: "inherit",
  // Workaround for a rendering bug with spanned columns in Chrome 62.0.
  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.
  borderBottom: theme.vars ? `1px solid ${theme.vars.palette.TableCell.border}` : `1px solid
    ${theme.palette.mode === "light" ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)}`,
  textAlign: "left",
  padding: 16
}, ownerState.variant === "head" && {
  color: (theme.vars || theme).palette.text.primary,
  lineHeight: theme.typography.pxToRem(24),
  fontWeight: theme.typography.fontWeightMedium
}, ownerState.variant === "body" && {
  color: (theme.vars || theme).palette.text.primary
}, ownerState.variant === "footer" && {
  color: (theme.vars || theme).palette.text.secondary,
  lineHeight: theme.typography.pxToRem(21),
  fontSize: theme.typography.pxToRem(12)
}, ownerState.size === "small" && {
  padding: "6px 16px",
  [`&.${tableCellClasses_default.paddingCheckbox}`]: {
    width: 24,
    // prevent the checkbox column from growing
    padding: "0 12px 0 16px",
    "& > *": {
      padding: 0
    }
  }
}, ownerState.padding === "checkbox" && {
  width: 48,
  // prevent the checkbox column from growing
  padding: "0 0 0 4px"
}, ownerState.padding === "none" && {
  padding: 0
}, ownerState.align === "left" && {
  textAlign: "left"
}, ownerState.align === "center" && {
  textAlign: "center"
}, ownerState.align === "right" && {
  textAlign: "right",
  flexDirection: "row-reverse"
}, ownerState.align === "justify" && {
  textAlign: "justify"
}, ownerState.stickyHeader && {
  position: "sticky",
  top: 0,
  zIndex: 2,
  backgroundColor: (theme.vars || theme).palette.background.default
}));
var TableCell = React115.forwardRef(function TableCell2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiTableCell"
  });
  const {
    align = "inherit",
    className,
    component: componentProp,
    padding: paddingProp,
    scope: scopeProp,
    size: sizeProp,
    sortDirection,
    variant: variantProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded82);
  const table = React115.useContext(TableContext_default);
  const tablelvl24 = React115.useContext(Tablelvl2Context_default);
  const isHeadCell = tablelvl24 && tablelvl24.variant === "head";
  let component;
  if (componentProp) {
    component = componentProp;
  } else {
    component = isHeadCell ? "th" : "td";
  }
  let scope = scopeProp;
  if (component === "td") {
    scope = void 0;
  } else if (!scope && isHeadCell) {
    scope = "col";
  }
  const variant = variantProp || tablelvl24 && tablelvl24.variant;
  const ownerState = _extends({}, props, {
    align,
    component,
    padding: paddingProp || (table && table.padding ? table.padding : "normal"),
    size: sizeProp || (table && table.size ? table.size : "medium"),
    sortDirection,
    stickyHeader: variant === "head" && table && table.stickyHeader,
    variant
  });
  const classes2 = useUtilityClasses73(ownerState);
  let ariaSort = null;
  if (sortDirection) {
    ariaSort = sortDirection === "asc" ? "ascending" : "descending";
  }
  return (0, import_jsx_runtime136.jsx)(TableCellRoot, _extends({
    as: component,
    ref,
    className: clsx_m_default(classes2.root, className),
    "aria-sort": ariaSort,
    scope,
    ownerState
  }, other));
});
true ? TableCell.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Set the text-align on the table cell content.
   *
   * Monetary or generally number fields **should be right aligned** as that allows
   * you to add them up quickly in your head without having to worry about decimals.
   * @default 'inherit'
   */
  align: import_prop_types90.default.oneOf(["center", "inherit", "justify", "left", "right"]),
  /**
   * The content of the component.
   */
  children: import_prop_types90.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types90.default.object,
  /**
   * @ignore
   */
  className: import_prop_types90.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types90.default.elementType,
  /**
   * Sets the padding applied to the cell.
   * The prop defaults to the value (`'default'`) inherited from the parent Table component.
   */
  padding: import_prop_types90.default.oneOf(["checkbox", "none", "normal"]),
  /**
   * Set scope attribute.
   */
  scope: import_prop_types90.default.string,
  /**
   * Specify the size of the cell.
   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.
   */
  size: import_prop_types90.default.oneOfType([import_prop_types90.default.oneOf(["medium", "small"]), import_prop_types90.default.string]),
  /**
   * Set aria-sort direction.
   */
  sortDirection: import_prop_types90.default.oneOf(["asc", "desc", false]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types90.default.oneOfType([import_prop_types90.default.arrayOf(import_prop_types90.default.oneOfType([import_prop_types90.default.func, import_prop_types90.default.object, import_prop_types90.default.bool])), import_prop_types90.default.func, import_prop_types90.default.object]),
  /**
   * Specify the cell type.
   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.
   */
  variant: import_prop_types90.default.oneOfType([import_prop_types90.default.oneOf(["body", "footer", "head"]), import_prop_types90.default.string])
} : void 0;
var TableCell_default = TableCell;

// node_modules/@mui/material/TableContainer/TableContainer.js
init_extends();
init_objectWithoutPropertiesLoose();
var React116 = __toESM(require_react());
var import_prop_types91 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_useThemeProps();
init_styled();

// node_modules/@mui/material/TableContainer/tableContainerClasses.js
init_esm();
init_generateUtilityClass();
function getTableContainerUtilityClass(slot) {
  return generateUtilityClass("MuiTableContainer", slot);
}
var tableContainerClasses = generateUtilityClasses("MuiTableContainer", ["root"]);

// node_modules/@mui/material/TableContainer/TableContainer.js
var import_jsx_runtime137 = __toESM(require_jsx_runtime());
var _excluded83 = ["className", "component"];
var useUtilityClasses74 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getTableContainerUtilityClass, classes2);
};
var TableContainerRoot = styled_default("div", {
  name: "MuiTableContainer",
  slot: "Root",
  overridesResolver: (props, styles20) => styles20.root
})({
  width: "100%",
  overflowX: "auto"
});
var TableContainer = React116.forwardRef(function TableContainer2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiTableContainer"
  });
  const {
    className,
    component = "div"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded83);
  const ownerState = _extends({}, props, {
    component
  });
  const classes2 = useUtilityClasses74(ownerState);
  return (0, import_jsx_runtime137.jsx)(TableContainerRoot, _extends({
    ref,
    as: component,
    className: clsx_m_default(classes2.root, className),
    ownerState
  }, other));
});
true ? TableContainer.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component, normally `Table`.
   */
  children: import_prop_types91.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types91.default.object,
  /**
   * @ignore
   */
  className: import_prop_types91.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types91.default.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types91.default.oneOfType([import_prop_types91.default.arrayOf(import_prop_types91.default.oneOfType([import_prop_types91.default.func, import_prop_types91.default.object, import_prop_types91.default.bool])), import_prop_types91.default.func, import_prop_types91.default.object])
} : void 0;

// node_modules/@mui/material/TableFooter/TableFooter.js
init_extends();
init_objectWithoutPropertiesLoose();
var React117 = __toESM(require_react());
var import_prop_types92 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_useThemeProps();
init_styled();

// node_modules/@mui/material/TableFooter/tableFooterClasses.js
init_esm();
init_generateUtilityClass();
function getTableFooterUtilityClass(slot) {
  return generateUtilityClass("MuiTableFooter", slot);
}
var tableFooterClasses = generateUtilityClasses("MuiTableFooter", ["root"]);

// node_modules/@mui/material/TableFooter/TableFooter.js
var import_jsx_runtime138 = __toESM(require_jsx_runtime());
var _excluded84 = ["className", "component"];
var useUtilityClasses75 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getTableFooterUtilityClass, classes2);
};
var TableFooterRoot = styled_default("tfoot", {
  name: "MuiTableFooter",
  slot: "Root",
  overridesResolver: (props, styles20) => styles20.root
})({
  display: "table-footer-group"
});
var tablelvl22 = {
  variant: "footer"
};
var defaultComponent3 = "tfoot";
var TableFooter = React117.forwardRef(function TableFooter2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiTableFooter"
  });
  const {
    className,
    component = defaultComponent3
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded84);
  const ownerState = _extends({}, props, {
    component
  });
  const classes2 = useUtilityClasses75(ownerState);
  return (0, import_jsx_runtime138.jsx)(Tablelvl2Context_default.Provider, {
    value: tablelvl22,
    children: (0, import_jsx_runtime138.jsx)(TableFooterRoot, _extends({
      as: component,
      className: clsx_m_default(classes2.root, className),
      ref,
      role: component === defaultComponent3 ? null : "rowgroup",
      ownerState
    }, other))
  });
});
true ? TableFooter.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component, normally `TableRow`.
   */
  children: import_prop_types92.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types92.default.object,
  /**
   * @ignore
   */
  className: import_prop_types92.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types92.default.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types92.default.oneOfType([import_prop_types92.default.arrayOf(import_prop_types92.default.oneOfType([import_prop_types92.default.func, import_prop_types92.default.object, import_prop_types92.default.bool])), import_prop_types92.default.func, import_prop_types92.default.object])
} : void 0;

// node_modules/@mui/material/TableHead/TableHead.js
init_extends();
init_objectWithoutPropertiesLoose();
var React118 = __toESM(require_react());
var import_prop_types93 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_useThemeProps();
init_styled();

// node_modules/@mui/material/TableHead/tableHeadClasses.js
init_esm();
init_generateUtilityClass();
function getTableHeadUtilityClass(slot) {
  return generateUtilityClass("MuiTableHead", slot);
}
var tableHeadClasses = generateUtilityClasses("MuiTableHead", ["root"]);

// node_modules/@mui/material/TableHead/TableHead.js
var import_jsx_runtime139 = __toESM(require_jsx_runtime());
var _excluded85 = ["className", "component"];
var useUtilityClasses76 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getTableHeadUtilityClass, classes2);
};
var TableHeadRoot = styled_default("thead", {
  name: "MuiTableHead",
  slot: "Root",
  overridesResolver: (props, styles20) => styles20.root
})({
  display: "table-header-group"
});
var tablelvl23 = {
  variant: "head"
};
var defaultComponent4 = "thead";
var TableHead = React118.forwardRef(function TableHead2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiTableHead"
  });
  const {
    className,
    component = defaultComponent4
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded85);
  const ownerState = _extends({}, props, {
    component
  });
  const classes2 = useUtilityClasses76(ownerState);
  return (0, import_jsx_runtime139.jsx)(Tablelvl2Context_default.Provider, {
    value: tablelvl23,
    children: (0, import_jsx_runtime139.jsx)(TableHeadRoot, _extends({
      as: component,
      className: clsx_m_default(classes2.root, className),
      ref,
      role: component === defaultComponent4 ? null : "rowgroup",
      ownerState
    }, other))
  });
});
true ? TableHead.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component, normally `TableRow`.
   */
  children: import_prop_types93.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types93.default.object,
  /**
   * @ignore
   */
  className: import_prop_types93.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types93.default.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types93.default.oneOfType([import_prop_types93.default.arrayOf(import_prop_types93.default.oneOfType([import_prop_types93.default.func, import_prop_types93.default.object, import_prop_types93.default.bool])), import_prop_types93.default.func, import_prop_types93.default.object])
} : void 0;

// node_modules/@mui/material/TablePagination/TablePagination.js
init_objectWithoutPropertiesLoose();
init_extends();
var React123 = __toESM(require_react());
var import_prop_types96 = __toESM(require_prop_types());
init_clsx_m();
init_esm();
init_base();
init_styled();
init_useThemeProps();

// node_modules/@mui/material/Toolbar/Toolbar.js
init_objectWithoutPropertiesLoose();
init_extends();
var React119 = __toESM(require_react());
var import_prop_types94 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_useThemeProps();
init_styled();

// node_modules/@mui/material/Toolbar/toolbarClasses.js
init_esm();
init_generateUtilityClass();
function getToolbarUtilityClass(slot) {
  return generateUtilityClass("MuiToolbar", slot);
}
var toolbarClasses = generateUtilityClasses("MuiToolbar", ["root", "gutters", "regular", "dense"]);

// node_modules/@mui/material/Toolbar/Toolbar.js
var import_jsx_runtime140 = __toESM(require_jsx_runtime());
var _excluded86 = ["className", "component", "disableGutters", "variant"];
var useUtilityClasses77 = (ownerState) => {
  const {
    classes: classes2,
    disableGutters,
    variant
  } = ownerState;
  const slots = {
    root: ["root", !disableGutters && "gutters", variant]
  };
  return composeClasses(slots, getToolbarUtilityClass, classes2);
};
var ToolbarRoot = styled_default("div", {
  name: "MuiToolbar",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, !ownerState.disableGutters && styles20.gutters, styles20[ownerState.variant]];
  }
})(({
  theme,
  ownerState
}) => _extends({
  position: "relative",
  display: "flex",
  alignItems: "center"
}, !ownerState.disableGutters && {
  paddingLeft: theme.spacing(2),
  paddingRight: theme.spacing(2),
  [theme.breakpoints.up("sm")]: {
    paddingLeft: theme.spacing(3),
    paddingRight: theme.spacing(3)
  }
}, ownerState.variant === "dense" && {
  minHeight: 48
}), ({
  theme,
  ownerState
}) => ownerState.variant === "regular" && theme.mixins.toolbar);
var Toolbar = React119.forwardRef(function Toolbar2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiToolbar"
  });
  const {
    className,
    component = "div",
    disableGutters = false,
    variant = "regular"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded86);
  const ownerState = _extends({}, props, {
    component,
    disableGutters,
    variant
  });
  const classes2 = useUtilityClasses77(ownerState);
  return (0, import_jsx_runtime140.jsx)(ToolbarRoot, _extends({
    as: component,
    className: clsx_m_default(classes2.root, className),
    ref,
    ownerState
  }, other));
});
true ? Toolbar.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.
   * The Toolbar is a flex container, allowing flex item properites to be used to lay out the children.
   */
  children: import_prop_types94.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types94.default.object,
  /**
   * @ignore
   */
  className: import_prop_types94.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types94.default.elementType,
  /**
   * If `true`, disables gutter padding.
   * @default false
   */
  disableGutters: import_prop_types94.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types94.default.oneOfType([import_prop_types94.default.arrayOf(import_prop_types94.default.oneOfType([import_prop_types94.default.func, import_prop_types94.default.object, import_prop_types94.default.bool])), import_prop_types94.default.func, import_prop_types94.default.object]),
  /**
   * The variant to use.
   * @default 'regular'
   */
  variant: import_prop_types94.default.oneOfType([import_prop_types94.default.oneOf(["dense", "regular"]), import_prop_types94.default.string])
} : void 0;
var Toolbar_default = Toolbar;

// node_modules/@mui/material/TablePagination/TablePaginationActions.js
init_extends();
init_objectWithoutPropertiesLoose();
var React122 = __toESM(require_react());
var import_prop_types95 = __toESM(require_prop_types());

// node_modules/@mui/material/internal/svg-icons/KeyboardArrowLeft.js
var React120 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime141 = __toESM(require_jsx_runtime());
var KeyboardArrowLeft_default = createSvgIcon((0, import_jsx_runtime141.jsx)("path", {
  d: "M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
}), "KeyboardArrowLeft");

// node_modules/@mui/material/internal/svg-icons/KeyboardArrowRight.js
var React121 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime142 = __toESM(require_jsx_runtime());
var KeyboardArrowRight_default = createSvgIcon((0, import_jsx_runtime142.jsx)("path", {
  d: "M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
}), "KeyboardArrowRight");

// node_modules/@mui/material/TablePagination/TablePaginationActions.js
var import_jsx_runtime143 = __toESM(require_jsx_runtime());
var import_jsx_runtime144 = __toESM(require_jsx_runtime());
var _LastPageIcon;
var _FirstPageIcon;
var _KeyboardArrowRight;
var _KeyboardArrowLeft;
var _KeyboardArrowLeft2;
var _KeyboardArrowRight2;
var _FirstPageIcon2;
var _LastPageIcon2;
var _excluded87 = ["backIconButtonProps", "count", "getItemAriaLabel", "nextIconButtonProps", "onPageChange", "page", "rowsPerPage", "showFirstButton", "showLastButton"];
var TablePaginationActions = React122.forwardRef(function TablePaginationActions2(props, ref) {
  const {
    backIconButtonProps,
    count: count2,
    getItemAriaLabel,
    nextIconButtonProps,
    onPageChange,
    page,
    rowsPerPage,
    showFirstButton,
    showLastButton
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded87);
  const theme = useTheme();
  const handleFirstPageButtonClick = (event) => {
    onPageChange(event, 0);
  };
  const handleBackButtonClick = (event) => {
    onPageChange(event, page - 1);
  };
  const handleNextButtonClick = (event) => {
    onPageChange(event, page + 1);
  };
  const handleLastPageButtonClick = (event) => {
    onPageChange(event, Math.max(0, Math.ceil(count2 / rowsPerPage) - 1));
  };
  return (0, import_jsx_runtime144.jsxs)("div", _extends({
    ref
  }, other, {
    children: [showFirstButton && (0, import_jsx_runtime143.jsx)(IconButton_default, {
      onClick: handleFirstPageButtonClick,
      disabled: page === 0,
      "aria-label": getItemAriaLabel("first", page),
      title: getItemAriaLabel("first", page),
      children: theme.direction === "rtl" ? _LastPageIcon || (_LastPageIcon = (0, import_jsx_runtime143.jsx)(LastPage_default, {})) : _FirstPageIcon || (_FirstPageIcon = (0, import_jsx_runtime143.jsx)(FirstPage_default, {}))
    }), (0, import_jsx_runtime143.jsx)(IconButton_default, _extends({
      onClick: handleBackButtonClick,
      disabled: page === 0,
      color: "inherit",
      "aria-label": getItemAriaLabel("previous", page),
      title: getItemAriaLabel("previous", page)
    }, backIconButtonProps, {
      children: theme.direction === "rtl" ? _KeyboardArrowRight || (_KeyboardArrowRight = (0, import_jsx_runtime143.jsx)(KeyboardArrowRight_default, {})) : _KeyboardArrowLeft || (_KeyboardArrowLeft = (0, import_jsx_runtime143.jsx)(KeyboardArrowLeft_default, {}))
    })), (0, import_jsx_runtime143.jsx)(IconButton_default, _extends({
      onClick: handleNextButtonClick,
      disabled: count2 !== -1 ? page >= Math.ceil(count2 / rowsPerPage) - 1 : false,
      color: "inherit",
      "aria-label": getItemAriaLabel("next", page),
      title: getItemAriaLabel("next", page)
    }, nextIconButtonProps, {
      children: theme.direction === "rtl" ? _KeyboardArrowLeft2 || (_KeyboardArrowLeft2 = (0, import_jsx_runtime143.jsx)(KeyboardArrowLeft_default, {})) : _KeyboardArrowRight2 || (_KeyboardArrowRight2 = (0, import_jsx_runtime143.jsx)(KeyboardArrowRight_default, {}))
    })), showLastButton && (0, import_jsx_runtime143.jsx)(IconButton_default, {
      onClick: handleLastPageButtonClick,
      disabled: page >= Math.ceil(count2 / rowsPerPage) - 1,
      "aria-label": getItemAriaLabel("last", page),
      title: getItemAriaLabel("last", page),
      children: theme.direction === "rtl" ? _FirstPageIcon2 || (_FirstPageIcon2 = (0, import_jsx_runtime143.jsx)(FirstPage_default, {})) : _LastPageIcon2 || (_LastPageIcon2 = (0, import_jsx_runtime143.jsx)(LastPage_default, {}))
    })]
  }));
});
true ? TablePaginationActions.propTypes = {
  /**
   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) element.
   */
  backIconButtonProps: import_prop_types95.default.object,
  /**
   * The total number of rows.
   */
  count: import_prop_types95.default.number.isRequired,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current page.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   *
   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.
   * @param {number} page The page number to format.
   * @returns {string}
   */
  getItemAriaLabel: import_prop_types95.default.func.isRequired,
  /**
   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.
   */
  nextIconButtonProps: import_prop_types95.default.object,
  /**
   * Callback fired when the page is changed.
   *
   * @param {object} event The event source of the callback.
   * @param {number} page The page selected.
   */
  onPageChange: import_prop_types95.default.func.isRequired,
  /**
   * The zero-based index of the current page.
   */
  page: import_prop_types95.default.number.isRequired,
  /**
   * The number of rows per page.
   */
  rowsPerPage: import_prop_types95.default.number.isRequired,
  /**
   * If `true`, show the first-page button.
   */
  showFirstButton: import_prop_types95.default.bool.isRequired,
  /**
   * If `true`, show the last-page button.
   */
  showLastButton: import_prop_types95.default.bool.isRequired
} : void 0;
var TablePaginationActions_default = TablePaginationActions;

// node_modules/@mui/material/TablePagination/TablePagination.js
init_useId();

// node_modules/@mui/material/TablePagination/tablePaginationClasses.js
init_esm();
init_generateUtilityClass();
function getTablePaginationUtilityClass(slot) {
  return generateUtilityClass("MuiTablePagination", slot);
}
var tablePaginationClasses = generateUtilityClasses("MuiTablePagination", ["root", "toolbar", "spacer", "selectLabel", "selectRoot", "select", "selectIcon", "input", "menuItem", "displayedRows", "actions"]);
var tablePaginationClasses_default = tablePaginationClasses;

// node_modules/@mui/material/TablePagination/TablePagination.js
var import_jsx_runtime145 = __toESM(require_jsx_runtime());
var import_react4 = __toESM(require_react());
var import_jsx_runtime146 = __toESM(require_jsx_runtime());
var _InputBase;
var _excluded88 = ["ActionsComponent", "backIconButtonProps", "className", "colSpan", "component", "count", "getItemAriaLabel", "labelDisplayedRows", "labelRowsPerPage", "nextIconButtonProps", "onPageChange", "onRowsPerPageChange", "page", "rowsPerPage", "rowsPerPageOptions", "SelectProps", "showFirstButton", "showLastButton"];
var TablePaginationRoot = styled_default(TableCell_default, {
  name: "MuiTablePagination",
  slot: "Root",
  overridesResolver: (props, styles20) => styles20.root
})(({
  theme
}) => ({
  overflow: "auto",
  color: (theme.vars || theme).palette.text.primary,
  fontSize: theme.typography.pxToRem(14),
  // Increase the specificity to override TableCell.
  "&:last-child": {
    padding: 0
  }
}));
var TablePaginationToolbar = styled_default(Toolbar_default, {
  name: "MuiTablePagination",
  slot: "Toolbar",
  overridesResolver: (props, styles20) => _extends({
    [`& .${tablePaginationClasses_default.actions}`]: styles20.actions
  }, styles20.toolbar)
})(({
  theme
}) => ({
  minHeight: 52,
  paddingRight: 2,
  [`${theme.breakpoints.up("xs")} and (orientation: landscape)`]: {
    minHeight: 52
  },
  [theme.breakpoints.up("sm")]: {
    minHeight: 52,
    paddingRight: 2
  },
  [`& .${tablePaginationClasses_default.actions}`]: {
    flexShrink: 0,
    marginLeft: 20
  }
}));
var TablePaginationSpacer = styled_default("div", {
  name: "MuiTablePagination",
  slot: "Spacer",
  overridesResolver: (props, styles20) => styles20.spacer
})({
  flex: "1 1 100%"
});
var TablePaginationSelectLabel = styled_default("p", {
  name: "MuiTablePagination",
  slot: "SelectLabel",
  overridesResolver: (props, styles20) => styles20.selectLabel
})(({
  theme
}) => _extends({}, theme.typography.body2, {
  flexShrink: 0
}));
var TablePaginationSelect = styled_default(Select_default, {
  name: "MuiTablePagination",
  slot: "Select",
  overridesResolver: (props, styles20) => _extends({
    [`& .${tablePaginationClasses_default.selectIcon}`]: styles20.selectIcon,
    [`& .${tablePaginationClasses_default.select}`]: styles20.select
  }, styles20.input, styles20.selectRoot)
})({
  color: "inherit",
  fontSize: "inherit",
  flexShrink: 0,
  marginRight: 32,
  marginLeft: 8,
  [`& .${tablePaginationClasses_default.select}`]: {
    paddingLeft: 8,
    paddingRight: 24,
    textAlign: "right",
    textAlignLast: "right"
    // Align <select> on Chrome.
  }
});
var TablePaginationMenuItem = styled_default(MenuItem_default, {
  name: "MuiTablePagination",
  slot: "MenuItem",
  overridesResolver: (props, styles20) => styles20.menuItem
})({});
var TablePaginationDisplayedRows = styled_default("p", {
  name: "MuiTablePagination",
  slot: "DisplayedRows",
  overridesResolver: (props, styles20) => styles20.displayedRows
})(({
  theme
}) => _extends({}, theme.typography.body2, {
  flexShrink: 0
}));
function defaultLabelDisplayedRows({
  from,
  to,
  count: count2
}) {
  return `${from}–${to} of ${count2 !== -1 ? count2 : `more than ${to}`}`;
}
function defaultGetAriaLabel2(type) {
  return `Go to ${type} page`;
}
var useUtilityClasses78 = (ownerState) => {
  const {
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root"],
    toolbar: ["toolbar"],
    spacer: ["spacer"],
    selectLabel: ["selectLabel"],
    select: ["select"],
    input: ["input"],
    selectIcon: ["selectIcon"],
    menuItem: ["menuItem"],
    displayedRows: ["displayedRows"],
    actions: ["actions"]
  };
  return composeClasses(slots, getTablePaginationUtilityClass, classes2);
};
var TablePagination = React123.forwardRef(function TablePagination2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiTablePagination"
  });
  const {
    ActionsComponent = TablePaginationActions_default,
    backIconButtonProps,
    className,
    colSpan: colSpanProp,
    component = TableCell_default,
    count: count2,
    getItemAriaLabel = defaultGetAriaLabel2,
    labelDisplayedRows = defaultLabelDisplayedRows,
    labelRowsPerPage = "Rows per page:",
    nextIconButtonProps,
    onPageChange,
    onRowsPerPageChange,
    page,
    rowsPerPage,
    rowsPerPageOptions = [10, 25, 50, 100],
    SelectProps = {},
    showFirstButton = false,
    showLastButton = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded88);
  const ownerState = props;
  const classes2 = useUtilityClasses78(ownerState);
  const MenuItemComponent = SelectProps.native ? "option" : TablePaginationMenuItem;
  let colSpan;
  if (component === TableCell_default || component === "td") {
    colSpan = colSpanProp || 1e3;
  }
  const selectId = useId_default(SelectProps.id);
  const labelId = useId_default(SelectProps.labelId);
  const getLabelDisplayedRowsTo = () => {
    if (count2 === -1) {
      return (page + 1) * rowsPerPage;
    }
    return rowsPerPage === -1 ? count2 : Math.min(count2, (page + 1) * rowsPerPage);
  };
  return (0, import_jsx_runtime145.jsx)(TablePaginationRoot, _extends({
    colSpan,
    ref,
    as: component,
    ownerState,
    className: clsx_m_default(classes2.root, className)
  }, other, {
    children: (0, import_jsx_runtime146.jsxs)(TablePaginationToolbar, {
      className: classes2.toolbar,
      children: [(0, import_jsx_runtime145.jsx)(TablePaginationSpacer, {
        className: classes2.spacer
      }), rowsPerPageOptions.length > 1 && (0, import_jsx_runtime145.jsx)(TablePaginationSelectLabel, {
        className: classes2.selectLabel,
        id: labelId,
        children: labelRowsPerPage
      }), rowsPerPageOptions.length > 1 && (0, import_jsx_runtime145.jsx)(TablePaginationSelect, _extends({
        variant: "standard"
      }, !SelectProps.variant && {
        input: _InputBase || (_InputBase = (0, import_jsx_runtime145.jsx)(InputBase_default, {}))
      }, {
        value: rowsPerPage,
        onChange: onRowsPerPageChange,
        id: selectId,
        labelId
      }, SelectProps, {
        classes: _extends({}, SelectProps.classes, {
          // TODO v5 remove `classes.input`
          root: clsx_m_default(classes2.input, classes2.selectRoot, (SelectProps.classes || {}).root),
          select: clsx_m_default(classes2.select, (SelectProps.classes || {}).select),
          // TODO v5 remove `selectIcon`
          icon: clsx_m_default(classes2.selectIcon, (SelectProps.classes || {}).icon)
        }),
        children: rowsPerPageOptions.map((rowsPerPageOption) => (0, import_react4.createElement)(MenuItemComponent, _extends({}, !isHostComponent_default(MenuItemComponent) && {
          ownerState
        }, {
          className: classes2.menuItem,
          key: rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,
          value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption
        }), rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))
      })), (0, import_jsx_runtime145.jsx)(TablePaginationDisplayedRows, {
        className: classes2.displayedRows,
        children: labelDisplayedRows({
          from: count2 === 0 ? 0 : page * rowsPerPage + 1,
          to: getLabelDisplayedRowsTo(),
          count: count2 === -1 ? -1 : count2,
          page
        })
      }), (0, import_jsx_runtime145.jsx)(ActionsComponent, {
        className: classes2.actions,
        backIconButtonProps,
        count: count2,
        nextIconButtonProps,
        onPageChange,
        page,
        rowsPerPage,
        showFirstButton,
        showLastButton,
        getItemAriaLabel
      })]
    })
  }));
});
true ? TablePagination.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The component used for displaying the actions.
   * Either a string to use a HTML element or a component.
   * @default TablePaginationActions
   */
  ActionsComponent: import_prop_types96.default.elementType,
  /**
   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) component.
   */
  backIconButtonProps: import_prop_types96.default.object,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types96.default.object,
  /**
   * @ignore
   */
  className: import_prop_types96.default.string,
  /**
   * @ignore
   */
  colSpan: import_prop_types96.default.number,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types96.default.elementType,
  /**
   * The total number of rows.
   *
   * To enable server side pagination for an unknown number of items, provide -1.
   */
  count: integerPropType_default.isRequired,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current page.
   * This is important for screen reader users.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').
   * @returns {string}
   * @default function defaultGetAriaLabel(type) {
   *   return `Go to ${type} page`;
   * }
   */
  getItemAriaLabel: import_prop_types96.default.func,
  /**
   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`
   * object.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default function defaultLabelDisplayedRows({ from, to, count }) {
   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;
   * }
   */
  labelDisplayedRows: import_prop_types96.default.func,
  /**
   * Customize the rows per page label.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Rows per page:'
   */
  labelRowsPerPage: import_prop_types96.default.node,
  /**
   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.
   */
  nextIconButtonProps: import_prop_types96.default.object,
  /**
   * Callback fired when the page is changed.
   *
   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.
   * @param {number} page The page selected.
   */
  onPageChange: import_prop_types96.default.func.isRequired,
  /**
   * Callback fired when the number of rows per page is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   */
  onRowsPerPageChange: import_prop_types96.default.func,
  /**
   * The zero-based index of the current page.
   */
  page: chainPropTypes(integerPropType_default.isRequired, (props) => {
    const {
      count: count2,
      page,
      rowsPerPage
    } = props;
    if (count2 === -1) {
      return null;
    }
    const newLastPage = Math.max(0, Math.ceil(count2 / rowsPerPage) - 1);
    if (page < 0 || page > newLastPage) {
      return new Error(`MUI: The page prop of a TablePagination is out of range (0 to ${newLastPage}, but page is ${page}).`);
    }
    return null;
  }),
  /**
   * The number of rows per page.
   *
   * Set -1 to display all the rows.
   */
  rowsPerPage: integerPropType_default.isRequired,
  /**
   * Customizes the options of the rows per page select field. If less than two options are
   * available, no select field will be displayed.
   * Use -1 for the value with a custom label to show all the rows.
   * @default [10, 25, 50, 100]
   */
  rowsPerPageOptions: import_prop_types96.default.arrayOf(import_prop_types96.default.oneOfType([import_prop_types96.default.number, import_prop_types96.default.shape({
    label: import_prop_types96.default.string.isRequired,
    value: import_prop_types96.default.number.isRequired
  })]).isRequired),
  /**
   * Props applied to the rows per page [`Select`](/material-ui/api/select/) element.
   * @default {}
   */
  SelectProps: import_prop_types96.default.object,
  /**
   * If `true`, show the first-page button.
   * @default false
   */
  showFirstButton: import_prop_types96.default.bool,
  /**
   * If `true`, show the last-page button.
   * @default false
   */
  showLastButton: import_prop_types96.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types96.default.oneOfType([import_prop_types96.default.arrayOf(import_prop_types96.default.oneOfType([import_prop_types96.default.func, import_prop_types96.default.object, import_prop_types96.default.bool])), import_prop_types96.default.func, import_prop_types96.default.object])
} : void 0;

// node_modules/@mui/material/TableRow/TableRow.js
init_extends();
init_objectWithoutPropertiesLoose();
var React124 = __toESM(require_react());
var import_prop_types97 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_esm2();
init_useThemeProps();
init_styled();

// node_modules/@mui/material/TableRow/tableRowClasses.js
init_esm();
init_generateUtilityClass();
function getTableRowUtilityClass(slot) {
  return generateUtilityClass("MuiTableRow", slot);
}
var tableRowClasses = generateUtilityClasses("MuiTableRow", ["root", "selected", "hover", "head", "footer"]);
var tableRowClasses_default = tableRowClasses;

// node_modules/@mui/material/TableRow/TableRow.js
var import_jsx_runtime147 = __toESM(require_jsx_runtime());
var _excluded89 = ["className", "component", "hover", "selected"];
var useUtilityClasses79 = (ownerState) => {
  const {
    classes: classes2,
    selected,
    hover,
    head,
    footer
  } = ownerState;
  const slots = {
    root: ["root", selected && "selected", hover && "hover", head && "head", footer && "footer"]
  };
  return composeClasses(slots, getTableRowUtilityClass, classes2);
};
var TableRowRoot = styled_default("tr", {
  name: "MuiTableRow",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, ownerState.head && styles20.head, ownerState.footer && styles20.footer];
  }
})(({
  theme
}) => ({
  color: "inherit",
  display: "table-row",
  verticalAlign: "middle",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  [`&.${tableRowClasses_default.hover}:hover`]: {
    backgroundColor: (theme.vars || theme).palette.action.hover
  },
  [`&.${tableRowClasses_default.selected}`]: {
    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),
    "&:hover": {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)
    }
  }
}));
var defaultComponent5 = "tr";
var TableRow = React124.forwardRef(function TableRow2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiTableRow"
  });
  const {
    className,
    component = defaultComponent5,
    hover = false,
    selected = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded89);
  const tablelvl24 = React124.useContext(Tablelvl2Context_default);
  const ownerState = _extends({}, props, {
    component,
    hover,
    selected,
    head: tablelvl24 && tablelvl24.variant === "head",
    footer: tablelvl24 && tablelvl24.variant === "footer"
  });
  const classes2 = useUtilityClasses79(ownerState);
  return (0, import_jsx_runtime147.jsx)(TableRowRoot, _extends({
    as: component,
    ref,
    className: clsx_m_default(classes2.root, className),
    role: component === defaultComponent5 ? null : "row",
    ownerState
  }, other));
});
true ? TableRow.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Should be valid <tr> children such as `TableCell`.
   */
  children: import_prop_types97.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types97.default.object,
  /**
   * @ignore
   */
  className: import_prop_types97.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types97.default.elementType,
  /**
   * If `true`, the table row will shade on hover.
   * @default false
   */
  hover: import_prop_types97.default.bool,
  /**
   * If `true`, the table row will have the selected shading.
   * @default false
   */
  selected: import_prop_types97.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types97.default.oneOfType([import_prop_types97.default.arrayOf(import_prop_types97.default.oneOfType([import_prop_types97.default.func, import_prop_types97.default.object, import_prop_types97.default.bool])), import_prop_types97.default.func, import_prop_types97.default.object])
} : void 0;

// node_modules/@mui/material/TableSortLabel/TableSortLabel.js
init_objectWithoutPropertiesLoose();
init_extends();
init_base();
init_clsx_m();
var import_prop_types98 = __toESM(require_prop_types());
var React126 = __toESM(require_react());

// node_modules/@mui/material/internal/svg-icons/ArrowDownward.js
var React125 = __toESM(require_react());
init_createSvgIcon();
var import_jsx_runtime148 = __toESM(require_jsx_runtime());
var ArrowDownward_default = createSvgIcon((0, import_jsx_runtime148.jsx)("path", {
  d: "M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
}), "ArrowDownward");

// node_modules/@mui/material/TableSortLabel/TableSortLabel.js
init_styled();
init_useThemeProps();
init_capitalize();

// node_modules/@mui/material/TableSortLabel/tableSortLabelClasses.js
init_esm();
init_generateUtilityClass();
function getTableSortLabelUtilityClass(slot) {
  return generateUtilityClass("MuiTableSortLabel", slot);
}
var tableSortLabelClasses = generateUtilityClasses("MuiTableSortLabel", ["root", "active", "icon", "iconDirectionDesc", "iconDirectionAsc"]);
var tableSortLabelClasses_default = tableSortLabelClasses;

// node_modules/@mui/material/TableSortLabel/TableSortLabel.js
var import_jsx_runtime149 = __toESM(require_jsx_runtime());
var import_jsx_runtime150 = __toESM(require_jsx_runtime());
var _excluded90 = ["active", "children", "className", "direction", "hideSortIcon", "IconComponent"];
var useUtilityClasses80 = (ownerState) => {
  const {
    classes: classes2,
    direction,
    active
  } = ownerState;
  const slots = {
    root: ["root", active && "active"],
    icon: ["icon", `iconDirection${capitalize_default(direction)}`]
  };
  return composeClasses(slots, getTableSortLabelUtilityClass, classes2);
};
var TableSortLabelRoot = styled_default(ButtonBase_default, {
  name: "MuiTableSortLabel",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, ownerState.active && styles20.active];
  }
})(({
  theme
}) => ({
  cursor: "pointer",
  display: "inline-flex",
  justifyContent: "flex-start",
  flexDirection: "inherit",
  alignItems: "center",
  "&:focus": {
    color: (theme.vars || theme).palette.text.secondary
  },
  "&:hover": {
    color: (theme.vars || theme).palette.text.secondary,
    [`& .${tableSortLabelClasses_default.icon}`]: {
      opacity: 0.5
    }
  },
  [`&.${tableSortLabelClasses_default.active}`]: {
    color: (theme.vars || theme).palette.text.primary,
    [`& .${tableSortLabelClasses_default.icon}`]: {
      opacity: 1,
      color: (theme.vars || theme).palette.text.secondary
    }
  }
}));
var TableSortLabelIcon = styled_default("span", {
  name: "MuiTableSortLabel",
  slot: "Icon",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.icon, styles20[`iconDirection${capitalize_default(ownerState.direction)}`]];
  }
})(({
  theme,
  ownerState
}) => _extends({
  fontSize: 18,
  marginRight: 4,
  marginLeft: 4,
  opacity: 0,
  transition: theme.transitions.create(["opacity", "transform"], {
    duration: theme.transitions.duration.shorter
  }),
  userSelect: "none"
}, ownerState.direction === "desc" && {
  transform: "rotate(0deg)"
}, ownerState.direction === "asc" && {
  transform: "rotate(180deg)"
}));
var TableSortLabel = React126.forwardRef(function TableSortLabel2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiTableSortLabel"
  });
  const {
    active = false,
    children,
    className,
    direction = "asc",
    hideSortIcon = false,
    IconComponent = ArrowDownward_default
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded90);
  const ownerState = _extends({}, props, {
    active,
    direction,
    hideSortIcon,
    IconComponent
  });
  const classes2 = useUtilityClasses80(ownerState);
  return (0, import_jsx_runtime150.jsxs)(TableSortLabelRoot, _extends({
    className: clsx_m_default(classes2.root, className),
    component: "span",
    disableRipple: true,
    ownerState,
    ref
  }, other, {
    children: [children, hideSortIcon && !active ? null : (0, import_jsx_runtime149.jsx)(TableSortLabelIcon, {
      as: IconComponent,
      className: clsx_m_default(classes2.icon),
      ownerState
    })]
  }));
});
true ? TableSortLabel.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the label will have the active styling (should be true for the sorted column).
   * @default false
   */
  active: import_prop_types98.default.bool,
  /**
   * Label contents, the arrow will be appended automatically.
   */
  children: import_prop_types98.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types98.default.object,
  /**
   * @ignore
   */
  className: import_prop_types98.default.string,
  /**
   * The current sort direction.
   * @default 'asc'
   */
  direction: import_prop_types98.default.oneOf(["asc", "desc"]),
  /**
   * Hide sort icon when active is false.
   * @default false
   */
  hideSortIcon: import_prop_types98.default.bool,
  /**
   * Sort icon to use.
   * @default ArrowDownwardIcon
   */
  IconComponent: import_prop_types98.default.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types98.default.oneOfType([import_prop_types98.default.arrayOf(import_prop_types98.default.oneOfType([import_prop_types98.default.func, import_prop_types98.default.object, import_prop_types98.default.bool])), import_prop_types98.default.func, import_prop_types98.default.object])
} : void 0;

// node_modules/@mui/material/Tabs/Tabs.js
init_objectWithoutPropertiesLoose();
init_extends();
var React129 = __toESM(require_react());
var import_react_is7 = __toESM(require_react_is());
var import_prop_types101 = __toESM(require_prop_types());
init_clsx_m();
init_esm();
init_base();
init_styled();
init_useThemeProps();
init_debounce();

// node_modules/@mui/material/utils/scrollLeft.js
init_esm();

// node_modules/@mui/material/internal/animate.js
function easeInOutSin(time2) {
  return (1 + Math.sin(Math.PI * time2 - Math.PI / 2)) / 2;
}
function animate(property, element, to, options = {}, cb = () => {
}) {
  const {
    ease = easeInOutSin,
    duration: duration2 = 300
    // standard
  } = options;
  let start = null;
  const from = element[property];
  let cancelled = false;
  const cancel = () => {
    cancelled = true;
  };
  const step = (timestamp) => {
    if (cancelled) {
      cb(new Error("Animation cancelled"));
      return;
    }
    if (start === null) {
      start = timestamp;
    }
    const time2 = Math.min(1, (timestamp - start) / duration2);
    element[property] = ease(time2) * (to - from) + from;
    if (time2 >= 1) {
      requestAnimationFrame(() => {
        cb(null);
      });
      return;
    }
    requestAnimationFrame(step);
  };
  if (from === to) {
    cb(new Error("Element already at target position"));
    return cancel;
  }
  requestAnimationFrame(step);
  return cancel;
}

// node_modules/@mui/material/Tabs/ScrollbarSize.js
init_extends();
init_objectWithoutPropertiesLoose();
var React127 = __toESM(require_react());
var import_prop_types99 = __toESM(require_prop_types());
init_debounce();
init_utils();
var import_jsx_runtime151 = __toESM(require_jsx_runtime());
var _excluded91 = ["onChange"];
var styles4 = {
  width: 99,
  height: 99,
  position: "absolute",
  top: -9999,
  overflow: "scroll"
};
function ScrollbarSize(props) {
  const {
    onChange
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded91);
  const scrollbarHeight = React127.useRef();
  const nodeRef = React127.useRef(null);
  const setMeasurements = () => {
    scrollbarHeight.current = nodeRef.current.offsetHeight - nodeRef.current.clientHeight;
  };
  React127.useEffect(() => {
    const handleResize = debounce_default(() => {
      const prevHeight = scrollbarHeight.current;
      setMeasurements();
      if (prevHeight !== scrollbarHeight.current) {
        onChange(scrollbarHeight.current);
      }
    });
    const containerWindow = ownerWindow_default(nodeRef.current);
    containerWindow.addEventListener("resize", handleResize);
    return () => {
      handleResize.clear();
      containerWindow.removeEventListener("resize", handleResize);
    };
  }, [onChange]);
  React127.useEffect(() => {
    setMeasurements();
    onChange(scrollbarHeight.current);
  }, [onChange]);
  return (0, import_jsx_runtime151.jsx)("div", _extends({
    style: styles4,
    ref: nodeRef
  }, other));
}
true ? ScrollbarSize.propTypes = {
  onChange: import_prop_types99.default.func.isRequired
} : void 0;

// node_modules/@mui/material/TabScrollButton/TabScrollButton.js
init_objectWithoutPropertiesLoose();
init_extends();
var React128 = __toESM(require_react());
var import_prop_types100 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_useThemeProps();
init_styled();

// node_modules/@mui/material/TabScrollButton/tabScrollButtonClasses.js
init_esm();
init_generateUtilityClass();
function getTabScrollButtonUtilityClass(slot) {
  return generateUtilityClass("MuiTabScrollButton", slot);
}
var tabScrollButtonClasses = generateUtilityClasses("MuiTabScrollButton", ["root", "vertical", "horizontal", "disabled"]);
var tabScrollButtonClasses_default = tabScrollButtonClasses;

// node_modules/@mui/material/TabScrollButton/TabScrollButton.js
var import_jsx_runtime152 = __toESM(require_jsx_runtime());
var _KeyboardArrowLeft3;
var _KeyboardArrowRight3;
var _excluded92 = ["className", "direction", "orientation", "disabled"];
var useUtilityClasses81 = (ownerState) => {
  const {
    classes: classes2,
    orientation,
    disabled
  } = ownerState;
  const slots = {
    root: ["root", orientation, disabled && "disabled"]
  };
  return composeClasses(slots, getTabScrollButtonUtilityClass, classes2);
};
var TabScrollButtonRoot = styled_default(ButtonBase_default, {
  name: "MuiTabScrollButton",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, ownerState.orientation && styles20[ownerState.orientation]];
  }
})(({
  ownerState
}) => _extends({
  width: 40,
  flexShrink: 0,
  opacity: 0.8,
  [`&.${tabScrollButtonClasses_default.disabled}`]: {
    opacity: 0
  }
}, ownerState.orientation === "vertical" && {
  width: "100%",
  height: 40,
  "& svg": {
    transform: `rotate(${ownerState.isRtl ? -90 : 90}deg)`
  }
}));
var TabScrollButton = React128.forwardRef(function TabScrollButton2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiTabScrollButton"
  });
  const {
    className,
    direction
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded92);
  const theme = useTheme();
  const isRtl = theme.direction === "rtl";
  const ownerState = _extends({
    isRtl
  }, props);
  const classes2 = useUtilityClasses81(ownerState);
  return (0, import_jsx_runtime152.jsx)(TabScrollButtonRoot, _extends({
    component: "div",
    className: clsx_m_default(classes2.root, className),
    ref,
    role: null,
    ownerState,
    tabIndex: null
  }, other, {
    children: direction === "left" ? _KeyboardArrowLeft3 || (_KeyboardArrowLeft3 = (0, import_jsx_runtime152.jsx)(KeyboardArrowLeft_default, {
      fontSize: "small"
    })) : _KeyboardArrowRight3 || (_KeyboardArrowRight3 = (0, import_jsx_runtime152.jsx)(KeyboardArrowRight_default, {
      fontSize: "small"
    }))
  }));
});
true ? TabScrollButton.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types100.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types100.default.object,
  /**
   * @ignore
   */
  className: import_prop_types100.default.string,
  /**
   * The direction the button should indicate.
   */
  direction: import_prop_types100.default.oneOf(["left", "right"]).isRequired,
  /**
   * If `true`, the component is disabled.
   */
  disabled: import_prop_types100.default.bool,
  /**
   * The component orientation (layout flow direction).
   */
  orientation: import_prop_types100.default.oneOf(["horizontal", "vertical"]).isRequired,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types100.default.oneOfType([import_prop_types100.default.arrayOf(import_prop_types100.default.oneOfType([import_prop_types100.default.func, import_prop_types100.default.object, import_prop_types100.default.bool])), import_prop_types100.default.func, import_prop_types100.default.object])
} : void 0;
var TabScrollButton_default = TabScrollButton;

// node_modules/@mui/material/Tabs/Tabs.js
init_useEventCallback();

// node_modules/@mui/material/Tabs/tabsClasses.js
init_esm();
init_generateUtilityClass();
function getTabsUtilityClass(slot) {
  return generateUtilityClass("MuiTabs", slot);
}
var tabsClasses = generateUtilityClasses("MuiTabs", ["root", "vertical", "flexContainer", "flexContainerVertical", "centered", "scroller", "fixed", "scrollableX", "scrollableY", "hideScrollbar", "scrollButtons", "scrollButtonsHideMobile", "indicator"]);
var tabsClasses_default = tabsClasses;

// node_modules/@mui/material/Tabs/Tabs.js
init_ownerDocument();
init_ownerWindow();
var import_jsx_runtime153 = __toESM(require_jsx_runtime());
var import_jsx_runtime154 = __toESM(require_jsx_runtime());
var _excluded93 = ["aria-label", "aria-labelledby", "action", "centered", "children", "className", "component", "allowScrollButtonsMobile", "indicatorColor", "onChange", "orientation", "ScrollButtonComponent", "scrollButtons", "selectionFollowsFocus", "TabIndicatorProps", "TabScrollButtonProps", "textColor", "value", "variant", "visibleScrollbar"];
var nextItem = (list, item) => {
  if (list === item) {
    return list.firstChild;
  }
  if (item && item.nextElementSibling) {
    return item.nextElementSibling;
  }
  return list.firstChild;
};
var previousItem = (list, item) => {
  if (list === item) {
    return list.lastChild;
  }
  if (item && item.previousElementSibling) {
    return item.previousElementSibling;
  }
  return list.lastChild;
};
var moveFocus = (list, currentFocus, traversalFunction) => {
  let wrappedOnce = false;
  let nextFocus = traversalFunction(list, currentFocus);
  while (nextFocus) {
    if (nextFocus === list.firstChild) {
      if (wrappedOnce) {
        return;
      }
      wrappedOnce = true;
    }
    const nextFocusDisabled = nextFocus.disabled || nextFocus.getAttribute("aria-disabled") === "true";
    if (!nextFocus.hasAttribute("tabindex") || nextFocusDisabled) {
      nextFocus = traversalFunction(list, nextFocus);
    } else {
      nextFocus.focus();
      return;
    }
  }
};
var useUtilityClasses82 = (ownerState) => {
  const {
    vertical,
    fixed,
    hideScrollbar,
    scrollableX,
    scrollableY,
    centered,
    scrollButtonsHideMobile,
    classes: classes2
  } = ownerState;
  const slots = {
    root: ["root", vertical && "vertical"],
    scroller: ["scroller", fixed && "fixed", hideScrollbar && "hideScrollbar", scrollableX && "scrollableX", scrollableY && "scrollableY"],
    flexContainer: ["flexContainer", vertical && "flexContainerVertical", centered && "centered"],
    indicator: ["indicator"],
    scrollButtons: ["scrollButtons", scrollButtonsHideMobile && "scrollButtonsHideMobile"],
    scrollableX: [scrollableX && "scrollableX"],
    hideScrollbar: [hideScrollbar && "hideScrollbar"]
  };
  return composeClasses(slots, getTabsUtilityClass, classes2);
};
var TabsRoot = styled_default("div", {
  name: "MuiTabs",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [{
      [`& .${tabsClasses_default.scrollButtons}`]: styles20.scrollButtons
    }, {
      [`& .${tabsClasses_default.scrollButtons}`]: ownerState.scrollButtonsHideMobile && styles20.scrollButtonsHideMobile
    }, styles20.root, ownerState.vertical && styles20.vertical];
  }
})(({
  ownerState,
  theme
}) => _extends({
  overflow: "hidden",
  minHeight: 48,
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  display: "flex"
}, ownerState.vertical && {
  flexDirection: "column"
}, ownerState.scrollButtonsHideMobile && {
  [`& .${tabsClasses_default.scrollButtons}`]: {
    [theme.breakpoints.down("sm")]: {
      display: "none"
    }
  }
}));
var TabsScroller = styled_default("div", {
  name: "MuiTabs",
  slot: "Scroller",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.scroller, ownerState.fixed && styles20.fixed, ownerState.hideScrollbar && styles20.hideScrollbar, ownerState.scrollableX && styles20.scrollableX, ownerState.scrollableY && styles20.scrollableY];
  }
})(({
  ownerState
}) => _extends({
  position: "relative",
  display: "inline-block",
  flex: "1 1 auto",
  whiteSpace: "nowrap"
}, ownerState.fixed && {
  overflowX: "hidden",
  width: "100%"
}, ownerState.hideScrollbar && {
  // Hide dimensionless scrollbar on macOS
  scrollbarWidth: "none",
  // Firefox
  "&::-webkit-scrollbar": {
    display: "none"
    // Safari + Chrome
  }
}, ownerState.scrollableX && {
  overflowX: "auto",
  overflowY: "hidden"
}, ownerState.scrollableY && {
  overflowY: "auto",
  overflowX: "hidden"
}));
var FlexContainer = styled_default("div", {
  name: "MuiTabs",
  slot: "FlexContainer",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.flexContainer, ownerState.vertical && styles20.flexContainerVertical, ownerState.centered && styles20.centered];
  }
})(({
  ownerState
}) => _extends({
  display: "flex"
}, ownerState.vertical && {
  flexDirection: "column"
}, ownerState.centered && {
  justifyContent: "center"
}));
var TabsIndicator = styled_default("span", {
  name: "MuiTabs",
  slot: "Indicator",
  overridesResolver: (props, styles20) => styles20.indicator
})(({
  ownerState,
  theme
}) => _extends({
  position: "absolute",
  height: 2,
  bottom: 0,
  width: "100%",
  transition: theme.transitions.create()
}, ownerState.indicatorColor === "primary" && {
  backgroundColor: (theme.vars || theme).palette.primary.main
}, ownerState.indicatorColor === "secondary" && {
  backgroundColor: (theme.vars || theme).palette.secondary.main
}, ownerState.vertical && {
  height: "100%",
  width: 2,
  right: 0
}));
var TabsScrollbarSize = styled_default(ScrollbarSize, {
  name: "MuiTabs",
  slot: "ScrollbarSize"
})({
  overflowX: "auto",
  overflowY: "hidden",
  // Hide dimensionless scrollbar on macOS
  scrollbarWidth: "none",
  // Firefox
  "&::-webkit-scrollbar": {
    display: "none"
    // Safari + Chrome
  }
});
var defaultIndicatorStyle = {};
var warnedOnceTabPresent = false;
var Tabs = React129.forwardRef(function Tabs2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiTabs"
  });
  const theme = useTheme();
  const isRtl = theme.direction === "rtl";
  const {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    action,
    centered = false,
    children: childrenProp,
    className,
    component = "div",
    allowScrollButtonsMobile = false,
    indicatorColor = "primary",
    onChange,
    orientation = "horizontal",
    ScrollButtonComponent = TabScrollButton_default,
    scrollButtons = "auto",
    selectionFollowsFocus,
    TabIndicatorProps = {},
    TabScrollButtonProps = {},
    textColor = "primary",
    value,
    variant = "standard",
    visibleScrollbar = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded93);
  const scrollable = variant === "scrollable";
  const vertical = orientation === "vertical";
  const scrollStart = vertical ? "scrollTop" : "scrollLeft";
  const start = vertical ? "top" : "left";
  const end = vertical ? "bottom" : "right";
  const clientSize = vertical ? "clientHeight" : "clientWidth";
  const size = vertical ? "height" : "width";
  const ownerState = _extends({}, props, {
    component,
    allowScrollButtonsMobile,
    indicatorColor,
    orientation,
    vertical,
    scrollButtons,
    textColor,
    variant,
    visibleScrollbar,
    fixed: !scrollable,
    hideScrollbar: scrollable && !visibleScrollbar,
    scrollableX: scrollable && !vertical,
    scrollableY: scrollable && vertical,
    centered: centered && !scrollable,
    scrollButtonsHideMobile: !allowScrollButtonsMobile
  });
  const classes2 = useUtilityClasses82(ownerState);
  if (true) {
    if (centered && scrollable) {
      console.error('MUI: You can not use the `centered={true}` and `variant="scrollable"` properties at the same time on a `Tabs` component.');
    }
  }
  const [mounted, setMounted] = React129.useState(false);
  const [indicatorStyle, setIndicatorStyle] = React129.useState(defaultIndicatorStyle);
  const [displayScroll, setDisplayScroll] = React129.useState({
    start: false,
    end: false
  });
  const [scrollerStyle, setScrollerStyle] = React129.useState({
    overflow: "hidden",
    scrollbarWidth: 0
  });
  const valueToIndex = /* @__PURE__ */ new Map();
  const tabsRef = React129.useRef(null);
  const tabListRef = React129.useRef(null);
  const getTabsMeta = () => {
    const tabsNode = tabsRef.current;
    let tabsMeta;
    if (tabsNode) {
      const rect = tabsNode.getBoundingClientRect();
      tabsMeta = {
        clientWidth: tabsNode.clientWidth,
        scrollLeft: tabsNode.scrollLeft,
        scrollTop: tabsNode.scrollTop,
        scrollLeftNormalized: getNormalizedScrollLeft(tabsNode, theme.direction),
        scrollWidth: tabsNode.scrollWidth,
        top: rect.top,
        bottom: rect.bottom,
        left: rect.left,
        right: rect.right
      };
    }
    let tabMeta;
    if (tabsNode && value !== false) {
      const children2 = tabListRef.current.children;
      if (children2.length > 0) {
        const tab = children2[valueToIndex.get(value)];
        if (true) {
          if (!tab) {
            console.error([`MUI: The \`value\` provided to the Tabs component is invalid.`, `None of the Tabs' children match with "${value}".`, valueToIndex.keys ? `You can provide one of the following values: ${Array.from(valueToIndex.keys()).join(", ")}.` : null].join("\n"));
          }
        }
        tabMeta = tab ? tab.getBoundingClientRect() : null;
        if (true) {
          if (!warnedOnceTabPresent && tabMeta && tabMeta.width === 0 && tabMeta.height === 0 && // if the whole Tabs component is hidden, don't warn
          tabsMeta.clientWidth !== 0) {
            tabsMeta = null;
            console.error(["MUI: The `value` provided to the Tabs component is invalid.", `The Tab with this \`value\` ("${value}") is not part of the document layout.`, "Make sure the tab item is present in the document or that it's not `display: none`."].join("\n"));
            warnedOnceTabPresent = true;
          }
        }
      }
    }
    return {
      tabsMeta,
      tabMeta
    };
  };
  const updateIndicatorState = useEventCallback_default(() => {
    const {
      tabsMeta,
      tabMeta
    } = getTabsMeta();
    let startValue = 0;
    let startIndicator;
    if (vertical) {
      startIndicator = "top";
      if (tabMeta && tabsMeta) {
        startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;
      }
    } else {
      startIndicator = isRtl ? "right" : "left";
      if (tabMeta && tabsMeta) {
        const correction = isRtl ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;
        startValue = (isRtl ? -1 : 1) * (tabMeta[startIndicator] - tabsMeta[startIndicator] + correction);
      }
    }
    const newIndicatorStyle = {
      [startIndicator]: startValue,
      // May be wrong until the font is loaded.
      [size]: tabMeta ? tabMeta[size] : 0
    };
    if (isNaN(indicatorStyle[startIndicator]) || isNaN(indicatorStyle[size])) {
      setIndicatorStyle(newIndicatorStyle);
    } else {
      const dStart = Math.abs(indicatorStyle[startIndicator] - newIndicatorStyle[startIndicator]);
      const dSize = Math.abs(indicatorStyle[size] - newIndicatorStyle[size]);
      if (dStart >= 1 || dSize >= 1) {
        setIndicatorStyle(newIndicatorStyle);
      }
    }
  });
  const scroll = (scrollValue, {
    animation = true
  } = {}) => {
    if (animation) {
      animate(scrollStart, tabsRef.current, scrollValue, {
        duration: theme.transitions.duration.standard
      });
    } else {
      tabsRef.current[scrollStart] = scrollValue;
    }
  };
  const moveTabsScroll = (delta) => {
    let scrollValue = tabsRef.current[scrollStart];
    if (vertical) {
      scrollValue += delta;
    } else {
      scrollValue += delta * (isRtl ? -1 : 1);
      scrollValue *= isRtl && detectScrollType() === "reverse" ? -1 : 1;
    }
    scroll(scrollValue);
  };
  const getScrollSize = () => {
    const containerSize = tabsRef.current[clientSize];
    let totalSize = 0;
    const children2 = Array.from(tabListRef.current.children);
    for (let i = 0; i < children2.length; i += 1) {
      const tab = children2[i];
      if (totalSize + tab[clientSize] > containerSize) {
        if (i === 0) {
          totalSize = containerSize;
        }
        break;
      }
      totalSize += tab[clientSize];
    }
    return totalSize;
  };
  const handleStartScrollClick = () => {
    moveTabsScroll(-1 * getScrollSize());
  };
  const handleEndScrollClick = () => {
    moveTabsScroll(getScrollSize());
  };
  const handleScrollbarSizeChange = React129.useCallback((scrollbarWidth) => {
    setScrollerStyle({
      overflow: null,
      scrollbarWidth
    });
  }, []);
  const getConditionalElements = () => {
    const conditionalElements2 = {};
    conditionalElements2.scrollbarSizeListener = scrollable ? (0, import_jsx_runtime153.jsx)(TabsScrollbarSize, {
      onChange: handleScrollbarSizeChange,
      className: clsx_m_default(classes2.scrollableX, classes2.hideScrollbar)
    }) : null;
    const scrollButtonsActive = displayScroll.start || displayScroll.end;
    const showScrollButtons = scrollable && (scrollButtons === "auto" && scrollButtonsActive || scrollButtons === true);
    conditionalElements2.scrollButtonStart = showScrollButtons ? (0, import_jsx_runtime153.jsx)(ScrollButtonComponent, _extends({
      orientation,
      direction: isRtl ? "right" : "left",
      onClick: handleStartScrollClick,
      disabled: !displayScroll.start
    }, TabScrollButtonProps, {
      className: clsx_m_default(classes2.scrollButtons, TabScrollButtonProps.className)
    })) : null;
    conditionalElements2.scrollButtonEnd = showScrollButtons ? (0, import_jsx_runtime153.jsx)(ScrollButtonComponent, _extends({
      orientation,
      direction: isRtl ? "left" : "right",
      onClick: handleEndScrollClick,
      disabled: !displayScroll.end
    }, TabScrollButtonProps, {
      className: clsx_m_default(classes2.scrollButtons, TabScrollButtonProps.className)
    })) : null;
    return conditionalElements2;
  };
  const scrollSelectedIntoView = useEventCallback_default((animation) => {
    const {
      tabsMeta,
      tabMeta
    } = getTabsMeta();
    if (!tabMeta || !tabsMeta) {
      return;
    }
    if (tabMeta[start] < tabsMeta[start]) {
      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start] - tabsMeta[start]);
      scroll(nextScrollStart, {
        animation
      });
    } else if (tabMeta[end] > tabsMeta[end]) {
      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end] - tabsMeta[end]);
      scroll(nextScrollStart, {
        animation
      });
    }
  });
  const updateScrollButtonState = useEventCallback_default(() => {
    if (scrollable && scrollButtons !== false) {
      const {
        scrollTop,
        scrollHeight,
        clientHeight,
        scrollWidth,
        clientWidth
      } = tabsRef.current;
      let showStartScroll;
      let showEndScroll;
      if (vertical) {
        showStartScroll = scrollTop > 1;
        showEndScroll = scrollTop < scrollHeight - clientHeight - 1;
      } else {
        const scrollLeft = getNormalizedScrollLeft(tabsRef.current, theme.direction);
        showStartScroll = isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;
        showEndScroll = !isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;
      }
      if (showStartScroll !== displayScroll.start || showEndScroll !== displayScroll.end) {
        setDisplayScroll({
          start: showStartScroll,
          end: showEndScroll
        });
      }
    }
  });
  React129.useEffect(() => {
    const handleResize = debounce_default(() => {
      if (tabsRef.current) {
        updateIndicatorState();
        updateScrollButtonState();
      }
    });
    const win = ownerWindow_default(tabsRef.current);
    win.addEventListener("resize", handleResize);
    let resizeObserver;
    if (typeof ResizeObserver !== "undefined") {
      resizeObserver = new ResizeObserver(handleResize);
      Array.from(tabListRef.current.children).forEach((child) => {
        resizeObserver.observe(child);
      });
    }
    return () => {
      handleResize.clear();
      win.removeEventListener("resize", handleResize);
      if (resizeObserver) {
        resizeObserver.disconnect();
      }
    };
  }, [updateIndicatorState, updateScrollButtonState]);
  const handleTabsScroll = React129.useMemo(() => debounce_default(() => {
    updateScrollButtonState();
  }), [updateScrollButtonState]);
  React129.useEffect(() => {
    return () => {
      handleTabsScroll.clear();
    };
  }, [handleTabsScroll]);
  React129.useEffect(() => {
    setMounted(true);
  }, []);
  React129.useEffect(() => {
    updateIndicatorState();
    updateScrollButtonState();
  });
  React129.useEffect(() => {
    scrollSelectedIntoView(defaultIndicatorStyle !== indicatorStyle);
  }, [scrollSelectedIntoView, indicatorStyle]);
  React129.useImperativeHandle(action, () => ({
    updateIndicator: updateIndicatorState,
    updateScrollButtons: updateScrollButtonState
  }), [updateIndicatorState, updateScrollButtonState]);
  const indicator = (0, import_jsx_runtime153.jsx)(TabsIndicator, _extends({}, TabIndicatorProps, {
    className: clsx_m_default(classes2.indicator, TabIndicatorProps.className),
    ownerState,
    style: _extends({}, indicatorStyle, TabIndicatorProps.style)
  }));
  let childIndex = 0;
  const children = React129.Children.map(childrenProp, (child) => {
    if (!React129.isValidElement(child)) {
      return null;
    }
    if (true) {
      if ((0, import_react_is7.isFragment)(child)) {
        console.error(["MUI: The Tabs component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join("\n"));
      }
    }
    const childValue = child.props.value === void 0 ? childIndex : child.props.value;
    valueToIndex.set(childValue, childIndex);
    const selected = childValue === value;
    childIndex += 1;
    return React129.cloneElement(child, _extends({
      fullWidth: variant === "fullWidth",
      indicator: selected && !mounted && indicator,
      selected,
      selectionFollowsFocus,
      onChange,
      textColor,
      value: childValue
    }, childIndex === 1 && value === false && !child.props.tabIndex ? {
      tabIndex: 0
    } : {}));
  });
  const handleKeyDown = (event) => {
    const list = tabListRef.current;
    const currentFocus = ownerDocument_default(list).activeElement;
    const role = currentFocus.getAttribute("role");
    if (role !== "tab") {
      return;
    }
    let previousItemKey = orientation === "horizontal" ? "ArrowLeft" : "ArrowUp";
    let nextItemKey = orientation === "horizontal" ? "ArrowRight" : "ArrowDown";
    if (orientation === "horizontal" && isRtl) {
      previousItemKey = "ArrowRight";
      nextItemKey = "ArrowLeft";
    }
    switch (event.key) {
      case previousItemKey:
        event.preventDefault();
        moveFocus(list, currentFocus, previousItem);
        break;
      case nextItemKey:
        event.preventDefault();
        moveFocus(list, currentFocus, nextItem);
        break;
      case "Home":
        event.preventDefault();
        moveFocus(list, null, nextItem);
        break;
      case "End":
        event.preventDefault();
        moveFocus(list, null, previousItem);
        break;
      default:
        break;
    }
  };
  const conditionalElements = getConditionalElements();
  return (0, import_jsx_runtime154.jsxs)(TabsRoot, _extends({
    className: clsx_m_default(classes2.root, className),
    ownerState,
    ref,
    as: component
  }, other, {
    children: [conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, (0, import_jsx_runtime154.jsxs)(TabsScroller, {
      className: classes2.scroller,
      ownerState,
      style: {
        overflow: scrollerStyle.overflow,
        [vertical ? `margin${isRtl ? "Left" : "Right"}` : "marginBottom"]: visibleScrollbar ? void 0 : -scrollerStyle.scrollbarWidth
      },
      ref: tabsRef,
      onScroll: handleTabsScroll,
      children: [(0, import_jsx_runtime153.jsx)(FlexContainer, {
        "aria-label": ariaLabel,
        "aria-labelledby": ariaLabelledBy,
        "aria-orientation": orientation === "vertical" ? "vertical" : null,
        className: classes2.flexContainer,
        ownerState,
        onKeyDown: handleKeyDown,
        ref: tabListRef,
        role: "tablist",
        children
      }), mounted && indicator]
    }), conditionalElements.scrollButtonEnd]
  }));
});
true ? Tabs.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * Callback fired when the component mounts.
   * This is useful when you want to trigger an action programmatically.
   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`
   *
   * @param {object} actions This object contains all possible actions
   * that can be triggered programmatically.
   */
  action: refType_default,
  /**
   * If `true`, the scroll buttons aren't forced hidden on mobile.
   * By default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.
   * @default false
   */
  allowScrollButtonsMobile: import_prop_types101.default.bool,
  /**
   * The label for the Tabs as a string.
   */
  "aria-label": import_prop_types101.default.string,
  /**
   * An id or list of ids separated by a space that label the Tabs.
   */
  "aria-labelledby": import_prop_types101.default.string,
  /**
   * If `true`, the tabs are centered.
   * This prop is intended for large views.
   * @default false
   */
  centered: import_prop_types101.default.bool,
  /**
   * The content of the component.
   */
  children: import_prop_types101.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types101.default.object,
  /**
   * @ignore
   */
  className: import_prop_types101.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types101.default.elementType,
  /**
   * Determines the color of the indicator.
   * @default 'primary'
   */
  indicatorColor: import_prop_types101.default.oneOfType([import_prop_types101.default.oneOf(["primary", "secondary"]), import_prop_types101.default.string]),
  /**
   * Callback fired when the value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.
   * @param {any} value We default to the index of the child (number)
   */
  onChange: import_prop_types101.default.func,
  /**
   * The component orientation (layout flow direction).
   * @default 'horizontal'
   */
  orientation: import_prop_types101.default.oneOf(["horizontal", "vertical"]),
  /**
   * The component used to render the scroll buttons.
   * @default TabScrollButton
   */
  ScrollButtonComponent: import_prop_types101.default.elementType,
  /**
   * Determine behavior of scroll buttons when tabs are set to scroll:
   *
   * - `auto` will only present them when not all the items are visible.
   * - `true` will always present them.
   * - `false` will never present them.
   *
   * By default the scroll buttons are hidden on mobile.
   * This behavior can be disabled with `allowScrollButtonsMobile`.
   * @default 'auto'
   */
  scrollButtons: import_prop_types101.default.oneOf(["auto", false, true]),
  /**
   * If `true` the selected tab changes on focus. Otherwise it only
   * changes on activation.
   */
  selectionFollowsFocus: import_prop_types101.default.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types101.default.oneOfType([import_prop_types101.default.arrayOf(import_prop_types101.default.oneOfType([import_prop_types101.default.func, import_prop_types101.default.object, import_prop_types101.default.bool])), import_prop_types101.default.func, import_prop_types101.default.object]),
  /**
   * Props applied to the tab indicator element.
   * @default  {}
   */
  TabIndicatorProps: import_prop_types101.default.object,
  /**
   * Props applied to the [`TabScrollButton`](/material-ui/api/tab-scroll-button/) element.
   * @default {}
   */
  TabScrollButtonProps: import_prop_types101.default.object,
  /**
   * Determines the color of the `Tab`.
   * @default 'primary'
   */
  textColor: import_prop_types101.default.oneOf(["inherit", "primary", "secondary"]),
  /**
   * The value of the currently selected `Tab`.
   * If you don't want any selected `Tab`, you can set this prop to `false`.
   */
  value: import_prop_types101.default.any,
  /**
   * Determines additional display behavior of the tabs:
   *
   *  - `scrollable` will invoke scrolling properties and allow for horizontally
   *  scrolling (or swiping) of the tab bar.
   *  -`fullWidth` will make the tabs grow to use all the available space,
   *  which should be used for small views, like on mobile.
   *  - `standard` will render the default state.
   * @default 'standard'
   */
  variant: import_prop_types101.default.oneOf(["fullWidth", "scrollable", "standard"]),
  /**
   * If `true`, the scrollbar is visible. It can be useful when displaying
   * a long vertical list of tabs.
   * @default false
   */
  visibleScrollbar: import_prop_types101.default.bool
} : void 0;

// node_modules/@mui/material/TextareaAutosize/index.js
init_TextareaAutosize();

// node_modules/@mui/material/ToggleButton/ToggleButton.js
init_objectWithoutPropertiesLoose();
init_extends();
var React130 = __toESM(require_react());
var import_prop_types102 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_capitalize();
init_useThemeProps();
init_styled();

// node_modules/@mui/material/ToggleButton/toggleButtonClasses.js
init_esm();
init_generateUtilityClass();
function getToggleButtonUtilityClass(slot) {
  return generateUtilityClass("MuiToggleButton", slot);
}
var toggleButtonClasses = generateUtilityClasses("MuiToggleButton", ["root", "disabled", "selected", "standard", "primary", "secondary", "sizeSmall", "sizeMedium", "sizeLarge"]);
var toggleButtonClasses_default = toggleButtonClasses;

// node_modules/@mui/material/ToggleButton/ToggleButton.js
var import_jsx_runtime155 = __toESM(require_jsx_runtime());
var _excluded94 = ["children", "className", "color", "disabled", "disableFocusRipple", "fullWidth", "onChange", "onClick", "selected", "size", "value"];
var useUtilityClasses83 = (ownerState) => {
  const {
    classes: classes2,
    fullWidth,
    selected,
    disabled,
    size,
    color: color2
  } = ownerState;
  const slots = {
    root: ["root", selected && "selected", disabled && "disabled", fullWidth && "fullWidth", `size${capitalize_default(size)}`, color2]
  };
  return composeClasses(slots, getToggleButtonUtilityClass, classes2);
};
var ToggleButtonRoot = styled_default(ButtonBase_default, {
  name: "MuiToggleButton",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [styles20.root, styles20[`size${capitalize_default(ownerState.size)}`]];
  }
})(({
  theme,
  ownerState
}) => {
  let selectedColor = ownerState.color === "standard" ? theme.palette.text.primary : theme.palette[ownerState.color].main;
  let selectedColorChannel;
  if (theme.vars) {
    selectedColor = ownerState.color === "standard" ? theme.vars.palette.text.primary : theme.vars.palette[ownerState.color].main;
    selectedColorChannel = ownerState.color === "standard" ? theme.vars.palette.text.primaryChannel : theme.vars.palette[ownerState.color].mainChannel;
  }
  return _extends({}, theme.typography.button, {
    borderRadius: (theme.vars || theme).shape.borderRadius,
    padding: 11,
    border: `1px solid ${(theme.vars || theme).palette.divider}`,
    color: (theme.vars || theme).palette.action.active
  }, ownerState.fullWidth && {
    width: "100%"
  }, {
    [`&.${toggleButtonClasses_default.disabled}`]: {
      color: (theme.vars || theme).palette.action.disabled,
      border: `1px solid ${(theme.vars || theme).palette.action.disabledBackground}`
    },
    "&:hover": {
      textDecoration: "none",
      // Reset on mouse devices
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    },
    [`&.${toggleButtonClasses_default.selected}`]: {
      color: selectedColor,
      backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(selectedColor, theme.palette.action.selectedOpacity),
      "&:hover": {
        backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(selectedColor, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(selectedColor, theme.palette.action.selectedOpacity)
        }
      }
    }
  }, ownerState.size === "small" && {
    padding: 7,
    fontSize: theme.typography.pxToRem(13)
  }, ownerState.size === "large" && {
    padding: 15,
    fontSize: theme.typography.pxToRem(15)
  });
});
var ToggleButton = React130.forwardRef(function ToggleButton2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiToggleButton"
  });
  const {
    children,
    className,
    color: color2 = "standard",
    disabled = false,
    disableFocusRipple = false,
    fullWidth = false,
    onChange,
    onClick,
    selected,
    size = "medium",
    value
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded94);
  const ownerState = _extends({}, props, {
    color: color2,
    disabled,
    disableFocusRipple,
    fullWidth,
    size
  });
  const classes2 = useUtilityClasses83(ownerState);
  const handleChange = (event) => {
    if (onClick) {
      onClick(event, value);
      if (event.defaultPrevented) {
        return;
      }
    }
    if (onChange) {
      onChange(event, value);
    }
  };
  return (0, import_jsx_runtime155.jsx)(ToggleButtonRoot, _extends({
    className: clsx_m_default(classes2.root, className),
    disabled,
    focusRipple: !disableFocusRipple,
    ref,
    onClick: handleChange,
    onChange,
    value,
    ownerState,
    "aria-pressed": selected
  }, other, {
    children
  }));
});
true ? ToggleButton.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types102.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types102.default.object,
  /**
   * @ignore
   */
  className: import_prop_types102.default.string,
  /**
   * The color of the button when it is in an active state.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'standard'
   */
  color: import_prop_types102.default.oneOfType([import_prop_types102.default.oneOf(["standard", "primary", "secondary", "error", "info", "success", "warning"]), import_prop_types102.default.string]),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: import_prop_types102.default.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: import_prop_types102.default.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: import_prop_types102.default.bool,
  /**
   * If `true`, the button will take up the full width of its container.
   * @default false
   */
  fullWidth: import_prop_types102.default.bool,
  /**
   * Callback fired when the state changes.
   *
   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.
   * @param {any} value of the selected button.
   */
  onChange: import_prop_types102.default.func,
  /**
   * Callback fired when the button is clicked.
   *
   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.
   * @param {any} value of the selected button.
   */
  onClick: import_prop_types102.default.func,
  /**
   * If `true`, the button is rendered in an active state.
   */
  selected: import_prop_types102.default.bool,
  /**
   * The size of the component.
   * The prop defaults to the value inherited from the parent ToggleButtonGroup component.
   * @default 'medium'
   */
  size: import_prop_types102.default.oneOfType([import_prop_types102.default.oneOf(["small", "medium", "large"]), import_prop_types102.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types102.default.oneOfType([import_prop_types102.default.arrayOf(import_prop_types102.default.oneOfType([import_prop_types102.default.func, import_prop_types102.default.object, import_prop_types102.default.bool])), import_prop_types102.default.func, import_prop_types102.default.object]),
  /**
   * The value to associate with the button when selected in a
   * ToggleButtonGroup.
   */
  value: import_prop_types102.default.any.isRequired
} : void 0;

// node_modules/@mui/material/ToggleButtonGroup/ToggleButtonGroup.js
init_objectWithoutPropertiesLoose();
init_extends();
var React131 = __toESM(require_react());
var import_react_is8 = __toESM(require_react_is());
var import_prop_types103 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_styled();
init_useThemeProps();
init_capitalize();

// node_modules/@mui/material/ToggleButtonGroup/isValueSelected.js
function isValueSelected(value, candidate) {
  if (candidate === void 0 || value === void 0) {
    return false;
  }
  if (Array.isArray(candidate)) {
    return candidate.indexOf(value) >= 0;
  }
  return value === candidate;
}

// node_modules/@mui/material/ToggleButtonGroup/toggleButtonGroupClasses.js
init_esm();
init_generateUtilityClass();
function getToggleButtonGroupUtilityClass(slot) {
  return generateUtilityClass("MuiToggleButtonGroup", slot);
}
var toggleButtonGroupClasses = generateUtilityClasses("MuiToggleButtonGroup", ["root", "selected", "vertical", "disabled", "grouped", "groupedHorizontal", "groupedVertical"]);
var toggleButtonGroupClasses_default = toggleButtonGroupClasses;

// node_modules/@mui/material/ToggleButtonGroup/ToggleButtonGroup.js
var import_jsx_runtime156 = __toESM(require_jsx_runtime());
var _excluded95 = ["children", "className", "color", "disabled", "exclusive", "fullWidth", "onChange", "orientation", "size", "value"];
var useUtilityClasses84 = (ownerState) => {
  const {
    classes: classes2,
    orientation,
    fullWidth,
    disabled
  } = ownerState;
  const slots = {
    root: ["root", orientation === "vertical" && "vertical", fullWidth && "fullWidth"],
    grouped: ["grouped", `grouped${capitalize_default(orientation)}`, disabled && "disabled"]
  };
  return composeClasses(slots, getToggleButtonGroupUtilityClass, classes2);
};
var ToggleButtonGroupRoot = styled_default("div", {
  name: "MuiToggleButtonGroup",
  slot: "Root",
  overridesResolver: (props, styles20) => {
    const {
      ownerState
    } = props;
    return [{
      [`& .${toggleButtonGroupClasses_default.grouped}`]: styles20.grouped
    }, {
      [`& .${toggleButtonGroupClasses_default.grouped}`]: styles20[`grouped${capitalize_default(ownerState.orientation)}`]
    }, styles20.root, ownerState.orientation === "vertical" && styles20.vertical, ownerState.fullWidth && styles20.fullWidth];
  }
})(({
  ownerState,
  theme
}) => _extends({
  display: "inline-flex",
  borderRadius: (theme.vars || theme).shape.borderRadius
}, ownerState.orientation === "vertical" && {
  flexDirection: "column"
}, ownerState.fullWidth && {
  width: "100%"
}, {
  [`& .${toggleButtonGroupClasses_default.grouped}`]: _extends({}, ownerState.orientation === "horizontal" ? {
    "&:not(:first-of-type)": {
      marginLeft: -1,
      borderLeft: "1px solid transparent",
      borderTopLeftRadius: 0,
      borderBottomLeftRadius: 0
    },
    "&:not(:last-of-type)": {
      borderTopRightRadius: 0,
      borderBottomRightRadius: 0
    },
    [`&.${toggleButtonGroupClasses_default.selected} + .${toggleButtonGroupClasses_default.grouped}.${toggleButtonGroupClasses_default.selected}`]: {
      borderLeft: 0,
      marginLeft: 0
    }
  } : {
    "&:not(:first-of-type)": {
      marginTop: -1,
      borderTop: "1px solid transparent",
      borderTopLeftRadius: 0,
      borderTopRightRadius: 0
    },
    "&:not(:last-of-type)": {
      borderBottomLeftRadius: 0,
      borderBottomRightRadius: 0
    },
    [`&.${toggleButtonGroupClasses_default.selected} + .${toggleButtonGroupClasses_default.grouped}.${toggleButtonGroupClasses_default.selected}`]: {
      borderTop: 0,
      marginTop: 0
    }
  })
}));
var ToggleButtonGroup = React131.forwardRef(function ToggleButtonGroup2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiToggleButtonGroup"
  });
  const {
    children,
    className,
    color: color2 = "standard",
    disabled = false,
    exclusive = false,
    fullWidth = false,
    onChange,
    orientation = "horizontal",
    size = "medium",
    value
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded95);
  const ownerState = _extends({}, props, {
    disabled,
    fullWidth,
    orientation,
    size
  });
  const classes2 = useUtilityClasses84(ownerState);
  const handleChange = (event, buttonValue) => {
    if (!onChange) {
      return;
    }
    const index2 = value && value.indexOf(buttonValue);
    let newValue;
    if (value && index2 >= 0) {
      newValue = value.slice();
      newValue.splice(index2, 1);
    } else {
      newValue = value ? value.concat(buttonValue) : [buttonValue];
    }
    onChange(event, newValue);
  };
  const handleExclusiveChange = (event, buttonValue) => {
    if (!onChange) {
      return;
    }
    onChange(event, value === buttonValue ? null : buttonValue);
  };
  return (0, import_jsx_runtime156.jsx)(ToggleButtonGroupRoot, _extends({
    role: "group",
    className: clsx_m_default(classes2.root, className),
    ref,
    ownerState
  }, other, {
    children: React131.Children.map(children, (child) => {
      if (!React131.isValidElement(child)) {
        return null;
      }
      if (true) {
        if ((0, import_react_is8.isFragment)(child)) {
          console.error(["MUI: The ToggleButtonGroup component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join("\n"));
        }
      }
      return React131.cloneElement(child, {
        className: clsx_m_default(classes2.grouped, child.props.className),
        onChange: exclusive ? handleExclusiveChange : handleChange,
        selected: child.props.selected === void 0 ? isValueSelected(child.props.value, value) : child.props.selected,
        size: child.props.size || size,
        fullWidth,
        color: child.props.color || color2,
        disabled: child.props.disabled || disabled
      });
    })
  }));
});
true ? ToggleButtonGroup.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * The content of the component.
   */
  children: import_prop_types103.default.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: import_prop_types103.default.object,
  /**
   * @ignore
   */
  className: import_prop_types103.default.string,
  /**
   * The color of the button when it is selected.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'standard'
   */
  color: import_prop_types103.default.oneOfType([import_prop_types103.default.oneOf(["standard", "primary", "secondary", "error", "info", "success", "warning"]), import_prop_types103.default.string]),
  /**
   * If `true`, the component is disabled. This implies that all ToggleButton children will be disabled.
   * @default false
   */
  disabled: import_prop_types103.default.bool,
  /**
   * If `true`, only allow one of the child ToggleButton values to be selected.
   * @default false
   */
  exclusive: import_prop_types103.default.bool,
  /**
   * If `true`, the button group will take up the full width of its container.
   * @default false
   */
  fullWidth: import_prop_types103.default.bool,
  /**
   * Callback fired when the value changes.
   *
   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.
   * @param {any} value of the selected buttons. When `exclusive` is true
   * this is a single value; when false an array of selected values. If no value
   * is selected and `exclusive` is true the value is null; when false an empty array.
   */
  onChange: import_prop_types103.default.func,
  /**
   * The component orientation (layout flow direction).
   * @default 'horizontal'
   */
  orientation: import_prop_types103.default.oneOf(["horizontal", "vertical"]),
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: import_prop_types103.default.oneOfType([import_prop_types103.default.oneOf(["small", "medium", "large"]), import_prop_types103.default.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: import_prop_types103.default.oneOfType([import_prop_types103.default.arrayOf(import_prop_types103.default.oneOfType([import_prop_types103.default.func, import_prop_types103.default.object, import_prop_types103.default.bool])), import_prop_types103.default.func, import_prop_types103.default.object]),
  /**
   * The currently selected value within the group or an array of selected
   * values when `exclusive` is false.
   *
   * The value must have reference equality with the option in order to be selected.
   */
  value: import_prop_types103.default.any
} : void 0;

// node_modules/@mui/material/useScrollTrigger/useScrollTrigger.js
init_extends();
init_objectWithoutPropertiesLoose();
var React132 = __toESM(require_react());

// node_modules/@mui/material/useAutocomplete/useAutocomplete.js
init_AutocompleteUnstyled();
init_AutocompleteUnstyled();

// node_modules/@mui/material/index.js
init_composeClasses();
init_generateUtilityClass();
init_generateUtilityClass();

// node_modules/@mui/material/generateUtilityClasses/index.js
init_esm();

// node_modules/@mui/material/Unstable_TrapFocus/index.js
init_FocusTrap();

// node_modules/@devexpress/dx-react-chart-material-ui/dist/dx-react-chart-material-ui.es.js
init_clsx_m();
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols2 = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) {
      symbols2 = symbols2.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }
    keys.push.apply(keys, symbols2);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _extends2() {
  _extends2 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends2.apply(this, arguments);
}
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose2(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
var _excluded96 = ["className"];
var getBorderColor = function getBorderColor2(theme) {
  return theme.palette.mode === "light" ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68);
};
var PREFIX = "Target";
var classes = {
  root: "".concat(PREFIX, "-root")
};
var withClassName = function withClassName2() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  var setClassName3 = function setClassName4(_ref) {
    var className = _ref.className, restProps = _objectWithoutProperties(_ref, _excluded96);
    return _objectSpread2({
      className: clsx_m_default(classes.root, className)
    }, restProps);
  };
  return function(Target) {
    return styled_default(withPatchedProps(setClassName3)(Target)).apply(void 0, args);
  };
};
var styles5 = function styles6(_ref) {
  var theme = _ref.theme;
  var _theme$typography = theme.typography, fontFamily = _theme$typography.fontFamily, fontSize = _theme$typography.fontSize, fontWeightLight = _theme$typography.fontWeightLight;
  return _defineProperty({}, "&.".concat(classes.root), {
    fontFamily,
    fontSize,
    fontWeight: fontWeightLight,
    display: "flex",
    flexDirection: "column",
    padding: "10px",
    boxSizing: "border-box"
  });
};
var Root2 = withClassName(styles5)(Chart.Root);
var styles$1 = function styles7(_ref) {
  var theme = _ref.theme;
  var fontFamily = theme.typography.fontFamily;
  return _defineProperty({}, "&.".concat(classes.root), {
    fill: theme.palette.text.secondary,
    fontFamily,
    fontSize: 12,
    fontWeight: 400
  });
};
var Label2 = withClassName(styles$1)(Chart.Label);
var _excluded$1 = ["children"];
var palette = ["#42A5F5", "#FF7043", "#9CCC65", "#FFCA28", "#26A69A", "#EC407A"];
var ChartWithPalette = function ChartWithPalette2(_ref) {
  var children = _ref.children, props = _objectWithoutProperties(_ref, _excluded$1);
  return (0, import_react5.createElement)(Chart, props, (0, import_react5.createElement)(Palette, {
    scheme: palette
  }), children);
};
ChartWithPalette.components = Chart.components;
true ? ChartWithPalette.propTypes = {
  children: import_prop_types104.default.node.isRequired
} : void 0;
var Chart2 = withComponents({
  Root: Root2
})(ChartWithPalette);
Chart2.Label = Label2;
var styles$2 = function styles8() {
  return _defineProperty({}, "&.".concat(classes.root), {
    paddingTop: 16,
    paddingBottom: 16
  });
};
var Root$12 = withClassName(styles$2, {
  name: "LegendRoot"
})(List_default);
var _excluded$2 = ["text"];
var styles$3 = function styles9() {
  return _defineProperty({}, "&.".concat(classes.root), {
    fontSize: 14,
    paddingLeft: 8,
    paddingRight: 8
  });
};
var Label$12 = withClassName(styles$3, {
  name: "LegendLabel"
})(function(_ref2) {
  var text = _ref2.text, restProps = _objectWithoutProperties(_ref2, _excluded$2);
  return (0, import_react5.createElement)(ListItemText_default, restProps, text);
});
var styles$4 = function styles10(_ref) {
  var theme = _ref.theme;
  return _defineProperty({}, "&.".concat(classes.root), {
    alignItems: "center",
    paddingTop: theme.spacing(0.5),
    paddingBottom: theme.spacing(0.5)
  });
};
var Item = withClassName(styles$4, {
  name: "LegendItem"
})(ListItem_default);
var Legend2 = withComponents({
  Root: Root$12,
  Item,
  Label: Label$12
})(Legend);
var _excluded$3 = ["text"];
var styles$5 = function styles11() {
  return _defineProperty({}, "&.".concat(classes.root), {
    textAlign: "center",
    width: "100%",
    marginBottom: "20px"
  });
};
var Text = withClassName(styles$5, {
  name: "Title"
})(function(_ref2) {
  var text = _ref2.text, restProps = _objectWithoutProperties(_ref2, _excluded$3);
  return (0, import_react5.createElement)(Typography_default, _extends2({
    component: "h3",
    variant: "h5"
  }, restProps), text);
});
var Title2 = withComponents({
  Text
})(Title);
var _excluded$4 = ["className"];
var PREFIX$1 = "Point";
var classes$1 = {
  point: "".concat(PREFIX$1, "-point")
};
var setClassName = function setClassName2(props) {
  if (props.state) {
    var className = props.className, rest = _objectWithoutProperties(props, _excluded$4);
    return _objectSpread2({
      className: clsx_m_default(classes$1.point, className)
    }, rest);
  }
  return props;
};
var Point2 = styled_default(withPatchedProps(setClassName)(ScatterSeries.Point))(function(_ref) {
  var theme = _ref.theme;
  return _defineProperty({}, "&.".concat(classes$1.point), {
    fill: theme.palette.background.paper
  });
});
var ScatterSeries2 = withComponents({
  Point: Point2
})(ScatterSeries);
var styles$6 = function styles12() {
  return _defineProperty({}, "&.".concat(classes.root), {
    shapeRendering: "crispEdges"
  });
};
var Root$2 = withClassName(styles$6)(Axis.Root);
var styles$7 = function styles13(_ref) {
  var theme = _ref.theme;
  return _defineProperty({}, "&.".concat(classes.root), {
    stroke: getBorderColor(theme),
    shapeRendering: "crispEdges"
  });
};
var Tick = withClassName(styles$7)(Axis.Tick);
var styles$8 = function styles14(_ref) {
  var theme = _ref.theme;
  var fontFamily = theme.typography.fontFamily;
  return _defineProperty({}, "&.".concat(classes.root), {
    fill: theme.palette.text.secondary,
    fontFamily,
    fontSize: 12,
    fontWeight: 400,
    backgroundColor: theme.palette.background.paper
  });
};
var Label$2 = withClassName(styles$8)(Axis.Label);
var styles$9 = function styles15(_ref) {
  var theme = _ref.theme;
  return _defineProperty({}, "&.".concat(classes.root), {
    stroke: getBorderColor(theme),
    shapeRendering: "crispEdges"
  });
};
var Line2 = withClassName(styles$9)(Axis.Line);
var styles$a = function styles16(_ref) {
  var theme = _ref.theme;
  return _defineProperty({}, "&.".concat(classes.root), {
    stroke: getBorderColor(theme),
    shapeRendering: "crispEdges"
  });
};
var Grid3 = withClassName(styles$a)(Axis.Grid);
var ValueAxis2 = withComponents({
  Root: Root$2,
  Tick,
  Label: Label$2,
  Line: Line2,
  Grid: Grid3
})(ValueAxis);
var ArgumentAxis2 = withComponents({
  Root: Root$2,
  Tick,
  Label: Label$2,
  Line: Line2,
  Grid: Grid3
})(ArgumentAxis);
var _excluded$5 = ["className", "children", "target", "rotated", "arrowComponent"];
var PREFIX$2 = "Overlay";
var classes$2 = {
  popper: "".concat(PREFIX$2, "-popper")
};
var StyledPopper = styled_default(Popper_default)(function() {
  return _defineProperty({}, "&.".concat(classes$2.popper), {
    zIndex: 1
  });
});
var popperModifiers = function popperModifiers2(arrowRef) {
  return [{
    name: "flip",
    enabled: false
  }, {
    name: "arrow",
    enabled: true,
    options: {
      element: arrowRef
    }
  }, {
    name: "offset",
    options: {
      offset: [0, 9]
    }
  }];
};
var Overlay = function Overlay2(_ref2) {
  var className = _ref2.className, children = _ref2.children, target = _ref2.target, rotated = _ref2.rotated, ArrowComponent = _ref2.arrowComponent, restProps = _objectWithoutProperties(_ref2, _excluded$5);
  var _React$useState = (0, import_react5.useState)(null), _React$useState2 = _slicedToArray(_React$useState, 2), arrowRef = _React$useState2[0], setArrowRef = _React$useState2[1];
  var placement = rotated ? RIGHT : TOP;
  return (0, import_react5.createElement)(StyledPopper, _extends2({
    open: true,
    anchorEl: target,
    placement,
    className: clsx_m_default(classes$2.popper, className),
    modifiers: popperModifiers(arrowRef)
  }, restProps), children, (0, import_react5.createElement)(ArrowComponent, {
    placement,
    ref: setArrowRef
  }));
};
true ? Overlay.propTypes = {
  className: import_prop_types104.default.string,
  children: import_prop_types104.default.node.isRequired,
  target: import_prop_types104.default.any.isRequired,
  rotated: import_prop_types104.default.bool.isRequired,
  arrowComponent: import_prop_types104.default.oneOfType([import_prop_types104.default.func, import_prop_types104.default.object]).isRequired
} : void 0;
Overlay.defaultProps = {
  className: void 0
};
var _excluded$6 = ["text", "targetItem"];
var styles$b = function styles17(_ref) {
  var theme = _ref.theme;
  return _defineProperty({}, "&.".concat(classes.root), {
    fontSize: 14,
    padding: theme.spacing(0.5)
  });
};
var Content = withClassName(styles$b, {
  name: "TooltipContent"
})(function(_ref3) {
  var text = _ref3.text, targetItem = _ref3.targetItem, restProps = _objectWithoutProperties(_ref3, _excluded$6);
  return (0, import_react5.createElement)(Typography_default, restProps, text);
});
var _excluded$7 = ["className", "placement"];
var PREFIX$3 = "Arrow";
var classes$3 = {
  "arrow-top": "".concat(PREFIX$3, "-arrow-top"),
  "arrow-right": "".concat(PREFIX$3, "-arrow-right")
};
var Root$3 = styled_default("div")(function(_ref) {
  var _ref2;
  var theme = _ref.theme;
  var arrowSize = theme.spacing(1.2);
  var arrowWidth = theme.spacing(2.4);
  return _ref2 = {}, _defineProperty(_ref2, "&.".concat(classes$3["arrow-top"]), {
    width: arrowWidth,
    height: arrowSize,
    position: "absolute",
    top: "100%",
    overflow: "hidden",
    "&::after": {
      content: '""',
      position: "absolute",
      width: arrowSize,
      height: arrowSize,
      background: theme.palette.background.paper,
      transform: "translateX(-50%) translateY(-50%) rotate(45deg)",
      left: "50%",
      boxShadow: theme.shadows[2]
    }
  }), _defineProperty(_ref2, "&.".concat(classes$3["arrow-right"]), {
    width: arrowSize,
    height: arrowWidth,
    position: "absolute",
    top: "25%",
    transform: "translateX(-100%)",
    overflow: "hidden",
    "&::after": {
      content: '""',
      position: "absolute",
      width: arrowSize,
      height: arrowSize,
      background: theme.palette.background.paper,
      transform: "translateX(-50%) translateY(-50%) rotate(45deg)",
      top: "50%",
      left: "100%",
      boxShadow: theme.shadows[2]
    }
  }), _ref2;
});
var Arrow = (0, import_react5.forwardRef)(function(_ref3, ref) {
  var className = _ref3.className, placement = _ref3.placement, restProps = _objectWithoutProperties(_ref3, _excluded$7);
  return (0, import_react5.createElement)(Root$3, _extends2({
    className: clsx_m_default(classes$3["arrow-".concat(placement)], className),
    ref
  }, restProps));
});
Arrow.propTypes = {
  placement: import_prop_types104.default.string.isRequired,
  className: import_prop_types104.default.string
};
Arrow.defaultProps = {
  className: void 0
};
var styles$c = function styles18(_ref) {
  var theme = _ref.theme;
  return _defineProperty({}, "&.".concat(classes.root), {
    padding: theme.spacing(0.5, 1)
  });
};
var Sheet = withClassName(styles$c)(function(props) {
  return (0, import_react5.createElement)(Paper_default, props);
});
var Tooltip4 = withComponents({
  Overlay,
  Content,
  Sheet,
  Arrow
})(Tooltip);
var styles$d = function styles19(_ref) {
  var theme = _ref.theme;
  return _defineProperty({}, "&.".concat(classes.root), {
    fill: theme.palette.primary.main,
    opacity: 0.2
  });
};
var DragBox2 = withClassName(styles$d)(ZoomAndPan.DragBox);
var ZoomAndPan2 = withComponents({
  DragBox: DragBox2
})(ZoomAndPan);
export {
  AreaSeries,
  ArgumentAxis2 as ArgumentAxis,
  BarSeries,
  Chart2 as Chart,
  Legend2 as Legend,
  LineSeries,
  PieSeries,
  ScatterSeries2 as ScatterSeries,
  SplineSeries,
  Title2 as Title,
  Tooltip4 as Tooltip,
  ValueAxis2 as ValueAxis,
  ZoomAndPan2 as ZoomAndPan
};
/*! Bundled license information:

@devexpress/dx-core/dist/dx-core.es.js:
  (*! *****************************************************************************
  Copyright (c) Microsoft Corporation.
  
  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.
  
  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** *)

@devexpress/dx-react-core/dist/dx-react-core.es.js:
  (*! *****************************************************************************
  Copyright (c) Microsoft Corporation.
  
  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.
  
  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** *)

@devexpress/dx-chart-core/dist/dx-chart-core.es.js:
  (*! *****************************************************************************
  Copyright (c) Microsoft Corporation.
  
  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.
  
  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** *)

@devexpress/dx-react-chart/dist/dx-react-chart.es.js:
  (*! *****************************************************************************
  Copyright (c) Microsoft Corporation.
  
  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.
  
  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** *)

@mui/material/index.js:
  (**
   * @mui/material v5.11.6
   *
   * @license MIT
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
*/
//# sourceMappingURL=@devexpress_dx-react-chart-material-ui.js.map
